[{
  "_id": {
    "$oid": "63f8910aefae38c774194ea1"
  },
  "id": 1,
  "title": "NPS score",
  "description": "Measure of customer satisfaction",
  "type": "quantitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "FaceSmileIcon",
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "63f8910aefae38c774194ea2"
  },
  "id": 2,
  "title": "Survey analysis",
  "description": "Insights from a survey",
  "type": "qualitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "BeakerIcon",
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "63f8910aefae38c774194ea3"
  },
  "id": 3,
  "title": "User quote",
  "description": "Quote from a target user",
  "type": "qualitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "ChatBubbleBottomCenterTextIcon",
  "parameters": {
    "category": {
      "type": "string",
      "title": "Category"
    },
    "specificity": {
      "type": "scale",
      "title": "Specificity"
    }
  },
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "63f8910aefae38c774194ea4"
  },
  "id": 4,
  "title": "User need",
  "description": "A specific user need",
  "type": "qualitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "ExclamationTriangleIcon",
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "63f8910aefae38c774194ea5"
  },
  "id": 5,
  "title": "Solution fit",
  "description": "Indication that a solution is a good fit",
  "type": "qualitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "PuzzlePieceIcon",
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "63f8910aefae38c774194ea6"
  },
  "id": 6,
  "title": "Survey",
  "description": "Survey undertaken with target audience",
  "parameters": {
    "anonymous": {
      "type": "boolean",
      "title": "Anonymous",
      "description": "Survey conducted under anonymous conditions"
    },
    "sample": {
      "type": "integer",
      "title": "Sample size",
      "description": "Size of audience"
    },
    "geography": {
      "type": "countries",
      "title": "Geographies",
      "description": "Geogrpahies audience was sourced from"
    }
  },
  "icon": "UserGroupIcon",
  "actions": [
    {
      "key": "build_view",
      "target": "evidence",
      "title": "Create view",
      "field": "title",
      "referenceId": 79,
      "menu": false,
      "manualFields": [
        "referenceId"
      ],
      "baseCategory": 42
    }
  ],
  "evidenceCategories": [
    1,
    2,
    79,
    80
  ],
  "resultCategories": [
    {
      "id": 0,
      "title": "Result",
      "plurals": "Results",
      "resultCategoryId": 79,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "contact",
              "role",
              "company"
            ],
            "sort": "contactName"
          },
          "table": {
            "fields": [
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "title"
          },
          "createFromUpload": true
        },
        "default": "cards"
      }
    },
    {
      "id": 1,
      "title": "Problem Map",
      "plurals": "Problem Maps",
      "resultCategoryId": 42,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "cluster": {
            "show": true
          },
          "default": "table",
          "fullPageExplorer": true,
          "viewer": true,
          "descend": true
        },
        "create": {
          "default": {
            "action": {
              "key": "build_view"
            },
            "actionFields": {
              "referenceId": {
                "title": "Items to include",
                "primitiveTypes": [
                  "evidence",
                  "detail"
                ],
                "allowNone": true,
                "type": "category_source"
              },
              "descend": {
                "title": "Include nested items",
                "type": "boolean"
              }
            }
          }
        }
      }
    }
  ],
  "primitiveType": "activity"
},
{
  "_id": {
    "$oid": "63f8910aefae38c774194ea7"
  },
  "id": 7,
  "title": "User interviews",
  "description": "Target user interview campaign",
  "parameters": {
    "topics": {
      "type": "list",
      "title": "Topics"
    },
    "sample": {
      "type": "integer",
      "title": "Sample size",
      "description": "Number of planned interviews"
    },
    "source": {
      "type": "text",
      "title": "Source",
      "description": "Where the interviewees will be sourced from"
    }
  },
  "actions": [
    {
      "key": "categorize",
      "title": "Auto discover from descriptions",
      "target": "evidence",
      "field": "title",
      "count": 10,
      "dataType": "problem statements",
      "resultCategory": 32,
      "type": "evidence",
      "referenceId": 10
    },
    {
      "key": "mark_categories",
      "title": "Auto categorize entities",
      "target": "evidence",
      "field": "title",
      "count": 10,
      "dataType": "problem statements",
      "themes": "user problems",
      "type": "evidence",
      "engine": "gpt4",
      "referenceId": 10
    },
    {
      "key": "roll_up",
      "target": "evidence",
      "title": "Roll-up evidence",
      "field": "title",
      "menu": "true",
      "resultCategory": 36
    },
    {
      "key": "roll_up_selection",
      "command": "roll_up",
      "target": "evidence",
      "title": "Build clusters",
      "field": "title",
      "menu": "true",
      "actionFields": {
        "referenceId": {
          "title": "Items to cluster",
          "type": "category_source"
        }
      },
      "baseCategory": 42,
      "resultCategory": 36
    },
    {
      "key": "build_view",
      "target": "evidence",
      "title": "Create view",
      "field": "title",
      "menu": "false",
      "manualFields": [
        "referenceId"
      ],
      "baseCategory": 42
    },
    {
      "key": "process_questions_on_main",
      "command": "cascade",
      "referenceId": 9,
      "cascadeKey": [
        "questions"
      ],
      "target": "descend",
      "title": "Process questions on interviews",
      "menu": "true"
    },
    {
      "key": "embed_interviews",
      "command": "cascade",
      "referenceId": 9,
      "cascadeKey": [
        "embed_content"
      ],
      "target": "descend",
      "title": "Run Embeddings",
      "menu": "true"
    },
    {
      "key": "build_generic_view",
      "command": "build_generic_view",
      "title": "Create view",
      "field": "title",
      "menu": false,
      "baseCategory": 97,
      "actionFields": {
        "referenceId": {
          "title": "Items to cluster",
          "referenceIds": [
            10,
            29,
            34,
            63,
            78
          ],
          "type": "category_source",
          "allowNone": true
        },
        "descend": {
          "title": "Include nested items",
          "type": "boolean"
        }
      }
    }
  ],
  "metrics": {
    "conversion": {
      "type": "integer",
      "title": "Conversion",
      "description": "Track conversion metrics",
      "icon": "ChartBarIcon"
    },
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "A count of interviews in a particular state"
    }
  },
  "icon": "UserGroupIcon",
  "sections": {
    "questions": true,
    "categories": true
  },
  "reports": [
    0
  ],
  "resultCategories": [
    {
      "id": 0,
      "title": "Interview",
      "plurals": "Interviews",
      "resultCategoryId": 9,
      "relationships": {
        "identified": {
          "order": 0,
          "title": "Identified",
          "color": "orange"
        },
        "contacted": {
          "order": 1,
          "title": "Contacted",
          "color": "yellow"
        },
        "scheduled": {
          "order": 2,
          "title": "Scheduled",
          "color": "green"
        },
        "completed": {
          "order": 3,
          "title": "Completed",
          "color": "cyan"
        }
      },
      "views": {
        "options": {
          "cards": {
            "fields": [
              "contact",
              "role",
              "company"
            ],
            "sort": "contactName"
          },
          "table": {
            "fields": [
              {
                "field": "contact",
                "name": "Contact name"
              },
              {
                "field": "role",
                "name": "Role"
              },
              {
                "field": "company",
                "name": "Company"
              }
            ],
            "sort": "contactName"
          },
          "kaban": {
            "fields": [
              "contact",
              "company"
            ],
            "sort": "contactName"
          },
          "summary": {
            "left": {
              "title": "Quotes",
              "sort": {
                "field": "specificity",
                "reverse": true
              },
              "count": 5,
              "categoryIds": [
                3
              ]
            },
            "main": [
              {
                "title": "Problems",
                "categoryIds": [
                  10
                ],
                "count": 8,
                "sort": {
                  "field": "scale",
                  "reverse": true
                }
              },
              {
                "title": "Needs",
                "categoryIds": [
                  4
                ]
              }
            ]
          }
        },
        "default": "cards"
      }
    },
    {
      "id": 1,
      "title": "Segment",
      "plurals": "Segmentation",
      "resultCategoryId": 36,
      "views": {
        "options": {
          "list": {
            "fields": [
              "title"
            ],
            "sort": "title"
          }
        },
        "default": "list"
      }
    },
    {
      "id": 2,
      "title": "Problem Map",
      "plurals": "Problem Maps",
      "resultCategoryId": 42,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "cluster": {
            "show": true
          },
          "default": "table",
          "fullPageExplorer": true,
          "viewer": true,
          "descend": true
        },
        "create": {
          "default": {
            "action": {
              "key": "build_view"
            },
            "actionFields": {
              "referenceId": {
                "title": "Items to include",
                "primitiveTypes": [
                  "evidence"
                ],
                "allowNone": true,
                "type": "category_source"
              },
              "descend": {
                "title": "Include nested items",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    {
      "id": 3,
      "title": "Data query",
      "plurals": "Data queries",
      "resultCategoryId": 81,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    }
  ],
  "evidenceCategories": [
    3,
    10,
    4,
    5
  ],
  "primitiveType": "activity"
},
{
  "_id": {
    "$oid": "63f8910aefae38c774194ea8"
  },
  "id": 8,
  "title": "Internal artefact",
  "description": "Internal artefact",
  "parameters": {
    "link": {
      "type": "link",
      "title": "Document",
      "decription": "Document"
    },
    "audio": {
      "type": "link",
      "title": "Audio",
      "decription": "Audio recording"
    },
    "video": {
      "type": "link",
      "title": "Video",
      "decription": "Video recording"
    }
  },
  "icon": "UserGroupIcon",
  "primitiveType": "result"
},
{
  "_id": {
    "$oid": "63f8910aefae38c774194ea9"
  },
  "id": 9,
  "title": "User Interview",
  "description": "Interview with member of target audience",
  "parameters": {
    "contact": {
      "type": "contact",
      "title": "Name",
      "description": "Name of interviewee",
      "default": "None specified",
      "prompt": "What is the name of the person or persons being interviewed?"
    },
    "role": {
      "type": "string",
      "title": "Role",
      "description": "Role of interviewee",
      "prompt": "What is the current role of the person or persons being interviewed?",
      "optional": true
    },
    "company": {
      "type": "string",
      "title": "Company",
      "description": "Company interviewee works at",
      "prompt": "Which company or organisation does the person or persons being interviewed currently work for?",
      "default": "None specified"
    },
    "industry": {
      "type": "string",
      "title": "Industry",
      "description": "Industry interviewee works in",
      "default": "None specified"
    },
    "geography": {
      "type": "countries",
      "title": "Location",
      "description": "Location of interviewee"
    },
    "interviewee": {
      "type": "user",
      "title": "Interviewee",
      "description": "Interviewer"
    },
    "notes": {
      "type": "link",
      "title": "Notes",
      "decription": "Interview notes"
    },
    "transcript": {
      "type": "link",
      "title": "Transcript",
      "decription": "Transcript of interview",
      "extra": true
    },
    "audio": {
      "type": "link",
      "title": "Audio",
      "decription": "Audio recording of interview",
      "extra": true
    },
    "video": {
      "type": "link",
      "title": "Video",
      "decription": "Video recording of interview",
      "extra": true
    },
    "function": {
      "type": "string",
      "title": "Function",
      "description": "Functioanl role of interviewee",
      "optional": true
    },
    "summary": {
      "type": "long_string",
      "description": "Summary",
      "title": "Summary",
      "optional": true,
      "promptBlank": "Summarize the comments from the interviewee - ignoring any unanswered questions or prompts from the interviewer- in a single paragraph",
      "prompt": "Summarize the comments from the interviewee related to {t} - ignoring any unanswered questions or prompts from the interviewer- in a single paragraph",
      "promptParentModifier": "referenceParameters.topics",
      "promptType": "task",
      "summarize": true
    }
  },
  "icon": "ChatBubbleBottomCenterTextIcon",
  "primitiveType": "result",
  "actions": [
    {
      "key": "questions",
      "command": "questions",
      "title": "Process questions",
      "menu": true,
      "icon": "QuestionIcon"
    },
    {
      "key": "embed_content",
      "title": "Embed Content",
      "menu": true,
      "icon": "QuestionIcon"
    }
  ],
  "openai": {
    "opener": "here is a transcript of an interview",
    "descriptor": "Answer the following questions using information from the transcript:",
    "responseInstructions": "Your response must be in json format and should include each question or task with the key set to the question or task number and with an array of results. For question, each entry in the array must have a \"quote\" field containing the original text, a \"answer\" field containing your answer. If there is no result for a specific question set the \"quote\" field to \"none\" and exclude the \"answer\" field. For each task just provide an entry with an \"answer\" field set to your response.",
    "____prompts": [
      {
        "type": "question",
        "prompt": "What is the name of the person or persons being interviewed?",
        "field": "name"
      },
      {
        "type": "question",
        "prompt": "What is the current role of the person or persons being interviewed?",
        "field": "role"
      },
      {
        "type": "question",
        "prompt": "Which company or organisation does the person or persons being interviewed currently work for?",
        "field": "company"
      },
      {
        "type": "instruction",
        "prompt": "Also complete the following tasks:"
      },
      {
        "type": "task",
        "prompt": "Summarize the interview in a single paragraph",
        "field": "summary"
      }
    ],
    "resultCatgeory": 4
  },
  "promptCategories": [
    13,
    14,
    21,
    50,
    51
  ],
  "evidenceCategories": [
    3,
    10,
    4,
    5
  ],
  "prompts": [
    19
  ],
  "reports": true,
  "do_discovery": true
},
{
  "_id": {
    "$oid": "641b22e100bc882392e1e3c1"
  },
  "id": 10,
  "title": "User Problem statement",
  "description": "Problem statement from a user",
  "type": "qualitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "BoltIcon",
  "parameters": {
    "description": {
      "title": "Description",
      "type": "string"
    },
    "target": {
      "title": "Problem for",
      "type": "string"
    },
    "solution": {
      "title": "Solution",
      "type": "string"
    },
    "provider": {
      "title": "Solution provider",
      "type": "string"
    },
    "class": {
      "title": "Class",
      "type": "string"
    },
    "scale": {
      "type": "scale",
      "title": "Scale"
    },
    "specificity": {
      "type": "scale",
      "title": "Specificity"
    },
    "important": {
      "type": "flag",
      "title": "Flag",
      "color": "purple",
      "showEmpty": true
    }
  },
  "primitiveType": "evidence",
  "ai": {
    "summarize": {
      "summary": {
        "dataTypes": "problem statements",
        "prompt": "Produce a summary a 100-150 word summary of the problems being faced in this segment. Ensure you capture the nuances of all problems but do not focus on the nuances of any particular problem. Do not create a long list of problems - create a readable paragrpah or 2 - and use the form \"Problems related to...\""
      },
      "overview": {
        "dataTypes": "problem statements",
        "prompt": "Produce a 3 paragrpah summary of 200-300 words detailing the problems described in the list ensuring you focus on the recurring and common themes - avoid mentioning any company, group, region or person unless it is a common factor in the majority of problems. Create readable paragraphs rather than a long list and do not refer specifically to the list i have given to you."
      },
      "top_5": {
        "dataTypes": "problem statements",
        "prompt": "Generate a numbered list of the top 5 most prevalent and severe problems by aggregating problem statements together. Avoid generalizations and ensure that a concrete and meaningful problem is specified. Provide the answer in the form \"n) It sucks that...\""
      }
    },
    "extract": {
      "prompt": "Analyze the text to identify and extract problems specifically related to the {task_scope}. Ignore all unrelated or adjacent problems",
      "responseFields": {
        "title": {
          "prompt": "a string containing a concrete, specific and detailed description of the problem in the form 'It sucks that...due to...' ensuring it is clear how the problem relates to {scope} and includes the root cause or complications leading to the problem ",
          "target": "title"
        },
        "target": {
          "prompt": "a string defining which persona or organization has the problem (if specified)",
          "target": "target"
        },
        "quote": {
          "prompt": "an exact quote of up to 25 words from the text i have provided which this problem came from (provide the quote verbatim - do not fix spelling or grammatical errors)",
          "target": "quote"
        },
        "class": {
          "prompt": "set to 'Explicit' if the problem is clearly and explictly stated in the text and framed as an issue of problem in the text, otherwise set to 'Inferred' if the problem has been inferred from the text"
        }
      }
    }
  },
  "renderConfig": {
    "explore": {
      "exportFields": [
        "title"
      ]
    }
  }
},
{
  "_id": {
    "$oid": "642fd143cb8fa623188d6b0b"
  },
  "id": 11,
  "title": "Venture Portfolio",
  "description": "Portfolio view of related ventures",
  "parameters": {
    "area": {
      "type": "text",
      "title": "Area",
      "description": "Area of focus (domain / market / tech)"
    }
  },
  "metrics": {
    "conversion": {
      "type": "integer",
      "title": "Conversion",
      "description": "Track conversion metrics",
      "icon": "ChartBarIcon"
    },
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "A count of ventures in a particular state"
    }
  },
  "icon": "RectangleStackIcon",
  "resultCategories": [
    {
      "id": 0,
      "title": "Venture",
      "plurals": "Ventures",
      "resultCategoryId": 12,
      "relationships": {
        "inkling": {
          "order": 0,
          "title": "Inkling",
          "color": "orange"
        },
        "lpp": {
          "order": 1,
          "title": "LPP",
          "color": "yellow"
        },
        "signal": {
          "order": 2,
          "title": "Signals",
          "color": "green"
        },
        "mvp": {
          "order": 3,
          "title": "MVP",
          "color": "cyan"
        },
        "scale_up": {
          "order": 4,
          "title": "Scale Up",
          "color": "fuchsia"
        }
      },
      "views": {
        "options": {
          "kaban": [
            "title",
            "desirability,feasibility,viability"
          ],
          "cards": {
            "fields": [
              "title",
              "desirability,feasibility,viability",
              "valuation",
              "funding"
            ]
          },
          "wide": true
        },
        "default": "cards",
        "sort": {
          "cards": "title"
        }
      }
    }
  ],
  "evidenceCategories": []
},
{
  "_id": {
    "$oid": "642ffa41cb8fa623188d6b0d"
  },
  "id": 12,
  "title": "Venture",
  "description": "An idea, concept or venture",
  "parameters": {
    "domain": {
      "type": "domain",
      "title": "Domain",
      "description": "Area of focus",
      "order": 2
    },
    "funding": {
      "type": "currency",
      "title": "Funding",
      "description": "Funding / investment",
      "order": 1
    },
    "valuation": {
      "type": "currency",
      "title": "Valuation",
      "description": "Valuation",
      "order": 0
    },
    "viability": {
      "type": "progress",
      "title": "Viability",
      "description": "Viability",
      "color": "#c781ff",
      "order": 4
    },
    "desirability": {
      "type": "progress",
      "title": "Desirability",
      "description": "Desirability",
      "color": "#00D967",
      "order": 3
    },
    "feasibility": {
      "type": "progress",
      "title": "Feasibility",
      "description": "Feasibility",
      "color": "#0394FF",
      "order": 5
    }
  },
  "icon": "RocketLaunchIcon",
  "primitiveType": "venture",
  "resultCategories": [
    {
      "id": 0,
      "title": "Assessment",
      "plurals": "Assessments",
      "resultCategoryId": 15,
      "views": {
        "options": {
          "cards": [
            "title"
          ]
        },
        "default": "cards",
        "sort": {
          "cards": "title"
        }
      }
    },
    {
      "id": 1,
      "title": "Hypothesis",
      "plurals": "Hypotheses",
      "resultCategoryId": 39,
      "descend": true,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title",
              "important"
            ]
          },
          "table": {
            "align": "top",
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "magic": "addresses_components",
                "title": "VFs"
              },
              {
                "field": "state",
                "title": "State",
                "type": "state",
                "width": 40
              },
              {
                "field": "important",
                "title": "Critical",
                "type": "boolean",
                "width": 40
              },
              {
                "field": "title",
                "title": "Hypothesis",
                "width": 300,
                "wideWidth": 0.6,
                "wrap": true
              },
              {
                "magic": "results",
                "resultId": 0,
                "title": "Related activities"
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "table_grid": {
            "align": "top",
            "columns": {
              "magic": "results",
              "resultId": 0,
              "title": "Related activities"
            },
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "magic": "addresses_components",
                "title": "VFs"
              },
              {
                "field": "important",
                "title": "Critical",
                "type": "boolean",
                "width": 40
              },
              {
                "field": "title",
                "title": "Hypothesis",
                "width": 300,
                "wideWidth": 0.5,
                "wrap": true
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table",
          "showLink": true
        },
        "sort": {
          "cards": "title"
        }
      }
    },
    {
      "id": 2,
      "title": "Activity",
      "plurals": "Activities",
      "type": "activity",
      "descend": true,
      "views": {
        "options": {
          "cards": [
            "title",
            "important"
          ],
          "table": {
            "align": "top",
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "state",
                "title": "Status",
                "type": "state",
                "width": 120
              },
              {
                "field": "title",
                "title": "Activity",
                "width": 300,
                "wideWidth": 0.6,
                "wrap": true
              },
              {
                "field": "metadataInfo",
                "title": "Type",
                "width": 200,
                "wideWidth": 0.2,
                "wrap": true
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table",
          "showLink": true
        },
        "sort": {
          "cards": "title"
        }
      }
    }
  ]
},
{
  "_id": {
    "$oid": "6443fde557c8a682c5321ef7"
  },
  "id": 13,
  "title": "OpenAI user problem prompt (interview transcript)",
  "description": "OpenAI GPT-3 prompt to analyze text for user problems",
  "base": "Extract a maximum of ${n} problems explicity stated in the answers given by the interviewee which relate to ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of problems",
      "default": 5
    },
    "topic": {
      "type": "string",
      "title": "Topic",
      "description": "Category or topic that problem should relate to",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "BoltIcon",
  "empty": "Extract a maximum of ${n} problems explicity described in the answers given by the interviewee",
  "summary": "Problems related to",
  "summaryEmpty": "User problems",
  "openai": {
    "opener": "here is a series of questions asked by an interviewer with some reponses provided by an interviewee",
    "_opener": "here is a transcript of an interview",
    "descriptor": "You must extract a series of problems which are explicity described by the interviewee. Questions from the interviewer that have not been answered must be ignored. Do not turn questions into problems.",
    "responseFields": {
      "problem": "intreviewee problems you identify in the form 'It sucks that...'"
    },
    "newProcess": true,
    "resultCategory": 10
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "6448e964abde86b358616b72"
  },
  "id": 14,
  "title": "OpenAI user need prompt (interview transcript)",
  "description": "OpenAI GPT-3 prompt to analyze text for user needs",
  "base": "A maximum of ${n} needs expressed by the interviewee related to ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of problems",
      "default": 5
    },
    "topic": {
      "type": "string",
      "title": "Topic",
      "description": "Category or topic that problem should relate to",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "BoltIcon",
  "empty": "A maximum of ${n} needs expressed by the interviewee",
  "summary": "Needs related to",
  "summaryEmpty": "User needs",
  "openai": {
    "opener": "here is a transcript of an interview",
    "descriptor": "Here are a set of tasks related to extracting needs that the interviewee has.  Assume any sentence ending in a question mark is from the interviewer and should be ignored when extracting needs.\n",
    "responseFields": {
      "need": "interviewee needs you identify"
    },
    "field": "need",
    "resultCategory": 4
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "64578e8180b73a2a4be830c1"
  },
  "id": 15,
  "title": "Assessment",
  "description": "Venture maturity assessment",
  "parameters": {
    "assessor": {
      "type": "user",
      "title": "Assessor",
      "description": "User who did the assessment"
    },
    "levels": {
      "type": "object",
      "hidden": true
    },
    "phase": {
      "type": "phase",
      "title": "Phase",
      "description": "Target phase the assessment is against"
    }
  },
  "icon": "ChartBarIcon",
  "primitiveType": "assessment",
  "resultCategories": [
    {
      "id": 0,
      "title": "Hypothesis",
      "plurals": "Hypotheses",
      "resultCategoryId": 39,
      "descend": true,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title",
              "important"
            ]
          },
          "table": {
            "align": "top",
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "magic": "addresses_components",
                "title": "VFs"
              },
              {
                "field": "state",
                "title": "State",
                "type": "state",
                "width": 100
              },
              {
                "field": "important",
                "title": "Critical",
                "type": "boolean",
                "width": 40
              },
              {
                "field": "title",
                "title": "Hypothesis",
                "width": 300,
                "wideWidth": 0.4,
                "wrap": true
              },
              {
                "magic": "relationship",
                "relationship": "candidate",
                "title": "Candidate",
                "width": 300
              },
              {
                "magic": "relationship",
                "relationship": "positive",
                "title": "Positive",
                "width": 300
              },
              {
                "magic": "relationship",
                "relationship": "negative",
                "title": "Negative",
                "width": 300
              },
              {
                "magic": "results",
                "resultId": 0,
                "title": "Related activities",
                "width": 300
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "table_grid": {
            "align": "top",
            "columns": {
              "magic": "results",
              "resultId": 0,
              "title": "Related activities"
            },
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "magic": "addresses_components",
                "title": "VFs"
              },
              {
                "field": "important",
                "title": "Critical",
                "type": "boolean",
                "width": 40
              },
              {
                "field": "title",
                "title": "Hypothesis",
                "width": 300,
                "wideWidth": 0.5,
                "wrap": true
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "explore": {
            "compare": true
          },
          "default": "table",
          "showLink": true,
          "descend": true
        },
        "sort": {
          "cards": "title"
        }
      }
    }
  ],
  "actions": [
    {
      "key": "assess_hypotheses",
      "title": "Align evidence to hypotheses",
      "menu": true
    }
  ]
},
{
  "_id": {
    "$oid": "6469197780b73a2a4be830e5"
  },
  "id": 16,
  "title": "Aggregate evidence",
  "description": "Aggregation of evidence",
  "type": "qualitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "Square3Stack3DIcon",
  "parameters": {},
  "primitiveType": "evidence",
  "isAggregation": true
},
{
  "_id": {
    "$oid": "646dcd8a60440288355e3278"
  },
  "id": 17,
  "title": "Onboard project",
  "description": "Get up to speed on a new project, understand current status and the work to be done",
  "parameters": {
    "contact": {
      "type": "contact",
      "title": "Client stakeholder",
      "description": "Name of the project owner, manager or sponsor (Client side)",
      "default": "None specified"
    },
    "title": {
      "type": "string",
      "title": "Project",
      "description": "title or name of project",
      "default": "None specified"
    },
    "company": {
      "type": "string",
      "title": "Company",
      "description": "Client company",
      "default": "None specified"
    }
  },
  "icon": "SparklesIcon",
  "primitiveType": "activity",
  "resultCategories": [
    {
      "id": 0,
      "title": "Background document",
      "plurals": "Background documents",
      "resultCategoryId": 18,
      "views": {
        "list": {
          "cards": [
            "title",
            "company"
          ]
        },
        "default": "cards",
        "sort": {
          "cards": "title"
        }
      },
      "sort": {
        "list": "title"
      }
    }
  ]
},
{
  "_id": {
    "$oid": "646dd00b60440288355e3279"
  },
  "id": 18,
  "title": "Background document",
  "description": "Document describing state of a project such as background, work to date, open questions",
  "parameters": {
    "description": {
      "type": "string",
      "title": "Description",
      "description": "The source / orirgin of the document and what it contains"
    },
    "notes": {
      "type": "link",
      "title": "Notes",
      "decription": "Interview notes"
    }
  },
  "icon": "DocumentTextIcon",
  "primitiveType": "result",
  "evidenceCategories": [
    3,
    10,
    4,
    20,
    5,
    1,
    2,
    23
  ],
  "promptCategories": [
    19
  ],
  "openai": {
    "opener": "here is a project onboarding document which describes the background of a project, its status and progress, and open questions / activities",
    "descriptor": "Complete the following task(s) using information from the document only:",
    "responseInstructions": "Your response must be in json format and should include task with the key set to task number and with an array of results. For question, each entry in the array must have a \"quote\" field containing the original text, a \"answer\" field containing your answer. If there is no result for a specific question set the \"quote\" field to \"none\" and exclude the \"answer\" field. For each task just provide an entry with an \"answer\" field set to your response.",
    "prompts": [
      {
        "type": "task",
        "prompt": "Summarize the status and next steps in a single paragraph",
        "field": "summary"
      }
    ],
    "resultCatgeory": 4
  },
  "do_discovery": true,
  "actions": [
    {
      "key": "embed_content",
      "title": "Embed Content",
      "menu": true,
      "icon": "QuestionIcon"
    }
  ]
},
{
  "_id": {
    "$oid": "646dd6a160440288355e327a"
  },
  "id": 19,
  "title": "OpenAI Jobs To Be Done prompt",
  "description": "OpenAI GPT-3 prompt to analyze text for stated Jobs To Be Done",
  "base": "A maximum of ${n} Jobs To Be Done related to ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of problems",
      "default": 10
    },
    "topic": {
      "type": "string",
      "title": "Topic",
      "description": "Category or topic that the Jobs should relate to",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "BriefcaseIcon",
  "empty": "A maximum of ${n} stated Jobs To Be Done from the document",
  "summary": "Jobs To Be Done related to",
  "summaryEmpty": "Jobs To Be Done",
  "openai": {
    "opener": "here is a document",
    "descriptor": "You must extract a series of Jobs To Be Done which are explicitly stated in the document.",
    "responseInstructions": "Your response must be in json format and should include each task with the key set to the task number and with an array of results. Each entry in the array must have a \"quote\" field containing the original text, a \"job\" field containing the Job To Be Done you identify in the form \"As a [user / actor] I want to [job]\". If there is no result for a specific question set the \"quote\" field to \"none\" and exclude the \"job\" field.",
    "resultCategory": 10,
    "field": "job"
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "646de31160440288355e327b"
  },
  "id": 20,
  "title": "Performance metric",
  "description": "Measure performance metric from a test or activity",
  "type": "quantitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "FAGaugeHighIcon",
  "parameters": {
    "value": {
      "type": "float",
      "title": "Value"
    },
    "category": {
      "type": "options",
      "title": "Type of metric",
      "options": [
        "CTR",
        "CTC",
        "% Churn"
      ]
    },
    "units": {
      "type": "options",
      "title": "Unit of metric",
      "options": [
        "per month",
        "per year"
      ]
    }
  },
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "6475abc3476d4d6bdae5715c"
  },
  "id": 23,
  "title": "Research Statistic",
  "description": "Statistic from research report",
  "type": "quantitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "ReceiptPercentIcon",
  "parameters": {
    "value": {
      "type": "float",
      "title": "Value"
    },
    "units": {
      "type": "options",
      "title": "Unit of metric",
      "options": [
        "per month",
        "per year"
      ]
    }
  },
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "6475abdb476d4d6bdae5715e"
  },
  "id": 22,
  "title": "Expert Interview",
  "description": "Interview with relevant experts",
  "parameters": {
    "contact": {
      "type": "contact",
      "title": "Name",
      "description": "Name of interviewee",
      "default": "None specified",
      "prompt": "What is the name of the person or persons being interviewed?"
    },
    "role": {
      "type": "string",
      "title": "Role",
      "description": "Role of interviewee",
      "prompt": "What is the current role of the person or persons being interviewed?",
      "optional": true
    },
    "company": {
      "type": "string",
      "title": "Company",
      "description": "Company interviewee works at",
      "default": "None specified"
    },
    "expertise": {
      "type": "string",
      "title": "Expertise",
      "description": "Expertise of interviewee",
      "optional": true
    },
    "expertiseType": {
      "type": "option",
      "title": "Type",
      "description": "Type of expertise",
      "options": [
        "market",
        "product",
        "technical"
      ],
      "optional": true
    },
    "geography": {
      "type": "countries",
      "title": "Location",
      "description": "Location of interviewee"
    },
    "interviewee": {
      "type": "user",
      "title": "Interviewee",
      "description": "Interviewer"
    },
    "notes": {
      "type": "link",
      "title": "Notes",
      "decription": "Interview notes"
    },
    "function": {
      "type": "string",
      "title": "Function",
      "description": "Functioanl role of interviewee",
      "optional": true
    },
    "summary": {
      "type": "long_string",
      "description": "Summary",
      "title": "Summary",
      "optional": true,
      "prompt": "Summarize the comments from the interviewee - ignoring any unanswered questions or prompts from the interviewer- in a single paragraph",
      "promptType": "task"
    }
  },
  "icon": "ChatBubbleBottomCenterTextIcon",
  "primitiveType": "result",
  "openai": {
    "opener": "here is a transcript of an interview",
    "descriptor": "Answer the following questions using information from the transcript:",
    "responseInstructions": "Your response must be in json format and should include each question or task with the key set to the question or task number and with an array of results. For question, each entry in the array must have a \"quote\" field containing the original text, a \"answer\" field containing your answer. If there is no result for a specific question set the \"quote\" field to \"none\" and exclude the \"answer\" field. For each task just provide an entry with an \"answer\" field set to your response.",
    "prompts": [
      {
        "type": "question",
        "prompt": "What is the name of the person or persons being interviewed?",
        "field": "name"
      },
      {
        "type": "question",
        "prompt": "What is the current role of the person or persons being interviewed?",
        "field": "role"
      },
      {
        "type": "question",
        "prompt": "What expertise does the person have?",
        "field": "expertise"
      },
      {
        "type": "question",
        "prompt": "Is there expertise mostly technical, market, product or customer related?",
        "field": "expertiseType"
      },
      {
        "type": "question",
        "prompt": "Which company or organisation does the person or persons being interviewed currently work for?",
        "field": "company"
      },
      {
        "type": "instruction",
        "prompt": "Also complete the following tasks:"
      },
      {
        "type": "task",
        "prompt": "Summarize the interview in a single paragraph",
        "field": "summary"
      }
    ],
    "resultCatgeory": 4
  },
  "promptCategories": [
    13,
    14,
    21
  ],
  "evidenceCategories": [
    3,
    10,
    4,
    5,
    24,
    26,
    27,
    28,
    34
  ],
  "actions": [
    {
      "key": "questions",
      "command": "questions",
      "title": "Process questions",
      "menu": true,
      "icon": "QuestionIcon"
    }
  ],
  "do_discovery": true
},
{
  "_id": {
    "$oid": "6475abef476d4d6bdae57160"
  },
  "id": 21,
  "title": "Question prompt",
  "description": "OpenAI GPT-4p prompt to answer questons",
  "base": "Extract a maximum of ${n} answers explicitly provided document which address the following question: ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of answers",
      "default": 10
    },
    "topic": {
      "type": "string",
      "title": "Question",
      "description": "The question to relay",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "QuestionIcon",
  "empty": null,
  "summary": "Question:",
  "summaryEmpty": null,
  "openai": {
    "opener": "here is a document",
    "descriptor": "You must use only the text provided in the document when forming your response",
    "responseFields": {
      "answer": "synthesized response"
    },
    "resultCategory": 31,
    "engine": "gpt4p",
    "field": "answer"
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "64761242476d4d6bdae57162"
  },
  "id": 24,
  "title": "Observed trend",
  "description": "A trend that has been observed rather than measured",
  "type": "quantitative",
  "relationships": {
    "negative": {
      "title": "Negative",
      "icon": "HandThumbDownIcon",
      "bgColor": "orange-400",
      "textColor": "white"
    },
    "positive": {
      "title": "Positive",
      "icon": "HandThumbUpIcon",
      "bgColor": "green-100",
      "textColor": "green-800"
    }
  },
  "icon": "ArrowTrendingUpIcon",
  "parameters": {
    "value": {
      "type": "float",
      "title": "Value"
    },
    "units": {
      "type": "options",
      "title": "Unit of metric",
      "options": [
        "per month",
        "per year"
      ]
    }
  },
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "6476f3ce476d4d6bdae57164"
  },
  "id": 25,
  "title": "Expert interviews",
  "description": "Interview campaign with market, industry or technology expert",
  "sections": {
    "questions": true
  },
  "actions": [
    {
      "key": "process_questions_on_main",
      "command": "cascade",
      "referenceId": 22,
      "cascadeKey": [
        "questions"
      ],
      "target": "descend",
      "title": "Process questions on interviews",
      "menu": "true"
    }
  ],
  "parameters": {
    "sample": {
      "type": "integer",
      "title": "Sample size",
      "description": "Number of planned interviews"
    },
    "source": {
      "type": "text",
      "title": "Source",
      "description": "Where the interviewees will be sourced from"
    }
  },
  "metrics": {
    "conversion": {
      "type": "integer",
      "title": "Conversion",
      "description": "Track conversion metrics",
      "icon": "ChartBarIcon"
    },
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "A count of interviews in a particular state"
    }
  },
  "icon": "UserGroupIcon",
  "resultCategories": [
    {
      "id": 0,
      "title": "Interview",
      "plurals": "Interviews",
      "resultCategoryId": 22,
      "relationships": {
        "identified": {
          "order": 0,
          "title": "Identified",
          "color": "orange"
        },
        "contacted": {
          "order": 1,
          "title": "Contacted",
          "color": "yellow"
        },
        "scheduled": {
          "order": 2,
          "title": "Scheduled",
          "color": "green"
        },
        "completed": {
          "order": 3,
          "title": "Completed",
          "color": "cyan"
        }
      },
      "views": {
        "options": {
          "cards": {
            "fields": [
              "contact",
              "role",
              "company"
            ],
            "sort": "contactName"
          },
          "table": {
            "fields": [
              {
                "field": "contact",
                "name": "Contact name"
              },
              {
                "field": "role",
                "name": "Role"
              },
              {
                "field": "company",
                "name": "Company"
              }
            ],
            "sort": "contactName"
          },
          "kaban": {
            "fields": [
              "contact",
              "company"
            ],
            "sort": "contactName"
          },
          "summary": {
            "left": {
              "title": "Quotes",
              "sort": {
                "field": "specificity",
                "reverse": true
              },
              "count": 5,
              "categoryIds": [
                3
              ]
            },
            "main": [
              {
                "title": "Problems",
                "categoryIds": [
                  10
                ],
                "count": 8,
                "sort": {
                  "field": "scale",
                  "reverse": true
                }
              },
              {
                "title": "Needs",
                "categoryIds": [
                  4
                ]
              }
            ]
          }
        },
        "default": "cards"
      }
    }
  ],
  "evidenceCategories": [
    3,
    10,
    4,
    5
  ],
  "primitiveType": "activity"
},
{
  "_id": {
    "$oid": "6476f76e476d4d6bdae57166"
  },
  "id": 26,
  "title": "Market dynamic",
  "description": "A characteristic of how the market operates",
  "type": "quantitative",
  "icon": "ArrowTrendingUpIcon",
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "6476fe78476d4d6bdae57167"
  },
  "id": 27,
  "title": "Solution",
  "description": "Available solutions",
  "type": "quantitative",
  "icon": "PuzzlePieceIcon",
  "parameters": {
    "target": {
      "type": "string",
      "title": "Target customers",
      "embed": true
    },
    "provider": {
      "type": "string",
      "title": "Provider",
      "embed": true
    },
    "addressing": {
      "type": "string",
      "title": "Problem addressed",
      "embed": true
    }
  },
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "64770093476d4d6bdae57168"
  },
  "id": 28,
  "title": "Solution Issue",
  "description": "An issue with or being tackled by solutions today",
  "type": "quantitative",
  "icon": "BoltIcon",
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "647b289c476d4d6bdae57169"
  },
  "id": 29,
  "title": "Organization",
  "description": "An organization such as a company, not for profit or Government department",
  "icon": "BuildingOffice2Icon",
  "primitiveType": "entity",
  "resultCategories": [
    {
      "id": 0,
      "title": "Article",
      "plurals": "Articles",
      "resultCategoryId": 34,
      "searchCategoryIds": [
        70
      ],
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 1,
      "title": "People",
      "plurals": "People",
      "resultCategoryId": 58,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Name",
                "width": 0.3
              },
              {
                "field": "role",
                "title": "Role",
                "width": 0.3
              },
              {
                "field": "degree_end_year",
                "title": "Graduated (Degree)",
                "width": 0.3
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        }
      }
    },
    {
      "id": 4,
      "title": "Social activity",
      "plurals": "Social activities",
      "searchCategoryIds": [
        108
      ],
      "resultCategoryId": 63,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "createFromPaste": [
            {
              "title": "Social URL",
              "field": "url"
            }
          ]
        }
      }
    },
    {
      "id": 5,
      "title": "Ads",
      "plurals": "Social activities",
      "searchCategoryIds": [
        111
      ],
      "resultCategoryId": 110,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 2,
      "title": "Resouce",
      "plurals": "Resources",
      "resultCategoryId": 78,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.3
              },
              {
                "field": "url",
                "title": "URL",
                "width": 0.3
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table",
          "createFromPaste": [
            {
              "title": "Website URL",
              "field": "url"
            }
          ]
        }
      }
    },
    {
      "id": 3,
      "title": "Detail",
      "plurals": "Details",
      "type": "detail",
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Name",
                "width": 0.3
              },
              {
                "field": "metadataInfo",
                "title": "Type",
                "width": 0.3
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table",
          "descend": "auto"
        }
      }
    }
  ],
  "detailCategoryIds": [
    71,
    72,
    76,
    77
  ],
  "_detailCategoryIds": [
    71,
    72,
    73
  ],
  "actions": [
    {
      "key": "enrich",
      "title": "Enrich from linkedIn",
      "onUpdate": [
        "linkedIn"
      ],
      "onCreate": true,
      "manual": true,
      "menu": true,
      "required": [
        "linkedIn"
      ]
    },
    {
      "key": "enrich_cb",
      "title": "Enrich from crunchbase based on url",
      "onUpdate": [
        "url"
      ],
      "onCreate": true,
      "manual": true,
      "menu": true,
      "required": [
        "url"
      ]
    },
    {
      "key": "base",
      "title": "Enrich company with information from company's website",
      "onCreate": false,
      "onUpdate": false,
      "manual": true,
      "required": [
        "url"
      ]
    },
    {
      "key": "enrich_investment",
      "title": "Enrich company with investment details",
      "menu": true,
      "required": [
        "url"
      ]
    },
    {
      "key": "enrich_employee_count",
      "showInCollection": true,
      "title": "Enrich company with employee count",
      "menu": true,
      "required": [
        "url"
      ]
    },
    {
      "key": "search_similar_desc",
      "title": "Create a search based on this company",
      "command": "build_keywords",
      "field": "param.description",
      "icon": "ArrowsPointingOutIcon",
      "count": 5,
      "ai": {
        "engine": "gpt4p"
      },
      "menu": true
    },
    {
      "key": "search_similar_desc_multi",
      "title": "Create a search based on these companies",
      "command": "build_keywords",
      "field": "param.description",
      "icon": "ArrowsPointingOutIcon",
      "count": 5,
      "ai": {
        "engine": "gpt4p"
      },
      "collectionAction": true
    },
    {
      "key": "find_articles_crunchbase",
      "command": "extract",
      "title": "Find articles",
      "menu": true,
      "actionFields": {
        "keywords": {
          "title": "Keywords",
          "type": "string"
        }
      },
      "showInCollection": true,
      "icon": "NewspaperIcon",
      "resultCategory": 34,
      "type": "result",
      "required": [
        "url"
      ]
    },
    {
      "key": "discover",
      "command": "cascade",
      "referenceId": 34,
      "requiredAction": [
        "find_articles_crunchbase",
        "find_articles_linked"
      ],
      "cascadeKey": [
        "extract_problems_addressed"
      ],
      "title": "Extract market problems from articles",
      "menu": "true"
    },
    {
      "key": "site_discovery_short",
      "requiredAction": [
        "url"
      ],
      "title": "Examine site for information",
      "resultCategoryId": 78,
      "showInCollection": true,
      "actionFields": {
        "force": {
          "title": "Update existing information",
          "type": "boolean",
          "default": false
        }
      },
      "menu": "true"
    },
    {
      "key": "entity_jbtd",
      "title": "Derive key JTBD",
      "resultCategoryId": 52,
      "showInCollection": true,
      "menu": "true"
    },
    {
      "key": "site_discovery",
      "requiredAction": [
        "url"
      ],
      "title": "Extract details from site",
      "resultCategoryId": 78,
      "showInCollection": true,
      "menu": "true"
    },
    {
      "key": "site_summarize",
      "requiredAction": [
        "url"
      ],
      "title": "Consolidate details",
      "resultCategoryId": 78,
      "showInCollection": true,
      "menu": "true"
    },
    {
      "key": "find_staff",
      "title": "Find key people",
      "manual": true,
      "menu": true,
      "resultCategory": 44,
      "roles": [
        "CEO",
        "CMO",
        "marketing director",
        "marketing manager"
      ]
    },
    {
      "key": "mark_child",
      "target": "children",
      "title": "Find most senior",
      "field": "param.role",
      "menu": "true",
      "referenceId": 44
    },
    {
      "key": "embed_resource",
      "command": "cascade",
      "cascadeKey": [
        "embed_content"
      ],
      "referenceId": 78,
      "target": "descend",
      "actionFields": {
        "force": {
          "title": "Update existing information",
          "type": "boolean",
          "default": false
        }
      },
      "title": "EMBED RESOURCES",
      "menu": "true"
    },
    {
      "key": "embed_articles",
      "command": "cascade",
      "cascadeKey": [
        "embed_content"
      ],
      "referenceId": 34,
      "target": "all_descend",
      "title": "EMBED ArticleS",
      "menu": "true"
    },
    {
      "key": "embed_posts",
      "command": "cascade",
      "referenceId": 63,
      "cascadeKey": [
        "embed_content"
      ],
      "target": "descend",
      "title": "EMBED SOCIAL",
      "menu": "true"
    },
    {
      "key": "finance_signals",
      "title": "Analyze finances",
      "menu": "true"
    },
    {
      "title": "Test LI Porfile posts",
      "menu": true,
      "key": "test_li_profile_posts"
    }
  ],
  "parameters": {
    "url": {
      "type": "url",
      "title": "Website URL",
      "description": "Main website of company"
    },
    "linkedIn": {
      "type": "url",
      "title": "LinkedIn Profile",
      "description": "LinkedIn Profile page"
    },
    "description": {
      "type": "long_string",
      "title": "Description",
      "embed": true,
      "description": "Description of the organization",
      "excludeFromAggregation": true
    },
    "location": {
      "type": "string",
      "title": "Location",
      "description": "Main location"
    },
    "employee_count": {
      "type": "number",
      "title": "Employees"
    },
    "exited_at": {
      "type": "string",
      "title": "Exit date"
    },
    "ipo": {
      "type": "option",
      "options": [
        "public",
        "delisted",
        "private"
      ],
      "title": "IPOed"
    },
    "stock_symbol": {
      "type": "string",
      "title": "Ticker"
    },
    "below_1": {
      "type": "boolean",
      "optional": true,
      "title": "Price below 1"
    },
    "below_5": {
      "type": "boolean",
      "optional": true,
      "title": "Price below 5"
    },
    "below_cash": {
      "type": "boolean",
      "optional": true,
      "title": "Maket cap below cash"
    },
    "below_400_100": {
      "type": "boolean",
      "optional": true,
      "title": "Market cap <400M 0 cash > 100M"
    },
    "cash": {
      "type": "currency",
      "optional": true,
      "title": "Cash"
    },
    "currency": {
      "type": "string",
      "optional": true,
      "title": "Currency"
    },
    "fiftyDayAverage": {
      "type": "currency",
      "optional": true,
      "title": "50d avg price"
    },
    "previousClose": {
      "type": "currency",
      "optional": true,
      "title": "Last price"
    },
    "marketCap": {
      "type": "currency",
      "optional": true,
      "title": "Market cap"
    },
    "preincome_qoq_decline": {
      "type": "boolean",
      "optional": true,
      "title": "QoQ pre-tax decline"
    },
    "revenue_qoq_decline": {
      "type": "boolean",
      "optional": true,
      "title": "QoQ revenue decline"
    },
    "type": {
      "type": "options",
      "title": "Organization type",
      "description": "Type of organization",
      "options": [
        "Company",
        "Not for Profit",
        "Government department"
      ]
    },
    "funding": {
      "type": "funding",
      "title": "Funding",
      "description": "Total funding (in USD)"
    },
    "fundingRounds": {
      "type": "options_list",
      "title": "Funding stages",
      "description": "Stages of funding completed",
      "multi": true,
      "default": "Unknown",
      "options": [
        "Angel",
        "Convertible Note",
        "Debt Financing",
        "Equity Crowdfunding",
        "Grant",
        "Initial Coin Offering",
        "Non-equity Assistance",
        "Post-IPO Debt",
        "Post-IPO Equity",
        "Post-IPO Secondary",
        "Pre Seed Round",
        "Seed Round",
        "Series A",
        "Series B",
        "Series C",
        "Series D",
        "Series E",
        "Series F",
        "Series G",
        "Series H",
        "Series I",
        "Series J",
        "Venture - Series Unknown",
        "Private Equity",
        "Product Crowdfunding",
        "Corporate Round",
        "Secondary Market"
      ]
    },
    "industry": {
      "type": "string",
      "title": "Industry",
      "description": "Industry the organization operates in"
    },
    "features": {
      "type": "string",
      "title": "Features",
      "description": "Distinguishing features"
    },
    "focus": {
      "type": "string",
      "title": "Focus",
      "description": "Focus areas"
    },
    "model": {
      "type": "string",
      "title": "Model",
      "description": "Revenue model"
    },
    "offerings": {
      "type": "string",
      "title": "Offerings",
      "detailId": 71,
      "secondaryIds": [
        72
      ],
      "description": "Extracted offerings"
    },
    "markets": {
      "type": "string",
      "title": "Markets",
      "description": "Target market"
    },
    "capabilities": {
      "type": "string",
      "title": "Capabilities",
      "detailId": 73,
      "secondaryIds": [
        71,
        72
      ],
      "description": "Extracted capabilities"
    },
    "customers": {
      "type": "string",
      "title": "Customers",
      "detailId": 72,
      "secondaryIds": [
        71
      ],
      "description": "Extracted customers"
    },
    "name": {
      "type": "string",
      "title": "Name check",
      "description": "Extracted capabilities"
    },
    "technology": {
      "type": "string",
      "title": "Technologies",
      "description": "Extracted technologies"
    }
  },
  "renderConfig": {
    "configs": {
      "logo_and_name": {
        "baseConfig": "grid",
        "itemSize": 80,
        "title": "Logo and name"
      }
    },
    "explore": {
      "exportFields": [
        "title",
        "url",
        "description",
        "funding",
        "offerings",
        "capabilities",
        "markets"
      ],
      "configs": [
        {
          "id": 0,
          "title": "Overview",
          "description": "View all organizations",
          "parameters": {},
          "props": {
            "hideCover": true,
            "urlShort": true,
            "scales": true,
            "fixedSize": "16rem"
          }
        },
        {
          "id": 1,
          "title": "Offering",
          "description": "Details about the offerngs",
          "parameters": {},
          "props": {
            "hideCover": true,
            "urlShort": true,
            "showOfferings": true,
            "showCustomers": true,
            "fixedWidth": "36rem",
            "hideDescription": true,
            "fullCard": true
          }
        }
      ]
    }
  },
  "ai": {
    "process": {
      "context": {
        "fields": {
          "description": "Overview",
          "offerings": {
            "title": "Key offerings",
            "prefix": "Offering",
            "referenceId": 71,
            "fallback": "params.offerings"
          },
          "customers": {
            "title": "Target customers",
            "prefix": "Target customer",
            "referenceId": 72,
            "fallback": "params.customers"
          },
          "capabilities": {
            "title": "Key capabilities",
            "prefix": "Capability",
            "referenceId": 73,
            "fallback": "params.capabilities"
          }
        }
      }
    }
  }
},
{
  "_id": {
    "$oid": "647b2b24476d4d6bdae5716a"
  },
  "id": 30,
  "title": "Market scan",
  "description": "Market research focussed on identifying and categories organizations within it",
  "parameters": {
    "topics": {
      "type": "string",
      "title": "Topics",
      "asAxis": false
    },
    "summary": {
      "type": "string",
      "title": "Summary",
      "asAxis": false
    }
  },
  "actions": [
    {
      "key": "categorize",
      "title": "Auto discover from descriptions",
      "target": "results.0",
      "field": "param.description",
      "dataTypes": "organization descriptions",
      "engine": "gpt3",
      "resultCategory": 33
    },
    {
      "key": "mark_categories",
      "title": "Auto categorize entities",
      "target": "results.0",
      "engine": "gpt3",
      "dataTypes": "organization descriptions",
      "field": "param.description"
    },
    {
      "key": "topic_search",
      "command": "search",
      "referenceId": 29,
      "title": "Search crunchbase for companies in this topic",
      "menu": "true",
      "manualFields": [
        "topics"
      ]
    },
    {
      "key": "keyword_search",
      "command": "pivot_cb",
      "referenceId": 29,
      "lookupCount": 1000,
      "title": "Search crunchbase for companies with similar descriptions",
      "modes": [
        "keywords"
      ],
      "menu": "true"
    },
    {
      "key": "discover",
      "command": "cascade",
      "referenceId": 29,
      "cascadeKey": [
        "discover"
      ],
      "title": "Extract market problems for Organizations",
      "menu": "true"
    },
    {
      "key": "embed_articles",
      "command": "cascade",
      "referenceId": 34,
      "cascadeKey": [
        "embed_content"
      ],
      "target": "descend",
      "actionFields": {
        "force": {
          "title": "Force re-run of embeddings",
          "type": "boolean",
          "default": false
        }
      },
      "title": "EMBED ARTICLES",
      "menu": "true"
    },
    {
      "key": "embed_posts",
      "command": "cascade",
      "referenceId": 63,
      "cascadeKey": [
        "embed_content"
      ],
      "target": "descend",
      "title": "EMBED POSTS",
      "menu": "true"
    },
    {
      "key": "embed_resource",
      "command": "cascade",
      "referenceId": 78,
      "cascadeKey": [
        "embed_content"
      ],
      "target": "descend",
      "title": "EMBED RESOURCES",
      "actionFields": {
        "force": {
          "title": "Update existing information",
          "type": "boolean",
          "default": false
        }
      },
      "menu": "true"
    },
    {
      "key": "process_questions_on_main",
      "command": "cascade",
      "referenceId": 34,
      "cascadeKey": [
        "questions"
      ],
      "actionFields": {
        "forceCascade": {
          "title": "Re-run on documents already processed",
          "type": "boolean",
          "default": false
        },
        "remove_first": {
          "title": "Remove existing answers",
          "type": "boolean",
          "default": true
        }
      },
      "target": "descend",
      "title": "Process questions on articles",
      "menu": "true"
    },
    {
      "key": "process_questions_on_posts",
      "command": "cascade",
      "referenceId": 63,
      "cascadeKey": [
        "questions"
      ],
      "actionFields": {
        "forceCascade": {
          "title": "Re-run on documents already processed",
          "type": "boolean",
          "default": false
        },
        "remove_first": {
          "title": "Remove existing answers",
          "type": "boolean",
          "default": true
        }
      },
      "target": "descend",
      "title": "Process questions on posts",
      "menu": "true"
    },
    {
      "key": "find_articles_crunchbase",
      "command": "cascade",
      "referenceId": 29,
      "cascadeKey": [
        "find_articles_crunchbase"
      ],
      "title": "Find articles for organizations",
      "menu": "true"
    },
    {
      "key": "pivot_children",
      "command": "cascade",
      "referenceId": 29,
      "cascadeKey": [
        "pivot_cb"
      ],
      "title": "Spider out from organizations",
      "menu": false
    },
    {
      "key": "find_articles_gnews",
      "command": "find_articles",
      "title": "Find articles on this topic",
      "canCreate": true,
      "menu": true,
      "icon": "NewspaperIcon",
      "resultCategory": 34,
      "type": "result",
      "required": [
        "topics"
      ],
      "manualFields": [
        "topics"
      ]
    },
    {
      "key": "find_posts",
      "command": "find_posts",
      "title": "Find posts on this social media",
      "canCreate": true,
      "menu": true,
      "icon": "ShareIcon",
      "resultCategory": 34,
      "type": "result",
      "required": [
        "topics"
      ],
      "manualFields": [
        "topics"
      ]
    },
    {
      "key": "cascade",
      "referenceId": 29,
      "cascadeKey": [
        "enrich_investment"
      ],
      "target": "descend",
      "title": "Fetch investment information for organizations",
      "menu": true
    },
    {
      "key": "define_axis",
      "title": "Extract axis from organizations",
      "target": "results.0",
      "field": "param.description",
      "resultCategory": 29,
      "menu": true
    },
    {
      "key": "cascade_site_discovery",
      "command": "cascade",
      "referenceId": 29,
      "cascadeKey": [
        "site_discovery_short"
      ],
      "title": "Examine site for information",
      "menu": true
    },
    {
      "key": "cascade_finances",
      "command": "cascade",
      "referenceId": 29,
      "target": "all_descend",
      "cascadeKey": [
        "finance_signals"
      ],
      "title": "Compute financial signals",
      "menu": true,
      "actionFields": {
        "forceCascade": {
          "title": "Re-run on entities already processed",
          "type": "boolean",
          "default": false
        }
      }
    },
    {
      "key": "build_market_view",
      "command": "build_view",
      "target": "evidence",
      "title": "Create view",
      "field": "title",
      "referenceId": 29,
      "menu": false,
      "manualFields": [
        "referenceId"
      ],
      "baseCategory": 38
    },
    {
      "key": "build_evidence_view",
      "command": "build_view",
      "target": "evidence",
      "title": "Create view",
      "field": "title",
      "referenceId": 10,
      "menu": false,
      "manualFields": [
        "referenceId"
      ],
      "baseCategory": 42
    },
    {
      "key": "build_generic_view",
      "command": "build_generic_view",
      "title": "Create view",
      "field": "title",
      "menu": false,
      "baseCategory": 97,
      "actionFields": {
        "referenceId": {
          "title": "Items to cluster",
          "referenceIds": [
            10,
            29,
            34,
            63,
            78
          ],
          "type": "category_source",
          "allowNone": true
        },
        "descend": {
          "title": "Include nested items",
          "type": "boolean"
        }
      }
    }
  ],
  "sections": {
    "categories": true,
    "questions": true
  },
  "icon": "SignalIcon",
  "resultCategories": [
    {
      "id": 0,
      "title": "Organization",
      "plurals": "Organizations",
      "resultCategoryId": 29,
      "searchCategoryIds": [
        69
      ],
      "views": {
        "options": {
          "_explore": {
            "show": true
          },
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "logo_title",
                "title": "Name",
                "width": 250
              },
              {
                "field": "description",
                "title": "Description",
                "width": 0.4
              },
              {
                "field": "offerings",
                "title": "Offerings",
                "width": 0.1
              },
              {
                "field": "customers",
                "title": "Target customers",
                "width": 0.1
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "_cluster": {
            "show": true
          },
          "_proximity": {
            "show": true
          },
          "default": "cards",
          "defaultWide": "table",
          "fullPageExplorer": true,
          "createFromPaste": [
            {
              "title": "LinkedIn Profile URL",
              "field": "linkedIn"
            },
            {
              "title": "Website URL",
              "field": "url"
            }
          ]
        }
      }
    },
    {
      "id": 1,
      "title": "Market segment",
      "plurals": "Market segments",
      "resultCategoryId": 37,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "sort": "title",
            "wide": true
          }
        },
        "default": "cards"
      },
      "hide": true
    },
    {
      "id": 3,
      "title": "Problem segment",
      "plurals": "Problem segments",
      "resultCategoryId": 36,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "cluster": true
        },
        "default": "cards"
      },
      "hide": true
    },
    {
      "id": 2,
      "title": "Article",
      "plurals": "Articles",
      "resultCategoryId": 34,
      "searchCategoryIds": [
        68
      ],
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "sourceType",
                "name": "Type"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "default": "cards",
          "descend": true,
          "createFromPaste": [
            {
              "title": "Article URL",
              "field": "url"
            }
          ]
        }
      }
    },
    {
      "id": 6,
      "title": "Social activity",
      "plurals": "Social activities",
      "searchCategoryIds": [
        67,
        108
      ],
      "resultCategoryId": 63,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "descend": true,
          "createFromPaste": [
            {
              "title": "Social URL",
              "field": "url"
            }
          ]
        }
      }
    },
    {
      "id": 9,
      "title": "Person",
      "plurals": "People",
      "searchCategoryIds": [],
      "resultCategoryId": 58,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 11,
      "title": "Analysis",
      "plurals": "Analysis",
      "resultCategoryId": 106,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 7,
      "title": "Data query",
      "plurals": "Data queries",
      "resultCategoryId": 81,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 4,
      "title": "Market Map",
      "plurals": "Market Maps",
      "resultCategoryId": 38,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "explore": {
            "show": true
          },
          "cluster": {
            "show": true
          },
          "proximity": {
            "show": true
          },
          "default": "table",
          "fullPageExplorer": true,
          "viewer": true,
          "descend": true
        },
        "create": {
          "default": {
            "action": {
              "key": "build_market_view"
            },
            "actionFields": {
              "referenceId": {
                "title": "Items to cluster",
                "allowNull": true,
                "referenceIds": [
                  29
                ],
                "primitiveTypes": [
                  "entity"
                ],
                "type": "category_source"
              }
            }
          }
        }
      }
    },
    {
      "id": 5,
      "title": "Evidence Map",
      "plurals": "Evidence Maps",
      "resultCategoryId": 42,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "cluster": {
            "show": true
          },
          "default": "table",
          "fullPageExplorer": true,
          "viewer": true,
          "descend": true
        },
        "create": {
          "default": {
            "action": {
              "key": "build_evidence_view"
            },
            "actionFields": {
              "referenceId": {
                "title": "Items to cluster",
                "primitiveTypes": [
                  "evidence"
                ],
                "type": "category_source",
                "allowNone": true
              },
              "descend": {
                "title": "Include nested items",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    {
      "id": 10,
      "title": "People Map",
      "plurals": "People Maps",
      "resultCategoryId": 88,
      "views": {
        "options": {
          "cluster": {
            "show": true
          },
          "default": "table",
          "fullPageExplorer": true,
          "viewer": true,
          "descend": true
        },
        "create": {
          "default": {
            "action": {
              "key": "build_evidence_view"
            },
            "actionFields": {
              "referenceId": {
                "title": "Items to cluster",
                "referenceIds": [
                  58,
                  63
                ],
                "type": "category_source",
                "allowNone": true
              },
              "descend": {
                "title": "Include nested items",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    {
      "id": 8,
      "title": "Report",
      "plurals": "Reports",
      "resultCategoryId": 85,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "defaultWide": "table"
        }
      }
    }
  ],
  "evidenceCategories": [],
  "primitiveType": "activity"
},
{
  "_id": {
    "$oid": "647b91c3e5d80da3ea9a72c8"
  },
  "id": 31,
  "title": "Response",
  "description": "Response to a question",
  "type": "qualitative",
  "icon": "QuestionMarkCircleIcon",
  "parameters": {
    "category": {
      "type": "string",
      "title": "Category"
    },
    "important": {
      "type": "flag",
      "title": "Flag",
      "color": "orange",
      "showEmpty": false
    }
  },
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "647dc71fe5d80da3ea9a72c9"
  },
  "id": 32,
  "title": "Category option",
  "description": "Option",
  "type": "qualitative",
  "icon": "ChevronRightIcon",
  "parameters": {
    "bgcolor": {
      "type": "color",
      "title": "Background Color"
    }
  },
  "primitiveType": "category"
},
{
  "_id": {
    "$oid": "648333dc2a8397cf59925bfb"
  },
  "id": 33,
  "title": "Similarity score",
  "description": "Option",
  "mapMode": "embedding",
  "icon": "ChevronRightIcon",
  "parameters": {
    "target": {
      "title": "Categorize",
      "description": "Items to categorize",
      "type": "category_source",
      "scope": [
        "items",
        {
          "scope": "parents",
          "types": [
            "result",
            "entity"
          ]
        }
      ]
    },
    "referenceId": {
      "title": "Items",
      "description": "Type of items",
      "type": "categoryId",
      "hidden": true
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field"
    }
  },
  "primitiveType": "category"
},
{
  "_id": {
    "$oid": "6485cceb2a8397cf59925c0a"
  },
  "id": 34,
  "title": "Article",
  "description": "Article related to an organization",
  "icon": "NewspaperIcon",
  "openai": {
    "opener": "here is the text of an article",
    "descriptor": "Answer the following questions using information from the article:",
    "responseInstructions": "Your response must be in json format and should include each question or task with the key set to the question or task number and with an array of results. For question, each entry in the array must have a \"quote\" field containing the original text, a \"answer\" field containing your answer. If there is no result for a specific question set the \"quote\" field to \"none\" and exclude the \"answer\" field. For each task just provide an entry with an \"answer\" field set to your response."
  },
  "parameters": {
    "fullText": {
      "type": "long_string",
      "title": "Full text of article"
    },
    "url": {
      "type": "url",
      "title": "Url",
      "description": "URL of article"
    },
    "imageUrl": {
      "type": "url",
      "title": "imageUrl",
      "description": "URL of article image"
    },
    "source": {
      "type": "string",
      "title": "Source"
    },
    "posted": {
      "type": "date",
      "title": "Posted date"
    },
    "summary": {
      "type": "long_string",
      "description": "Summary",
      "title": "Summary",
      "optional": true,
      "prompt": "Summarize the most interesting facts from this article in a single paragraph",
      "promptType": "task"
    }
  },
  "actions": [
    {
      "key": "embed_content",
      "title": "Embed Content",
      "menu": true,
      "icon": "QuestionIcon",
      "actionFields": {
        "force": {
          "title": "Force re-run of embeddings",
          "type": "boolean",
          "default": false
        }
      }
    },
    {
      "key": "questions",
      "command": "questions",
      "title": "Process questions",
      "menu": true,
      "icon": "QuestionIcon"
    },
    {
      "key": "extract_problems_addressed",
      "command": "extract",
      "titleSource": "origin",
      "title": "Extract problems",
      "canCreate": true,
      "menu": true,
      "icon": "BoltIcon",
      "prompt": "Extract a series of user or market problems from the article which are related to {topic}. Do not create problems that are not mentioned in the article and do not reframe statements into problems.",
      "extractNoun": "problem",
      "topics": "{parent_topic}",
      "dataType": "article",
      "transformPrompt": "in the form \"It sucks that...\"",
      "resultCategory": 10,
      "type": "evidence"
    },
    {
      "key": "extract_target_persona",
      "command": "extract",
      "title": "Extract target customers",
      "canCreate": true,
      "menu": true,
      "icon": "UserIcon",
      "prompt": "Extract a list of target roles or job titles that this company is looking to sell to based on what is written in the article. Do not create targets that are not mentioned in the article and do not mention specific customers names",
      "extractNoun": "target",
      "transformPrompt": "in the form \"Companies which...\"",
      "dataType": "article",
      "resultCategory": 10,
      "type": "evidence"
    }
  ],
  "promptCategories": [
    45,
    43,
    62,
    46,
    49,
    21,
    61
  ],
  "primitiveType": "result",
  "do_discovery": true
},
{
  "_id": {
    "$oid": "64883c2d2a8397cf59925c11"
  },
  "id": 35,
  "title": "Opportunity",
  "description": "An speicifc market opportunity",
  "type": "quantitative",
  "icon": "LightBulbIcon",
  "primitiveType": "evidence"
},
{
  "_id": {
    "$oid": "648c55c62a8397cf59925c27"
  },
  "id": 36,
  "title": "Problem segment",
  "description": "Segementation of problem statements",
  "type": "qualitative",
  "icon": "ChevronRightIcon",
  "parameters": {
    "overview": {
      "type": "long_string",
      "title": "Overview of segment",
      "inSummary": {
        "main": true
      }
    },
    "top_problems": {
      "type": "list",
      "title": "Top 5 recurring problems in segment",
      "inSummary": true
    },
    "solutions": {
      "type": "long_string",
      "title": "Candidate solution",
      "inSummary": true
    },
    "pitch": {
      "type": "list",
      "title": "Pitch",
      "inSummary": true
    },
    "value_prop": {
      "type": "list",
      "title": "Value props",
      "inSummary": true
    }
  },
  "holds": [
    10
  ],
  "actions": [
    {
      "key": "summarize",
      "title": "Summarize problems in this segment",
      "deriveTitle": true,
      "target": "children",
      "field": "title",
      "targetParameter": "overview",
      "dataTypes": "problem statements",
      "prompt": "Produce a summary a 100-150 word summary of the problems being faced in this segment. Do not create a long list of problems - create a readable paragrpah or 2 - and use the form \"Problems related to...\"",
      "type": "evidence",
      "engine": "gpt4p",
      "menu": true
    },
    {
      "key": "summarize_top",
      "command": "summarize",
      "title": "List top 5 problems",
      "targetIsList": true,
      "target": "children",
      "field": "title",
      "targetParameter": "top_problems",
      "dataTypes": "problem statements",
      "prompt": "Generate a numbered list of the top 5 most prevalent and severe problems by aggregating problem statements together. Avoid generalizations and ensure that a concrete and meaningful problem is specified. Provide the answer in the form \"n) It sucks that...\"",
      "engine": "gpt4p",
      "type": "evidence",
      "menu": true
    },
    {
      "key": "summarize_solutions",
      "command": "summarize",
      "title": "Create solutions",
      "target": "children",
      "field": "title",
      "targetParameter": "solutions",
      "dataTypes": "problem statements",
      "prompt": "Provide a description of the most viable data centric solution that could address the most prevalent and severe problems described in these problems statements",
      "type": "evidence",
      "engine": "gpt4p",
      "menu": true
    },
    {
      "key": "build_pitch",
      "command": "summarize",
      "title": "Create inklings",
      "target": "children",
      "targetIsList": true,
      "field": "title",
      "targetParameter": "pitch",
      "dataTypes": "problem statements",
      "prompt": "Generate the most viable data centric solution that could address the most prevalent and severe problems described in these problems statements. Provide an overview of the idea in the following format \"1) Problem: [a 50 word concrete description of the problem including hwo has it and what imapct it has.\n2) Introducing: [a 1-3 word name for the solution]\n3)[name of solution] is a [type of solution] that helps [customer] by [30-40 word descriton of the outcomes that benefit the customer]\n4) It works like this [a bullet point list of the 4-6 key steps including what actions, data or processing is involved]\n5) We make an impact on our customers lives by [20-30 word summary of the positive impact the solution has on the customer]",
      "type": "evidence",
      "engine": "gpt4p",
      "menu": true
    },
    {
      "key": "build_valueprop",
      "command": "summarize",
      "title": "Create value props",
      "target": "children",
      "targetIsList": true,
      "field": "title",
      "targetParameter": "value_prop",
      "dataTypes": "problem statements",
      "prompt": "Generate a list of 5 value propositions that could address these problems statements. Your response should be a numbered list starting at number 1 with each value prop in the format '[value] for [customer]'",
      "type": "evidence",
      "engine": "gpt4p",
      "menu": true
    },
    {
      "key": "define_axis",
      "title": "Extract axis from segments",
      "target": "results.0",
      "field": "param.description",
      "resultCategory": 32,
      "menu": true
    },
    {
      "key": "roll_up",
      "target": "ref",
      "title": "Split segment into subsegments",
      "field": "title",
      "menu": "true",
      "resultCategory": 36
    },
    {
      "key": "dedupe",
      "target": "ref",
      "title": "Aggregate duplicate problems in this segemnt",
      "field": "title",
      "menu": "true",
      "resultCategory": 36
    },
    {
      "key": "create_summary",
      "title": "Create summary",
      "menu": true,
      "actionFields": {
        "field": {
          "title": "Field",
          "description": "Field of item to use",
          "itemMeta": true,
          "type": "category_field",
          "includeContext": true,
          "includeContent": true
        },
        "summary_type": {
          "type": "option_list",
          "options": [
            "summary",
            "overview",
            "top_5",
            "custom"
          ],
          "title": "Summary type"
        },
        "prompt": {
          "type": "string",
          "title": "Custom prompt"
        }
      }
    }
  ],
  "renderConfig": {
    "explore": {
      "configs": [
        {
          "id": 0,
          "title": "Summary",
          "description": "View Problem Statements in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true,
            "searchPane": true
          },
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "columnWidth": 20,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        },
        {
          "id": 1,
          "title": "Overview",
          "description": "View Problem Statements in each segment",
          "props": {
            "hideDetails": false,
            "cardView": false,
            "showGrid": false,
            "overlay": false
          }
        },
        {
          "id": 2,
          "title": "Article overview",
          "description": "Latest article in segment",
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "hideMore": false,
            "showGrid": true,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "overlay": false,
            "details": {
              "pivot": "origin"
            }
          }
        },
        {
          "id": 3,
          "title": "Article timeline",
          "description": "Plot of funding amounts and stage",
          "parameters": {
            "fixedSpan": "col-span-4"
          },
          "props": {
            "hideDetails": true,
            "showGrid": false,
            "overlay": false,
            "graph": true,
            "details": {
              "sync": [
                "xmin"
              ],
              "pivot": "origin",
              "mode": "timeline",
              "y-axis": {
                "action": "count",
                "sort": "posted",
                "sort_formatter": "datetime"
              },
              "x-axis": {
                "parameter": "posted",
                "formatter": "datetime"
              }
            }
          }
        },
        {
          "id": 4,
          "title": "Problem statements",
          "description": "View Problem Statements in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true
          },
          "props": {
            "hideDetails": true,
            "cardView": true,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 12,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        }
      ]
    }
  },
  "sidebar": {
    "addToCategories": [
      42
    ]
  },
  "primitiveType": "segment",
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 36,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "explore": {
            "show": true,
            "configs": [
              {
                "id": 0,
                "title": "Summary",
                "description": "View Problem Statements in each segment",
                "parameters": {
                  "span": {
                    "sqrt": true
                  }
                },
                "config": {
                  "dropOnPrimitive": true
                },
                "props": {
                  "hideDetails": false,
                  "cardView": true,
                  "itemLimit": [
                    "flagged",
                    "recent_10"
                  ],
                  "hideMore": true,
                  "showGrid": true,
                  "overlay": false
                }
              },
              {
                "id": 1,
                "title": "Overview",
                "description": "View Problem Statements in each segment",
                "props": {
                  "hideDetails": false,
                  "cardView": false,
                  "showGrid": false,
                  "overlay": false
                }
              },
              {
                "id": 2,
                "title": "Article overview",
                "description": "Latest article in segment",
                "props": {
                  "hideDetails": false,
                  "cardView": true,
                  "itemLimit": [
                    "flagged",
                    "recent_10"
                  ],
                  "hideMore": false,
                  "showGrid": true,
                  "overlay": false,
                  "details": {
                    "pivot": "origin"
                  }
                }
              },
              {
                "id": 3,
                "title": "Article timeline",
                "description": "Plot of funding amounts and stage",
                "parameters": {
                  "fixedSpan": "col-span-4"
                },
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "sync": [
                      "xmin"
                    ],
                    "pivot": "origin",
                    "mode": "timeline",
                    "y-axis": {
                      "action": "count",
                      "sort": "posted",
                      "sort_formatter": "datetime"
                    },
                    "x-axis": {
                      "parameter": "posted",
                      "formatter": "datetime"
                    }
                  }
                }
              },
              {
                "id": 4,
                "title": "Problem statements",
                "description": "View Problem Statements in each segment",
                "parameters": {
                  "span": {
                    "sqrt": true
                  }
                },
                "config": {
                  "dropOnPrimitive": true
                },
                "props": {
                  "hideDetails": true,
                  "cardView": true,
                  "showGrid": true,
                  "overlay": false
                }
              }
            ]
          },
          "cluster": {
            "show": true
          },
          "default": "cards",
          "fullPageExplorer": true
        }
      }
    }
  ]
},
{
  "_id": {
    "$oid": "648daeff2a8397cf59925c2a"
  },
  "id": 37,
  "title": "Market segment",
  "description": "Segementation of organizations",
  "type": "qualitative",
  "icon": "ChevronRightIcon",
  "parameters": {
    "bgcolor": {
      "type": "color",
      "title": "Background Color",
      "asAxis": false
    },
    "description": {
      "type": "string",
      "title": "Overview of segment",
      "asAxis": false
    }
  },
  "actions": [
    {
      "key": "summarize",
      "title": "Summarize organizations in this segment",
      "target": "children",
      "field": "param.description",
      "targetParameter": "description",
      "dataTypes": "organization overviews",
      "prompt": "Produce a summary in 75 words or less of the overviews being solved in the format \"Organizations in this segment...\"",
      "menu": true,
      "type": "entity"
    },
    {
      "key": "summarize_vp",
      "command": "summarize",
      "title": "Summarize value props of organizations in segment",
      "target": "children",
      "field": "param.description",
      "targetParameter": "description",
      "dataTypes": "organization overviews",
      "prompt": "Analyze the overviews to produce a list of the 5 most interesting value propositions.  Combine similar value propositions from different organizations together, do not mention sepcific organizations in your response and do not duplicate value propositions . Provide your answer in a numbered list starting with 1 with each in the format '[value] to [customer]'",
      "menu": true,
      "type": "entity"
    },
    {
      "key": "summarize_problem",
      "command": "summarize",
      "title": "Summarize problems addressed in this segment",
      "target": "descend",
      "asList": 6,
      "field": "title",
      "targetParameter": "problemOverview",
      "dataTypes": "problem statements",
      "prompt": "Summarize any and all problem statements related to {title} into no more than 6 summaries of no more than 45 words each.",
      "referenceId": 10,
      "type": "evidence"
    },
    {
      "key": "define_axis",
      "title": "Extract axis from segments",
      "target": "results.0",
      "field": "param.description",
      "resultCategory": 32,
      "menu": true
    },
    {
      "key": "roll_up_descriptions",
      "command": "roll_up",
      "target": "ref",
      "title": "Split segment into subsegments",
      "field": "param.capabilities",
      "menu": "true",
      "types": "organization descriptions",
      "subTypes": "sub-summaries",
      "summaryType": "summary",
      "prompt": "Summarize the common aspects of the organizations in more more than 30 words in the form 'Solutions related to...'",
      "resultCategory": 37
    },
    {
      "key": "create_summary",
      "title": "Create summary",
      "menu": true,
      "actionFields": {
        "field": {
          "title": "Field",
          "description": "Field of item to use",
          "itemMeta": true,
          "type": "category_field",
          "includeContext": true
        },
        "summary_type": {
          "type": "option_list",
          "options": [
            "summary",
            "overview",
            "top_5",
            "custom"
          ],
          "title": "Summary type"
        },
        "prompt": {
          "type": "string",
          "title": "Custom prompt"
        }
      }
    }
  ],
  "renderConfig": {
    "explore": {
      "configs": [
        {
          "id": 0,
          "title": "Overview",
          "description": "View all organizations in the segment",
          "parameters": {
            "span": {
              "nestedItem": {
                "10": {
                  "columns": 2
                },
                "20": {
                  "columns": 2,
                  "rows": 2
                },
                "70": {
                  "columns": 2,
                  "rows": 3
                },
                "100": {
                  "columns": 2,
                  "rows": 4
                }
              }
            }
          },
          "props": {
            "hideDetails": true,
            "showGrid": true,
            "columns": {
              "25": 8,
              "50": 12,
              "default": 5
            },
            "rows": {
              "default": 3
            },
            "imageOnly": true
          }
        },
        {
          "id": 1,
          "title": "Summary",
          "description": "Provide a summary of the segment",
          "props": {
            "hideDetails": false,
            "showGrid": true,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 2
            },
            "minWidth": "12rem",
            "itemLimit": 10
          }
        },
        {
          "id": 2,
          "title": "Overlay",
          "description": "Highlevel statistics about the segment",
          "parameters": {
            "span": {
              "nestedItem": {
                "10": {
                  "columns": 2
                },
                "20": {
                  "columns": 2,
                  "rows": 2
                },
                "70": {
                  "columns": 2,
                  "rows": 3
                },
                "100": {
                  "columns": 2,
                  "rows": 4
                }
              }
            }
          },
          "props": {
            "hideDetails": true,
            "showGrid": true,
            "imageOnly": true,
            "overlay": true,
            "details": [
              {
                "action": "sum",
                "parameter": "funding",
                "formatter": "currency"
              }
            ],
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 2
            }
          }
        },
        {
          "id": 3,
          "title": "Funding ",
          "description": "Plot of funding amounts and stage",
          "props": {
            "hideDetails": true,
            "showGrid": false,
            "overlay": false,
            "graph": true,
            "details": {
              "log": true,
              "x-axis": {
                "parameter": "funding",
                "formatter": "currency"
              },
              "y-axis": {
                "field": "title",
                "icon": true,
                "sort": {
                  "parameter": "funding",
                  "entry": "last"
                }
              }
            }
          }
        },
        {
          "id": 4,
          "title": "Funding journey",
          "description": "Plot of funding amounts and stage",
          "props": {
            "hideDetails": true,
            "showGrid": false,
            "overlay": false,
            "graph": true,
            "details": {
              "type": "line",
              "filters": [
                {
                  "parameter": "fundingRoundInfo.[-1].title",
                  "values": [
                    "Pre Seed Round",
                    "Seed Round",
                    "Series A",
                    "Series B",
                    "Series C",
                    "Series D",
                    "Series E"
                  ]
                }
              ],
              "x-axis": {
                "parameter": "fundingRoundInfo.[-1].title",
                "match": {
                  "collection": "fundingRoundInfo",
                  "key": "title",
                  "parameter": "timeSinceFounded",
                  "xzSort": "timeSinceFounded"
                },
                "formatter": "days",
                "delta": {
                  "parameter": "fundingRoundInfo.[-1].title",
                  "groupField": "avg_days"
                }
              },
              "y-axis": {
                "field": "title",
                "icon": true,
                "sort": {
                  "parameter": "fundingRoundInfo.[-1].title"
                }
              },
              "z-axis": {
                "parameter": "fundingRoundInfo.[-1].title",
                "match": {
                  "collection": "fundingRoundInfo",
                  "key": "title",
                  "parameter": "amount",
                  "xzSort": "timeSinceFounded"
                },
                "formatter": "currency"
              }
            }
          }
        },
        {
          "id": 5,
          "title": "Funding Horizon",
          "description": "Plot of funding amounts and stage",
          "props": {
            "hideDetails": true,
            "showGrid": false,
            "overlay": false,
            "graph": true,
            "details": {
              "type": "line",
              "filters": [
                {
                  "parameter": "fundingRoundInfo.[-1].title",
                  "values": [
                    "Pre Seed Round",
                    "Seed Round",
                    "Series A",
                    "Series B",
                    "Series C",
                    "Series D",
                    "Series E"
                  ]
                }
              ],
              "x-axis": {
                "parameter": "fundingRoundInfo.[-1].title",
                "match": {
                  "collection": "fundingRoundInfo",
                  "key": "title",
                  "parameter": "timeSinceFounded",
                  "xzSort": "timeSinceFounded"
                },
                "formatter": "days",
                "delta": {
                  "parameter": "fundingRoundInfo.[-1].title",
                  "offset": 1,
                  "groupField": "avg_days"
                }
              },
              "y-axis": {
                "field": "title",
                "icon": true,
                "sort": {
                  "parameter": "fundingRoundInfo.[-1].title"
                }
              },
              "z-axis": {
                "parameter": "fundingRoundInfo.[-1].title",
                "match": {
                  "collection": "fundingRoundInfo",
                  "key": "title",
                  "parameter": "amount",
                  "xzSort": "timeSinceFounded"
                },
                "formatter": "currency"
              }
            }
          }
        },
        {
          "id": 6,
          "title": "Funding timeline",
          "description": "Plot of funding amounts and stage",
          "props": {
            "hideDetails": true,
            "showGrid": false,
            "overlay": false,
            "graph": true,
            "details": {
              "sync": [
                "xmin"
              ],
              "mode": "timeline",
              "log": true,
              "y-axis": {
                "parameter": "fundingRoundInfo.[].amount",
                "formatter": "currency",
                "sort": "annouced",
                "sort_formatter": "datetime"
              },
              "x-axis": {
                "parameter": "fundingRoundInfo.[].annouced",
                "formatter": "datetime"
              }
            }
          }
        },
        {
          "id": 7,
          "title": "Funding Pace",
          "description": "Compare funding pace and size to peers",
          "props": {
            "hideDetails": true,
            "showGrid": false,
            "overlay": false,
            "graph": true,
            "details": {
              "log": true,
              "type": "line",
              "filters": [
                {
                  "parameter": "fundingRoundInfo.[-1].title",
                  "values": [
                    "Pre Seed Round",
                    "Seed Round",
                    "Series A",
                    "Series B",
                    "Series C",
                    "Series D",
                    "Series E"
                  ]
                }
              ],
              "mode": "xy",
              "x-axis": {
                "parameter": "fundingRoundInfo.[-1].title",
                "invert": true,
                "match": {
                  "collection": "fundingRoundInfo",
                  "key": "title",
                  "parameter": "timeSinceFounded",
                  "xzSort": "timeSinceFounded"
                },
                "formatter": "days",
                "delta": {
                  "parameter": "fundingRoundInfo.[-1].title",
                  "offset": 1,
                  "groupField": "avg_days"
                }
              },
              "y-axis": {
                "parameter": "fundingRoundInfo.[-1].title",
                "match": {
                  "collection": "fundingRoundInfo",
                  "key": "title",
                  "parameter": "amount",
                  "xzSort": "timeSinceFounded"
                },
                "formatter": "currency"
              }
            }
          }
        }
      ]
    }
  },
  "primitiveType": "segment",
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 37,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "explore": {
            "show": true,
            "configs": [
              {
                "id": 0,
                "title": "Overview",
                "description": "View all organizations in the segment",
                "parameters": {
                  "span": {
                    "nestedItem": {
                      "10": {
                        "columns": 2
                      },
                      "20": {
                        "columns": 2,
                        "rows": 2
                      },
                      "70": {
                        "columns": 2,
                        "rows": 3
                      },
                      "100": {
                        "columns": 2,
                        "rows": 4
                      }
                    }
                  }
                },
                "props": {
                  "hideDetails": true,
                  "showGrid": true,
                  "imageOnly": true
                }
              },
              {
                "id": 1,
                "title": "Summary",
                "description": "Provide a summary of the segment",
                "props": {
                  "hideDetails": false,
                  "showGrid": true,
                  "itemLimit": 10
                }
              },
              {
                "id": 2,
                "title": "Overlay",
                "description": "Highlevel statistics about the segment",
                "parameters": {
                  "span": {
                    "nestedItem": {
                      "10": {
                        "columns": 2
                      },
                      "20": {
                        "columns": 2,
                        "rows": 2
                      },
                      "70": {
                        "columns": 2,
                        "rows": 3
                      },
                      "100": {
                        "columns": 2,
                        "rows": 4
                      }
                    }
                  }
                },
                "props": {
                  "hideDetails": true,
                  "showGrid": true,
                  "imageOnly": true,
                  "overlay": true,
                  "details": [
                    {
                      "action": "sum",
                      "parameter": "funding",
                      "formatter": "currency"
                    }
                  ]
                }
              },
              {
                "id": 3,
                "title": "Funding ",
                "description": "Plot of funding amounts and stage",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "log": true,
                    "x-axis": {
                      "parameter": "funding",
                      "formatter": "currency"
                    },
                    "y-axis": {
                      "field": "title",
                      "icon": true,
                      "sort": {
                        "parameter": "funding",
                        "entry": "last"
                      }
                    }
                  }
                }
              },
              {
                "id": 4,
                "title": "Funding journey",
                "description": "Plot of funding amounts and stage",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "type": "line",
                    "filters": [
                      {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "values": [
                          "Pre Seed Round",
                          "Seed Round",
                          "Series A",
                          "Series B",
                          "Series C",
                          "Series D",
                          "Series E"
                        ]
                      }
                    ],
                    "x-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "timeSinceFounded",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "days",
                      "delta": {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "groupField": "avg_days"
                      }
                    },
                    "y-axis": {
                      "field": "title",
                      "icon": true,
                      "sort": {
                        "parameter": "fundingRoundInfo.[-1].title"
                      }
                    },
                    "z-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "amount",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "currency"
                    }
                  }
                }
              },
              {
                "id": 5,
                "title": "Funding Horizon",
                "description": "Plot of funding amounts and stage",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "type": "line",
                    "filters": [
                      {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "values": [
                          "Pre Seed Round",
                          "Seed Round",
                          "Series A",
                          "Series B",
                          "Series C",
                          "Series D",
                          "Series E"
                        ]
                      }
                    ],
                    "x-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "timeSinceFounded",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "days",
                      "delta": {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "offset": 1,
                        "groupField": "avg_days"
                      }
                    },
                    "y-axis": {
                      "field": "title",
                      "icon": true,
                      "sort": {
                        "parameter": "fundingRoundInfo.[-1].title"
                      }
                    },
                    "z-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "amount",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "currency"
                    }
                  }
                }
              },
              {
                "id": 6,
                "title": "Funding timeline",
                "description": "Plot of funding amounts and stage",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "sync": [
                      "xmin"
                    ],
                    "mode": "timeline",
                    "log": true,
                    "y-axis": {
                      "parameter": "fundingRoundInfo.[].amount",
                      "formatter": "currency",
                      "sort": "annouced",
                      "sort_formatter": "datetime"
                    },
                    "x-axis": {
                      "parameter": "fundingRoundInfo.[].annouced",
                      "formatter": "datetime"
                    }
                  }
                }
              },
              {
                "id": 7,
                "title": "Funding Pace",
                "description": "Compare funding pace and size to peers",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "log": true,
                    "type": "line",
                    "filters": [
                      {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "values": [
                          "Pre Seed Round",
                          "Seed Round",
                          "Series A",
                          "Series B",
                          "Series C",
                          "Series D",
                          "Series E"
                        ]
                      }
                    ],
                    "mode": "xy",
                    "x-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "invert": true,
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "timeSinceFounded",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "days",
                      "delta": {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "offset": 1,
                        "groupField": "avg_days"
                      }
                    },
                    "y-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "amount",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "currency"
                    }
                  }
                }
              }
            ]
          },
          "cluster": {
            "show": true
          },
          "proximity": {
            "show": true
          },
          "default": "cards",
          "descend": true,
          "fullPageExplorer": true
        }
      }
    }
  ]
},
{
  "_id": {
    "$oid": "64c7ee760a17ee3e1d97b922"
  },
  "id": 38,
  "title": "Market Map",
  "description": "Market Map",
  "parameters": {
    "target": {
      "title": "Cluster",
      "description": "Items to cluster",
      "type": "category_source",
      "locked": true
    },
    "referenceId": {
      "title": "Evidence",
      "description": "Type of evidence",
      "type": "categoryId",
      "hidden": true,
      "locked": true
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field",
      "locked": true
    }
  },
  "actions": [
    {
      "key": "categorize",
      "title": "Categorize items in map",
      "menu": "false",
      "aiConfig": {
        "param.offerings": {
          "types": "organization descriptions",
          "combinePrompt": "Generate a summary of the offerings in the form 'Offerings related to...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific offerings in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the offerings in the form 'Offerings providing...' which describes the common theme or focus of all offerings.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        },
        "param.customers": {
          "types": "target customers of companies",
          "combinePrompt": "Generate a summary of the target customers in the form 'Customer segements which...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific customers in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the target customers in the form 'Customer segements which...' which describes the common theme or focus of all target customers.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        }
      },
      "engine": "gpt4p"
    },
    {
      "key": "mark_categories",
      "title": "Categorize items in map",
      "menu": "false",
      "engine": "gpt4p"
    },
    {
      "key": "roll_up",
      "title": "Roll-up",
      "menu": "true"
    },
    {
      "key": "build_segment",
      "command": "roll_up_view",
      "target": "items",
      "title": "Build clusters",
      "field": "title",
      "referenceId": 29,
      "aiConfig": {
        "param.offerings": {
          "types": "organization descriptions",
          "combinePrompt": "Generate a summary of the offerings in the form 'Offerings related to...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific offerings in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the offerings in the form 'Offerings providing...' which describes the common theme or focus of all offerings.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        },
        "param.customers": {
          "types": "target customers of companies",
          "combinePrompt": "Generate a summary of the target customers in the form 'Customer segements which...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific customers in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the target customers in the form 'Customer segements which...' which describes the common theme or focus of all target customers.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        }
      },
      "menu": "false",
      "actionFields": {
        "field": {
          "title": "Field to segment by",
          "type": "category_field"
        }
      },
      "resultCategory": 37
    },
    {
      "key": "cluster2",
      "target": "items",
      "alternate": true,
      "title": "Build clusters (alt)",
      "field": "title",
      "aiConfig": {
        "param.offerings": {
          "types": "organization descriptions",
          "combinePrompt": "Generate a summary of the offerings in the form 'Offerings related to...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific offerings in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the offerings in the form 'Offerings providing...' which describes the common theme or focus of all offerings.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        },
        "param.customers": {
          "types": "target customers of companies",
          "combinePrompt": "Generate a summary of the target customers in the form 'Customer segements which...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific customers in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the target customers in the form 'Customer segements which...' which describes the common theme or focus of all target customers.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        }
      },
      "menu": "false",
      "actionFields": {
        "field": {
          "title": "Field to segment by",
          "type": "category_field"
        },
        "focus": {
          "title": "Cluster theme",
          "type": "string"
        }
      },
      "resultCategory": 37
    },
    {
      "key": "define_axis",
      "title": "Build axis",
      "target": "items",
      "field": "context",
      "resultCategory": 36,
      "menu": false
    }
  ],
  "icon": "SignalIcon",
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 37,
      "descend": true,
      "viewsFromtarget": true
    },
    {
      "id": 1,
      "title": "Organization",
      "plurals": "Organizations",
      "resultCategoryId": 29,
      "searchCategoryIds": [
        69
      ],
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "logo_title",
                "title": "Name",
                "width": 250
              },
              {
                "field": "description",
                "title": "Description",
                "width": 0.4
              },
              {
                "field": "offerings",
                "title": "Offerings",
                "width": 0.1
              },
              {
                "field": "customers",
                "title": "Target customers",
                "width": 0.1
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "defaultWide": "table",
          "fullPageExplorer": true,
          "descend": true
        }
      }
    },
    {
      "id": 2,
      "title": "Article",
      "plurals": "Articles",
      "resultCategoryId": 34,
      "searchCategoryIds": [
        68
      ],
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "sourceType",
                "name": "Type"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "default": "cards",
          "descend": true
        }
      }
    }
  ],
  "primitiveType": "view"
},
{
  "_id": {
    "$oid": "64e706212e23c6507f1292fb"
  },
  "id": 39,
  "title": "Hypothesis",
  "description": "Hypotheis to test",
  "type": "qualitative",
  "icon": "LightBulbIcon",
  "parameters": {
    "important": {
      "type": "flag",
      "title": "Important",
      "color": "amber"
    },
    "state": {
      "title": "State",
      "description": "Status of hypothesis",
      "type": "state"
    }
  },
  "primitiveType": "hypothesis",
  "resultCategories": [
    {
      "id": 0,
      "title": "Activity",
      "plurals": "Activities",
      "type": "activity",
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "showLink": true,
          "fullPageExplorer": true
        }
      }
    }
  ]
},
{
  "_id": {
    "$oid": "64eb31d5ce4d7f703a952905"
  },
  "id": 40,
  "title": "Wireframe testing",
  "description": "Test response to a wireframe / clicakble prototype",
  "parameters": {
    "sample": {
      "type": "integer",
      "title": "Sample size",
      "description": "Number of planned interviews"
    },
    "source": {
      "type": "text",
      "title": "Overview",
      "description": "Scope of testing"
    }
  },
  "actions": [
    {
      "key": "categorize",
      "title": "Auto discover from descriptions",
      "target": "evidence",
      "field": "title",
      "count": 10,
      "dataType": "problem statements",
      "resultCategory": 32,
      "type": "evidence",
      "referenceId": 10
    },
    {
      "key": "mark_categories",
      "title": "Auto categorize entities",
      "target": "evidence",
      "field": "title",
      "count": 10,
      "dataType": "problem statements",
      "themes": "user problems",
      "type": "evidence",
      "referenceId": 10
    },
    {
      "key": "roll_up",
      "target": "evidence",
      "title": "Roll-up evidence",
      "field": "title",
      "menu": "true",
      "resultCategory": 36
    }
  ],
  "metrics": {
    "conversion": {
      "type": "integer",
      "title": "Conversion",
      "description": "Track conversion metrics",
      "icon": "ChartBarIcon"
    },
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "A count of interviews in a particular state"
    }
  },
  "icon": "UserGroupIcon",
  "sections": {
    "questions": true,
    "categories": true
  },
  "reports": [
    0
  ],
  "resultCategories": [
    {
      "id": 0,
      "title": "Interview",
      "plurals": "Interviews",
      "resultCategoryId": 9,
      "relationships": {
        "identified": {
          "order": 0,
          "title": "Identified",
          "color": "orange"
        },
        "contacted": {
          "order": 1,
          "title": "Contacted",
          "color": "yellow"
        },
        "scheduled": {
          "order": 2,
          "title": "Scheduled",
          "color": "green"
        },
        "completed": {
          "order": 3,
          "title": "Completed",
          "color": "cyan"
        }
      },
      "views": {
        "options": {
          "cards": {
            "fields": [
              "contact",
              "role",
              "company"
            ],
            "sort": "contactName"
          },
          "table": {
            "fields": [
              {
                "field": "contact",
                "name": "Contact name"
              },
              {
                "field": "role",
                "name": "Role"
              },
              {
                "field": "company",
                "name": "Company"
              }
            ],
            "sort": "contactName"
          },
          "kaban": {
            "fields": [
              "contact",
              "company"
            ],
            "sort": "contactName"
          },
          "summary": {
            "left": {
              "title": "Quotes",
              "sort": {
                "field": "specificity",
                "reverse": true
              },
              "count": 5,
              "categoryIds": [
                3
              ]
            },
            "main": [
              {
                "title": "Problems",
                "categoryIds": [
                  10
                ],
                "count": 8,
                "sort": {
                  "field": "scale",
                  "reverse": true
                }
              },
              {
                "title": "Needs",
                "categoryIds": [
                  4
                ]
              }
            ]
          }
        },
        "default": "cards"
      }
    },
    {
      "id": 1,
      "title": "Segment",
      "plurals": "Segmentation",
      "resultCategoryId": 36,
      "views": {
        "options": {
          "list": {
            "fields": [
              "title"
            ],
            "sort": "title"
          }
        },
        "default": "list"
      }
    }
  ],
  "evidenceCategories": [
    3,
    10,
    4,
    5
  ],
  "primitiveType": "activity"
},
{
  "_id": {
    "$oid": "64eb349dce4d7f703a952906"
  },
  "id": 41,
  "title": "Desk research",
  "description": "Review and assess expert reports, technical papers etc",
  "parameters": {},
  "actions": [
    {
      "key": "embed_docs",
      "command": "cascade",
      "referenceId": 18,
      "cascadeKey": [
        "embed_content"
      ],
      "target": "descend",
      "title": "EMBED DOCS",
      "menu": "true"
    }
  ],
  "icon": "SparklesIcon",
  "primitiveType": "activity",
  "resultCategories": [
    {
      "id": 0,
      "title": "Background document",
      "plurals": "Background documents",
      "resultCategoryId": 18,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 1,
      "title": "Data query",
      "plurals": "Data queries",
      "resultCategoryId": 81,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    }
  ]
},
{
  "_id": {
    "$oid": "64f493d5ce4d7f703a952913"
  },
  "id": 42,
  "title": "Evidence Map",
  "description": "Evidence Map",
  "parameters": {
    "target": {
      "title": "Cluster",
      "description": "Items to cluster",
      "type": "category_source",
      "locked": true
    },
    "referenceId": {
      "title": "Evidence",
      "description": "Type of evidence",
      "type": "categoryId",
      "hidden": true,
      "locked": true
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field",
      "locked": true
    }
  },
  "actions": [
    {
      "key": "roll_up",
      "title": "Roll-up",
      "menu": "true"
    },
    {
      "key": "categorize",
      "title": "Categorize items in map",
      "menu": "false",
      "engine": "gpt4p"
    },
    {
      "key": "mark_categories",
      "title": "Categorize items in map",
      "menu": "false",
      "engine": "gpt4p"
    },
    {
      "key": "build_segment",
      "command": "roll_up_view",
      "target": "items",
      "title": "Build clusters",
      "field": "title",
      "aiConfig": {},
      "menu": "false",
      "actionFields": {
        "field": {
          "title": "Field to segment by",
          "type": "category_field"
        }
      },
      "resultCategory": 36
    },
    {
      "key": "cluster2",
      "target": "items",
      "alternate": true,
      "title": "Build clusters (alt)",
      "field": "title",
      "aiConfig": {},
      "menu": "false",
      "actionFields": {
        "field": {
          "title": "Field to segment by",
          "type": "category_field"
        }
      },
      "resultCategory": 36
    },
    {
      "key": "define_axis",
      "title": "Build axis",
      "target": "items",
      "field": "title",
      "resultCategory": 36,
      "menu": false
    }
  ],
  "icon": "SignalIcon",
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 36,
      "descend": true,
      "viewsFromtarget": true
    }
  ],
  "evidenceCategories": [],
  "primitiveType": "view"
},
{
  "_id": {
    "$oid": "64fc5cbcce4d7f703a952917"
  },
  "id": 43,
  "title": "Person (expert) extractor",
  "description": "Prompt to analyze text for mentions of people",
  "base": "Are there any people specifically named in the article that are experts in ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of people",
      "default": 10
    },
    "topic": {
      "type": "string",
      "title": "Role",
      "description": "Role of person",
      "default": "None specified"
    }
  },
  "icon": "UserIcon",
  "empty": "Extract a maximum of ${n} perople referenced in this article",
  "summary": "People in the role of",
  "summaryEmpty": "People",
  "openai": {
    "opener": "You must answer some questions using text from the article",
    "prefix": "here is the text from an article: ",
    "postfix": "END OF ARTICLE",
    "field": "name",
    "regex": "\\w+\\s+\\w+",
    "temperature": 0.4,
    "engine": "gpt4p",
    "responseFields": {
      "name": "name of the person where sepcificed",
      "role": "the role of the person where sepcificed",
      "organization": "the organization the person is related to where sepcificed"
    },
    "resultCategory": 44
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "64fc5d08ce4d7f703a952918"
  },
  "id": 44,
  "title": "Person",
  "description": "Reference to a person",
  "parameters": {
    "name": {
      "title": "Name",
      "type": "string"
    },
    "role": {
      "title": "Role",
      "type": "string"
    },
    "organization": {
      "title": "Organization",
      "type": "string"
    }
  },
  "icon": "UserIcon",
  "defaultRenderProps": {
    "card": {
      "fields": [
        "name",
        "role",
        "organization"
      ]
    }
  },
  "primitiveType": "entity"
},
{
  "_id": {
    "$oid": "64fc7b82ce4d7f703a952919"
  },
  "id": 45,
  "title": "OpenAI user problem prompt (article text)",
  "description": "OpenAI GPT-4 prompt to analyze text for user problems",
  "base": "Find a maximum of ${n} specific, concrete problems that are explicitly discussed in the article which relate to ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of problems",
      "default": 5
    },
    "topic": {
      "type": "string",
      "title": "Topic",
      "description": "Category or topic that problem should relate to",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "BoltIcon",
  "empty": "Find a maximum of ${n} specific, concrete problems that are explicitly discussed in the article",
  "summary": "Problems related to",
  "summaryEmpty": "User problems",
  "openai": {
    "opener": "You must extract a series of problems which are explicitly described in the text from an article provided below. Use only the supplied article text to formulate your answers.",
    "sourceType": "article",
    "prefix": "here is the text from an article: ",
    "postfix": "END OF ARTICLE",
    "engine": "gpt4p",
    "responseFields": {
      "problem": "problems you identify in the form 'It sucks that...'",
      "target": "a description of the person or entity who has the problem (if stated)",
      "solution": "a short descriptin of the solution addressing the problem (if stated)",
      "provider": "the name of the organization providing the solution (if stated)"
    },
    "resultCategory": 10,
    "promptType": true,
    "newProcess": true,
    "responseQualifier": "specific and concrete problems were discussed in the article"
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "64fca2c1ce4d7f703a95291a"
  },
  "id": 46,
  "title": "Organization extractor",
  "description": "Prompt to analyze text for mentions of organizations",
  "base": "Are there any organizations specifically named in the article that are related to ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of organizations",
      "default": 10
    }
  },
  "icon": "UserIcon",
  "empty": "Extract the details of up to ${n} organizations explicity referenced in this article",
  "summary": "Organizations focussed on",
  "summaryEmpty": "Organization",
  "unique": true,
  "openai": {
    "opener": "You must answer some questions using text from the article",
    "prefix": "here is the text from an article: ",
    "postfix": "END OF ARTICLE",
    "field": "name",
    "temperature": 0.8,
    "responseFields": {
      "name": "name of the organization where sepcificed",
      "location": "location of the organization where sepcificed"
    },
    "resultCategory": 47
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "64fca2eece4d7f703a95291b"
  },
  "id": 47,
  "title": "Organization",
  "description": "An Organization",
  "parameters": {
    "name": {
      "title": "Name",
      "type": "string"
    },
    "location": {
      "title": "Location",
      "type": "string"
    }
  },
  "icon": "BuildingOffice2Icon",
  "primitiveType": "entity"
},
{
  "_id": {
    "$oid": "64fef425ce4d7f703a95291c"
  },
  "id": 48,
  "title": "Ad testing",
  "description": "Review and assess expert reports, technical papers etc",
  "parameters": {},
  "icon": "SparklesIcon",
  "primitiveType": "activity",
  "resultCategories": [
    {
      "id": 0,
      "title": "Background document",
      "plurals": "Background documents",
      "resultCategoryId": 18,
      "views": {
        "list": {
          "cards": [
            "title",
            "company"
          ]
        },
        "default": "cards",
        "sort": {
          "cards": "title"
        }
      },
      "sort": {
        "list": "title"
      }
    }
  ]
},
{
  "_id": {
    "$oid": "650844c4ce4d7f703a95291e"
  },
  "id": 49,
  "title": "OpenAI solution prompt (article text)",
  "description": "OpenAI GPT-4 prompt to analyze text for solutions being used",
  "base": "Find a maximum of ${n} specific, concrete solutions that are explicitly discussed in the article which relate to ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of solutions",
      "default": 10
    },
    "topic": {
      "type": "string",
      "title": "Topic",
      "description": "Category or topic that solution should relate to",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "BoltIcon",
  "empty": "Find a maximum of ${n} specific, concrete solutions that are explicitly discussed in the article",
  "summary": "Solutions related to",
  "summaryEmpty": "User solutions",
  "openai": {
    "opener": "You must extract a series of solutions which are explicitly described in the text from an article provided below. Use only the supplied article text to formulate your answers.",
    "sourceType": "article",
    "prefix": "here is the text from an article: ",
    "postfix": "END OF ARTICLE",
    "engine": "gpt4p",
    "field": "solution",
    "responseFields": {
      "solution": "solutions identified including who is providing it (where specified)"
    },
    "resultCategory": 27,
    "promptType": true,
    "newProcess": true,
    "responseQualifier": "specific and concrete solutions were discussed in the article"
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "651005b496d65c8707d4e21c"
  },
  "id": 50,
  "title": "GPT4 OpenAI user problem prompt (interview transcript)",
  "description": "OpenAI GPT-4 prompt to analyze text for user problems",
  "base": "Extract a maximum of ${n} problems explicity described in the answers given by the interviewee which relate to ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of problems",
      "default": 5
    },
    "topic": {
      "type": "string",
      "title": "Topic",
      "description": "Category or topic that problem should relate to",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "BoltIcon",
  "empty": "Extract a maximum of ${n} problems explicity stated in the answers given by the interviewee",
  "summary": "[G4] Problems related to",
  "summaryEmpty": "[G4] User problems",
  "openai": {
    "opener": "here is a series of questions asked by an interviewer with some reponses provided by an interviewee",
    "_opener": "here is a transcript of an interview",
    "descriptor": "You must extract a series of problems which are explicity described by the interviewee. Questions from the interviewer that have not been answered must be ignored. Do not turn questions into problems.",
    "responseFields": {
      "problem": "intreviewee problems you identify in the form 'It sucks that...'"
    },
    "newProcess": true,
    "engine": "gpt4p",
    "resultCategory": 10
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "65100ffe96d65c8707d4e21f"
  },
  "id": 51,
  "title": "OpenAI JTBD prompt (interview transcript)",
  "description": "OpenAI GPT-3 prompt to analyze text for user problems",
  "base": "Extract a maximum of ${n} Jobs To be Done explicity described in the answers given by the interviewee which relate to ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of Jobs",
      "default": 5
    },
    "topic": {
      "type": "string",
      "title": "Topic",
      "description": "Category or topic that problem should relate to",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "BoltIcon",
  "empty": "Extract a maximum of ${n} Jobs To be Done explicity described in the answers given by the interviewee",
  "summary": "JTBD related to",
  "summaryEmpty": "Jobs To be Done",
  "openai": {
    "opener": "here is a series of questions asked by an interviewer with some reponses provided by an interviewee",
    "_opener": "here is a transcript of an interview",
    "descriptor": "You must extract a series of Jobs To be Done which are explicity described by the interviewee. Questions from the interviewer that have not been answered must be ignored. Do not turn questions into responses.",
    "field": "job",
    "responseFields": {
      "job": "intreviewee Jobs To Be Done you identify in the form 'As a ... I need...'"
    },
    "newProcess": true,
    "engine": "gpt4t",
    "resultCategory": 52
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "6510102196d65c8707d4e220"
  },
  "id": 52,
  "title": "Job to be done",
  "plural": "Jobs to be done",
  "description": "Job to be done",
  "type": "qualitative",
  "icon": "ChatBubbleBottomCenterTextIcon",
  "parameters": {},
  "primitiveType": "evidence",
  "renderConfig": {
    "explore": {
      "exportFields": [
        "title"
      ]
    }
  }
},
{
  "_id": {
    "$oid": "6512764288f35eb1bc0245c0"
  },
  "id": 53,
  "title": "Mapping",
  "description": "Categorize items based on alignment to category children",
  "subCategories": "inherit",
  "mapMode": "children",
  "target": "items",
  "parameters": {
    "source_type": {
      "type": "string",
      "title": "Category descripton"
    },
    "customer_focus": {
      "type": "string",
      "title": "Customer focus"
    },
    "source": {
      "title": "Source categories",
      "type": "primitive",
      "referenceId": 54
    },
    "alignment": {
      "type": "range",
      "title": "Alignment threshold",
      "default": 50,
      "minValue": 10,
      "maxValue": 100,
      "stepValue": 5,
      "asPercent": true
    }
  },
  "openai": {},
  "primitiveType": "category"
},
{
  "_id": {
    "$oid": "6512962088f35eb1bc0245c1"
  },
  "id": 54,
  "title": "Category",
  "description": "Option",
  "type": "qualitative",
  "icon": "ChevronRightIcon",
  "parameters": {
    "target": {
      "title": "Categorize",
      "description": "Items to categorize",
      "type": "category_source",
      "scope": [
        "items",
        {
          "scope": "parents",
          "types": [
            "result",
            "entity",
            "evidence"
          ]
        }
      ]
    },
    "referenceId": {
      "title": "Items",
      "description": "Type of items",
      "type": "categoryId",
      "hidden": true
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field",
      "includeContext": true
    },
    "cat_theme": {
      "title": "Categorization theme",
      "description": "Categorization theme",
      "optional": true,
      "type": "string"
    },
    "rationale": {
      "title": "Perform additional validation",
      "description": "Perform additional validation",
      "optional": true,
      "type": "boolean"
    }
  },
  "primitiveType": "category"
},
{
  "_id": {
    "$oid": "6513ffbf88f35eb1bc0245c4"
  },
  "id": 55,
  "title": "Content search",
  "description": "Mark items that match keywords",
  "mapMode": "content",
  "parameters": {
    "target": {
      "title": "Categorize",
      "description": "Items to categorize",
      "type": "category_source"
    },
    "referenceId": {
      "title": "Evidence",
      "description": "Type of evidence",
      "type": "categoryId",
      "hidden": true
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field"
    }
  },
  "openai": {},
  "primitiveType": "category"
},
{
  "_id": {
    "$oid": "651a90a656a0a456eacc3387"
  },
  "id": 56,
  "title": "GPT-4 OpenAI user problem prompt (article text)",
  "description": "OpenAI GPT-4 prompt to analyze text for user problems",
  "base": "Find a maximum of ${n} specific, concrete problems that are explicitly discussed in the article which relate to ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of problems",
      "default": 5
    },
    "topic": {
      "type": "string",
      "title": "Topic",
      "description": "Category or topic that problem should relate to",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "BoltIcon",
  "empty": "Find a maximum of ${n} specific, concrete problems that are explicitly discussed in the article",
  "summary": "[G4] Problems related to",
  "summaryEmpty": "[G4] User problems",
  "openai": {
    "opener": "You must extract a series of problems which are explicitly described in the text from an article provided below. Use only the supplied article text to formulate your answers.",
    "sourceType": "article",
    "prefix": "here is the text from an article: ",
    "postfix": "END OF ARTICLE",
    "engine": "gpt4",
    "responseFields": {
      "problem": "problems you identify inlcuding the cause of the problem in the form 'It sucks that...'"
    },
    "resultCategory": 10,
    "promptType": true,
    "newProcess": true,
    "responseQualifier": "specific and concrete problems were discussed in the article"
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "651be5ce56a0a456eacc338e"
  },
  "id": 57,
  "title": "Target list",
  "description": "Target list explorer",
  "parameters": {
    "topics": {
      "type": "list",
      "title": "Topics"
    },
    "summary": {
      "type": "string",
      "title": "Summary"
    }
  },
  "actions": [
    {
      "key": "categorize",
      "title": "Auto discover from job role",
      "target": "results.0",
      "field": "param.role",
      "dataTypes": "job title",
      "engine": "gpt3",
      "resultCategory": 33
    },
    {
      "key": "extract_from_articles",
      "command": "cascade",
      "referenceId": 34,
      "cascadeKey": [
        "questions"
      ],
      "target": "descend",
      "title": "Process questions on articles",
      "menu": "true"
    },
    {
      "key": "convert_activities",
      "command": "cascade",
      "referenceId": 58,
      "cascadeKey": [
        "convert_activities"
      ],
      "target": "descend",
      "title": "Extract LinkedIn Posts",
      "menu": "true"
    },
    {
      "key": "find_staff",
      "title": "Find people test",
      "manual": true,
      "menu": true,
      "resultCategory": 58,
      "roles": [
        "architect"
      ]
    },
    {
      "key": "build_market_view",
      "command": "build_view",
      "title": "Create view",
      "field": "title",
      "referenceId": 63,
      "menu": false,
      "manualFields": [
        "referenceId"
      ],
      "baseCategory": 64
    },
    {
      "key": "query_linkedin_posts",
      "title": "DDG",
      "count": 500,
      "field": "title",
      "resultCategory": 63,
      "menu": true
    },
    {
      "key": "extract_authors",
      "command": "cascade",
      "referenceId": 63,
      "cascadeKey": [
        "lookup_author"
      ],
      "target": "children",
      "title": "Lookup author of posts",
      "menu": "true"
    }
  ],
  "sections": {
    "categories": true,
    "questions": true
  },
  "icon": "SignalIcon",
  "resultCategories": [
    {
      "id": 0,
      "title": "Profiles",
      "plurals": "Targets",
      "resultCategoryId": 58,
      "views": {
        "options": {
          "explore": {
            "show": true
          },
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "logo_title",
                "title": "Name"
              },
              {
                "field": "headline",
                "title": "Headline"
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "cluster": {
            "show": true
          },
          "proximity": {
            "show": true
          },
          "default": "cards",
          "defaultWide": "table",
          "fullPageExplorer": true,
          "createFromPaste": [
            {
              "title": "LinkedIn Profile URL",
              "field": "linkedIn"
            }
          ]
        }
      }
    },
    {
      "id": 1,
      "title": "Market Map",
      "plurals": "Market Maps",
      "resultCategoryId": 38,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "explore": {
            "show": true
          },
          "cluster": {
            "show": true
          },
          "proximity": {
            "show": true
          },
          "default": "table",
          "fullPageExplorer": true,
          "viewer": true,
          "descend": true
        },
        "create": {
          "default": {
            "action": {
              "key": "build_view"
            },
            "actionFields": {
              "referenceId": {
                "title": "Items to cluster",
                "referenceIds": [
                  58
                ],
                "primitiveTypes": [
                  "result"
                ],
                "type": "category_source"
              }
            }
          }
        }
      }
    },
    {
      "id": 2,
      "title": "Social activity",
      "plurals": "Social activities",
      "resultCategoryId": 63,
      "searchCategoryIds": [
        67
      ],
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "descend": true
        }
      }
    },
    {
      "id": 4,
      "title": "Social activity Map",
      "plurals": "Social activity Maps",
      "resultCategoryId": 64,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "explore": {
            "show": true
          },
          "cluster": {
            "show": true
          },
          "proximity": {
            "show": true
          },
          "default": "table",
          "fullPageExplorer": true,
          "viewer": true,
          "descend": true
        },
        "create": {
          "default": {
            "action": {
              "key": "build_market_view"
            },
            "actionFields": {
              "referenceId": {
                "title": "Items to cluster",
                "referenceIds": [
                  63
                ],
                "primitiveTypes": [
                  "result"
                ],
                "type": "category_source"
              }
            }
          }
        }
      }
    }
  ],
  "evidenceCategories": [],
  "primitiveType": "activity"
},
{
  "_id": {
    "$oid": "651be5fb56a0a456eacc338f"
  },
  "id": 58,
  "title": "Profile",
  "description": "A target profile",
  "openai": {
    "summarize": {
      "opener": "here is the social media profile of a person",
      "source": {
        "field": "param.summary"
      },
      "execute": {
        "types": "social media profiles",
        "prompt": "Generate a summary of the profiles in the form 'Profiles for individuals focused on...' in 20-30 words which describes the common theme or focus of all profiles.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
      }
    },
    "responseInstructions": "Your response must be in json format and should include each question or task with the key set to the question or task number and with an array of results. For question, each entry in the array must have a \"quote\" field containing the original text, a \"answer\" field containing your answer. If there is no result for a specific question set the \"quote\" field to \"none\" and exclude the \"answer\" field. For each task just provide an entry with an \"answer\" field set to your response."
  },
  "icon": "UserIcon",
  "defaultRenderProps": {
    "card": {
      "variant": false,
      "width": "32rem",
      "fields": [
        "title",
        "role",
        "location"
      ],
      "showImg": true
    }
  },
  "primitiveType": "result",
  "resultCategories": [
    {
      "id": 0,
      "title": "Social activity",
      "plurals": "Social activities",
      "resultCategoryId": 63,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    }
  ],
  "promptCategories": [
    45,
    43,
    46,
    49
  ],
  "actions": [
    {
      "key": "convert_activities",
      "title": "Extract post activity from LinkedIn",
      "canCreate": true,
      "menu": true,
      "icon": "ShareIcon",
      "resultCategory": 63,
      "type": "result",
      "required": [
        "profile"
      ]
    },
    {
      "key": "fetch_company_from_person",
      "title": "Extract main company from person",
      "canCreate": true,
      "menu": true,
      "showInCollection": true,
      "icon": "ShareIcon",
      "resultCategory": 29
    },
    {
      "key": "refresh_profile",
      "title": "Refresh profile from LI",
      "menu": false,
      "showInCollection": false,
      "icon": "ShareIcon"
    },
    {
      "key": "test_extract",
      "title": "POST TEST",
      "canCreate": true,
      "menu": true,
      "icon": "ShareIcon"
    }
  ],
  "parameters": {
    "fullname": {
      "type": "string",
      "title": "Full name",
      "description": "Full name"
    },
    "url": {
      "type": "url",
      "title": "Website URL",
      "description": "Main website of company"
    },
    "email": {
      "type": "email",
      "title": "Email",
      "description": "Primary email"
    },
    "profile": {
      "type": "url",
      "title": "LinkedIn Profile",
      "description": "LinkedIn Profile page"
    },
    "role": {
      "type": "string",
      "title": "Job title",
      "description": "Current job title"
    },
    "headline": {
      "type": "string",
      "title": "Headline",
      "description": "Brief intro",
      "excludeFromAggregation": true
    },
    "degree_end_year": {
      "type": "number",
      "title": "Year first graduated",
      "description": "Year first graduated"
    },
    "summary": {
      "type": "long_string",
      "title": "Summary",
      "description": "Description of the organization",
      "excludeFromAggregation": true
    },
    "location": {
      "type": "string",
      "title": "Location",
      "description": "Location"
    },
    "allskills": {
      "type": "long_string",
      "title": "Skills",
      "description": "List of Skills"
    }
  }
},
{
  "_id": {
    "$oid": "6523eb2e56a0a456eacc33ac"
  },
  "id": 59,
  "title": "PE Firm",
  "description": "A PE firm",
  "icon": "BuildingOffice",
  "primitiveType": "entity",
  "resultCategories": [
    {
      "id": 0,
      "title": "Acquisition",
      "plurals": "Acquisitions",
      "resultCategoryId": 29,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "logo_title",
                "title": "Name",
                "width": 250
              },
              {
                "field": "description",
                "title": "Description",
                "width": 0.4
              },
              {
                "field": "location",
                "title": "Location",
                "width": 0.1
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 1,
      "title": "Article",
      "plurals": "Articles",
      "resultCategoryId": 34,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "descend": true
        }
      }
    }
  ],
  "promptCategories": [],
  "actions": [
    {
      "key": "enrich",
      "title": "Enrich from linkedIn",
      "onUpdate": [
        "linkedIn"
      ],
      "onCreate": true,
      "manual": true,
      "menu": true,
      "required": [
        "linkedIn"
      ]
    },
    {
      "key": "fetch_acq",
      "title": "Fetch acquisition list",
      "canCreate": true,
      "menu": true,
      "icon": "NewspaperIcon",
      "sources": [
        "cb"
      ],
      "resultCategory": 29,
      "type": "result",
      "required": [
        "url"
      ]
    },
    {
      "key": "cascade_staff",
      "command": "cascade",
      "referenceId": 29,
      "cascadeKey": [
        "find_staff"
      ],
      "title": "Fetch key people for all acquisitions",
      "menu": true
    },
    {
      "key": "cascade_articles",
      "command": "cascade",
      "referenceId": 29,
      "cascadeKey": [
        "fetch_articles_from_query"
      ],
      "title": "Fetch acquisition arcticles",
      "menu": true
    },
    {
      "key": "cascade_mark",
      "command": "cascade",
      "referenceId": 29,
      "cascadeKey": [
        "mark_child"
      ],
      "title": "Mark most senior person",
      "menu": true
    },
    {
      "key": "process_questions_on_main",
      "command": "cascade",
      "referenceId": 34,
      "cascadeKey": [
        "questions"
      ],
      "target": "descend",
      "title": "Process questions on articles",
      "menu": "true"
    }
  ],
  "parameters": {
    "focus": {
      "type": "string",
      "description": "Focus of PE firm",
      "title": "Focus"
    },
    "url": {
      "type": "url",
      "title": "Website URL",
      "description": "Main website of company"
    },
    "linkedIn": {
      "type": "url",
      "title": "LinkedIn Profile",
      "description": "LinkedIn Profile page"
    },
    "description": {
      "type": "long_string",
      "title": "Description",
      "description": "Description of the organization",
      "excludeFromAggregation": true
    }
  }
},
{
  "_id": {
    "$oid": "65240e7356a0a456eacc33ad"
  },
  "id": 60,
  "title": "[G3!!G4] Question prompt",
  "description": "OpenAI GPT-4 prompt to answer questons",
  "base": "Extract a maximum of ${n} answers explicitly provided document which address the following question: ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of answers",
      "default": 10
    },
    "topic": {
      "type": "string",
      "title": "Question",
      "description": "The question to relay",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "QuestionIcon",
  "empty": null,
  "summary": "[G4] Question:",
  "summaryEmpty": null,
  "openai": {
    "opener": "here is a document",
    "descriptor": "You must use only the text provided in the document when forming your response",
    "responseFields": {
      "answer": "synthesized response"
    },
    "engine": "gpt3",
    "resultCategory": 31,
    "field": "answer"
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "6527a93556a0a456eacc33b0"
  },
  "id": 61,
  "title": "[G4] Offering prompt",
  "description": "OpenAI GPT-4 prompt to extract market offerings",
  "base": "Extract a maximum of ${n} offerings explicitly described in the document which relate to: ${t}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of answers",
      "default": 10
    },
    "topic": {
      "type": "string",
      "title": "Question",
      "description": "The question to relay",
      "default": "None specified"
    },
    "resultCategory": {
      "type": "categoryId"
    }
  },
  "icon": "QuestionIcon",
  "empty": "Extract a maximum of ${n} market offerings explicitly described in the document",
  "summary": "[G4] Offerings related to:",
  "summaryEmpty": "[G4] Offerings",
  "openai": {
    "opener": "here is a document",
    "descriptor": "You must use only the text provided in the document when forming your response",
    "responseFields": {
      "offering": "summary of offering in 6 words",
      "provider": "the name of the organization providing the offering (if stated)",
      "target": "the target customers for the offering (if stated)",
      "addressing": "the key problem being addressed by the offering (if stated)"
    },
    "engine": "gpt4p",
    "resultCategory": 27,
    "field": "offering",
    "newProcess": true
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "652cdad056a0a456eacc33b3"
  },
  "id": 62,
  "title": "Person (staff) extractor",
  "description": "Prompt to analyze text for mentions of people",
  "base": "Extract the name of the first person mentioned in the article who are a ${t} at ${oot}",
  "parameters": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Maximum number of people",
      "default": 10
    },
    "topic": {
      "type": "string",
      "title": "Role",
      "description": "Role of person",
      "default": "None specified"
    }
  },
  "icon": "UserIcon",
  "empty": "Extract a maximum of ${n} staff members who work at ${oot} referenced in this article",
  "summary": "People who ",
  "summaryEmpty": "Team members",
  "openai": {
    "opener": "You must answer some questions using text from the article",
    "prefix": "here is the text from an article: ",
    "postfix": "END OF ARTICLE",
    "field": "name",
    "regex": "\\w+\\s+\\w+",
    "temperature": 0.4,
    "responseFields": {
      "name": "name of the person where sepcificed",
      "role": "the role of the person where sepcificed",
      "organization": "the organization the person is related to where sepcificed"
    },
    "resultCategory": 44
  },
  "primitiveType": "prompt"
},
{
  "_id": {
    "$oid": "653a603b7fb9898ef0ff8202"
  },
  "id": 63,
  "title": "Post",
  "description": "Social media post",
  "icon": "ShareIcon",
  "openai": {
    "opener": "here is the text of a social media post",
    "descriptor": "Answer the following questions using information from the post:",
    "summarize": {
      "source": {
        "field": "param.text"
      },
      "execute": {
        "types": "social media posts",
        "prompt": "Generate a summary of the posts in the form 'Posts related to...' in 20-30 words which describes the common theme or focus of all posts.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
      }
    },
    "responseInstructions": "Your response must be in json format and should include each question or task with the key set to the question or task number and with an array of results. For question, each entry in the array must have a \"quote\" field containing the original text, a \"answer\" field containing your answer. If there is no result for a specific question set the \"quote\" field to \"none\" and exclude the \"answer\" field. For each task just provide an entry with an \"answer\" field set to your response."
  },
  "parameters": {
    "url": {
      "type": "url",
      "title": "Url",
      "description": "URL of article"
    },
    "overview": {
      "type": "long_string",
      "description": "Overview",
      "title": "Overview",
      "optional": true
    },
    "imageUrl": {
      "type": "url",
      "title": "imageUrl",
      "description": "URL of article image"
    },
    "source": {
      "type": "string",
      "title": "Source"
    },
    "company": {
      "type": "string",
      "title": "Company"
    },
    "location": {
      "type": "string",
      "title": "Location"
    },
    "posted": {
      "type": "date",
      "title": "Posted date"
    },
    "status": {
      "type": "string",
      "title": "Social activity type"
    },
    "snippet": {
      "type": "string",
      "description": "Snippet",
      "title": "Snippet",
      "optional": true
    }
  },
  "actions": [
    {
      "key": "fetch_social_content",
      "title": "Fetch content",
      "menu": true,
      "onUpdate": [
        "url"
      ],
      "onCreate": true
    },
    {
      "key": "embed_content",
      "title": "Embed Content",
      "menu": true,
      "icon": "QuestionIcon"
    },
    {
      "key": "questions",
      "command": "questions",
      "title": "Process questions",
      "menu": true,
      "icon": "QuestionIcon"
    },
    {
      "key": "lookup_author",
      "command": "lookup_author",
      "title": "Add Post author to task",
      "resultCategory": 58,
      "menu": true,
      "showInCollection": true,
      "icon": "QuestionIcon"
    },
    {
      "key": "fetch_company_from_post",
      "command": "fetch_company_from_post",
      "title": "Add Post company to task",
      "resultCategory": 29,
      "menu": true,
      "showInCollection": true,
      "icon": "QuestionIcon"
    },
    {
      "key": "summarize",
      "title": "Summarize content of post",
      "deriveTitle": true,
      "field": "content",
      "targetParameter": "overview",
      "prompt": "Produce a summary a 100-150 word summary of this post.",
      "engine": "gpt4p",
      "showInCollection": true,
      "menu": true
    }
  ],
  "promptCategories": [
    45,
    43,
    46,
    49,
    21,
    61,
    62
  ],
  "primitiveType": "result",
  "do_discovery": true
},
{
  "_id": {
    "$oid": "653a6fdb7fb9898ef0ff8203"
  },
  "id": 64,
  "title": "Post Map",
  "description": "Post Map",
  "parameters": {
    "target": {
      "title": "Cluster",
      "description": "Items to cluster",
      "type": "category_source",
      "locked": true
    },
    "referenceId": {
      "title": "Evidence",
      "description": "Type of evidence",
      "type": "categoryId",
      "hidden": true,
      "locked": true
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field",
      "locked": true
    }
  },
  "actions": [
    {
      "key": "categorize",
      "title": "Categorize items in map",
      "menu": "false"
    },
    {
      "key": "mark_categories",
      "title": "Categorize items in map",
      "menu": "false"
    },
    {
      "key": "roll_up",
      "title": "Roll-up",
      "menu": "true"
    },
    {
      "key": "build_segment",
      "command": "roll_up_view",
      "target": "items",
      "title": "Build clusters",
      "field": "title",
      "referenceId": 63,
      "aiConfig": {
        "param.text": {
          "types": "social media posts",
          "combinePrompt": "Generate a summary of the groups in the form 'Posts related to...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific groups in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the posts in the form 'Posts related to...' which describes the common theme or focus of all posts.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        }
      },
      "menu": "false",
      "actionFields": {
        "field": {
          "title": "Field to segment by",
          "type": "category_field"
        }
      },
      "resultCategory": 65
    }
  ],
  "icon": "SignalIcon",
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 65,
      "descend": true,
      "viewsFromtarget": true
    }
  ],
  "primitiveType": "view"
},
{
  "_id": {
    "$oid": "653a70337fb9898ef0ff8205"
  },
  "id": 65,
  "title": "Post segment",
  "description": "Segementation of posts",
  "type": "qualitative",
  "icon": "ChevronRightIcon",
  "parameters": {
    "bgcolor": {
      "type": "color",
      "title": "Background Color",
      "asAxis": false
    },
    "description": {
      "type": "string",
      "title": "Overview of segment",
      "asAxis": false
    }
  },
  "actions": [
    {
      "key": "summarize",
      "title": "Summarize posts in this segment",
      "referenceCategoryId": 63,
      "menu": true
    },
    {
      "key": "create_summary",
      "title": "Create summary",
      "menu": true,
      "actionFields": {
        "field": {
          "title": "Field",
          "description": "Field of item to use",
          "itemMeta": true,
          "type": "category_field",
          "includeContext": true,
          "includeContent": true
        },
        "summary_type": {
          "type": "option_list",
          "options": [
            "summary",
            "overview",
            "top_5",
            "custom"
          ],
          "title": "Summary type"
        },
        "prompt": {
          "type": "string",
          "title": "Custom prompt"
        }
      }
    }
  ],
  "renderConfig": {
    "explore": {
      "configs": [
        {
          "id": 0,
          "title": "Summary",
          "description": "View Problem Statements in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true,
            "searchPane": true
          },
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        },
        {
          "id": 1,
          "title": "Overview",
          "description": "View Problem Statements in each segment",
          "props": {
            "hideDetails": false,
            "cardView": false,
            "showGrid": false,
            "overlay": false
          }
        },
        {
          "id": 2,
          "title": "Article overview",
          "description": "Latest article in segment",
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "hideMore": false,
            "showGrid": true,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "overlay": false,
            "details": {
              "pivot": "origin"
            }
          }
        },
        {
          "id": 3,
          "title": "Article timeline",
          "description": "Plot of funding amounts and stage",
          "parameters": {
            "fixedSpan": "col-span-4"
          },
          "props": {
            "hideDetails": true,
            "showGrid": false,
            "overlay": false,
            "graph": true,
            "details": {
              "sync": [
                "xmin"
              ],
              "pivot": "origin",
              "mode": "timeline",
              "y-axis": {
                "action": "count",
                "sort": "posted",
                "sort_formatter": "datetime"
              },
              "x-axis": {
                "parameter": "posted",
                "formatter": "datetime"
              }
            }
          }
        },
        {
          "id": 4,
          "title": "Problem statements",
          "description": "View Problem Statements in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true
          },
          "props": {
            "hideDetails": true,
            "cardView": true,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 12,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        }
      ]
    }
  },
  "primitiveType": "segment",
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 65,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "explore": {
            "show": true,
            "configs": [
              {
                "id": 0,
                "title": "Overview",
                "description": "View all organizations in the segment",
                "parameters": {
                  "span": {
                    "nestedItem": {
                      "10": {
                        "columns": 2
                      },
                      "20": {
                        "columns": 2,
                        "rows": 2
                      },
                      "70": {
                        "columns": 2,
                        "rows": 3
                      },
                      "100": {
                        "columns": 2,
                        "rows": 4
                      }
                    }
                  }
                },
                "props": {
                  "hideDetails": true,
                  "showGrid": true,
                  "imageOnly": true
                }
              },
              {
                "id": 1,
                "title": "Summary",
                "description": "Provide a summary of the segment",
                "props": {
                  "hideDetails": false,
                  "showGrid": true,
                  "itemLimit": 10
                }
              },
              {
                "id": 2,
                "title": "Overlay",
                "description": "Highlevel statistics about the segment",
                "parameters": {
                  "span": {
                    "nestedItem": {
                      "10": {
                        "columns": 2
                      },
                      "20": {
                        "columns": 2,
                        "rows": 2
                      },
                      "70": {
                        "columns": 2,
                        "rows": 3
                      },
                      "100": {
                        "columns": 2,
                        "rows": 4
                      }
                    }
                  }
                },
                "props": {
                  "hideDetails": true,
                  "showGrid": true,
                  "imageOnly": true,
                  "overlay": true,
                  "details": [
                    {
                      "action": "sum",
                      "parameter": "funding",
                      "formatter": "currency"
                    }
                  ]
                }
              },
              {
                "id": 3,
                "title": "Funding ",
                "description": "Plot of funding amounts and stage",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "log": true,
                    "x-axis": {
                      "parameter": "funding",
                      "formatter": "currency"
                    },
                    "y-axis": {
                      "field": "title",
                      "icon": true,
                      "sort": {
                        "parameter": "funding",
                        "entry": "last"
                      }
                    }
                  }
                }
              },
              {
                "id": 4,
                "title": "Funding journey",
                "description": "Plot of funding amounts and stage",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "type": "line",
                    "filters": [
                      {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "values": [
                          "Pre Seed Round",
                          "Seed Round",
                          "Series A",
                          "Series B",
                          "Series C",
                          "Series D",
                          "Series E"
                        ]
                      }
                    ],
                    "x-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "timeSinceFounded",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "days",
                      "delta": {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "groupField": "avg_days"
                      }
                    },
                    "y-axis": {
                      "field": "title",
                      "icon": true,
                      "sort": {
                        "parameter": "fundingRoundInfo.[-1].title"
                      }
                    },
                    "z-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "amount",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "currency"
                    }
                  }
                }
              },
              {
                "id": 5,
                "title": "Funding Horizon",
                "description": "Plot of funding amounts and stage",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "type": "line",
                    "filters": [
                      {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "values": [
                          "Pre Seed Round",
                          "Seed Round",
                          "Series A",
                          "Series B",
                          "Series C",
                          "Series D",
                          "Series E"
                        ]
                      }
                    ],
                    "x-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "timeSinceFounded",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "days",
                      "delta": {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "offset": 1,
                        "groupField": "avg_days"
                      }
                    },
                    "y-axis": {
                      "field": "title",
                      "icon": true,
                      "sort": {
                        "parameter": "fundingRoundInfo.[-1].title"
                      }
                    },
                    "z-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "amount",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "currency"
                    }
                  }
                }
              },
              {
                "id": 6,
                "title": "Funding timeline",
                "description": "Plot of funding amounts and stage",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "sync": [
                      "xmin"
                    ],
                    "mode": "timeline",
                    "log": true,
                    "y-axis": {
                      "parameter": "fundingRoundInfo.[].amount",
                      "formatter": "currency",
                      "sort": "annouced",
                      "sort_formatter": "datetime"
                    },
                    "x-axis": {
                      "parameter": "fundingRoundInfo.[].annouced",
                      "formatter": "datetime"
                    }
                  }
                }
              },
              {
                "id": 7,
                "title": "Funding Pace",
                "description": "Compare funding pace and size to peers",
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "log": true,
                    "type": "line",
                    "filters": [
                      {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "values": [
                          "Pre Seed Round",
                          "Seed Round",
                          "Series A",
                          "Series B",
                          "Series C",
                          "Series D",
                          "Series E"
                        ]
                      }
                    ],
                    "mode": "xy",
                    "x-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "invert": true,
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "timeSinceFounded",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "days",
                      "delta": {
                        "parameter": "fundingRoundInfo.[-1].title",
                        "offset": 1,
                        "groupField": "avg_days"
                      }
                    },
                    "y-axis": {
                      "parameter": "fundingRoundInfo.[-1].title",
                      "match": {
                        "collection": "fundingRoundInfo",
                        "key": "title",
                        "parameter": "amount",
                        "xzSort": "timeSinceFounded"
                      },
                      "formatter": "currency"
                    }
                  }
                }
              }
            ]
          },
          "cluster": {
            "show": true
          },
          "proximity": {
            "show": true
          },
          "default": "cards",
          "descend": true,
          "fullPageExplorer": true
        }
      }
    }
  ],
  "holds": [
    63
  ]
},
{
  "_id": {
    "$oid": "65452ad27fb9898ef0ff8207"
  },
  "id": 66,
  "title": "Profile segment",
  "description": "Segementation of profiles",
  "type": "qualitative",
  "icon": "ChevronRightIcon",
  "parameters": {
    "description": {
      "type": "string",
      "title": "Overview of segment",
      "asAxis": false
    }
  },
  "actions": [
    {
      "key": "summarize",
      "title": "Summarize profiles in this segment",
      "referenceCategoryId": 58,
      "menu": true
    }
  ],
  "renderConfig": {
    "explore": {
      "configs": [
        {
          "id": 0,
          "title": "Summary",
          "description": "View Profiles in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true,
            "searchPane": true
          },
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        }
      ]
    }
  },
  "primitiveType": "segment",
  "holds": [
    58
  ]
},
{
  "_id": {
    "$oid": "654763357fb9898ef0ff8208"
  },
  "id": 67,
  "title": "Social media search",
  "description": "Search for social media posts",
  "placeholder": "Search keywords (comma sperated)",
  "icon": "ShareIcon",
  "blankTitle": true,
  "parameters": {
    "sources": {
      "type": "options",
      "title": "Source",
      "description": "Social platforms to search",
      "options": [
        {
          "id": 0,
          "title": "LinkedIn",
          "platform": "linkedin",
          "type": "posts",
          "primaryField": "url",
          "importField": "referenceParameters.url",
          "filterPre": "keyword",
          "filterMid": "topic_similarity",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "resultCategoryId": 63
        },
        {
          "id": 1,
          "platform": "youtube",
          "title": "YouTube",
          "type": "posts",
          "primaryField": "url",
          "importField": "referenceParameters.url",
          "filterMid": "topic_similarity",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "resultCategoryId": 63
        },
        {
          "id": 2,
          "platform": "facebook_group",
          "title": "Facebook Groups",
          "type": "posts",
          "primaryField": "url",
          "filterMid": "snippet",
          "importField": "referenceParameters.url",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "resultCategoryId": 63
        },
        {
          "id": 3,
          "title": "LinkedIn Jobs",
          "platform": "linkedin",
          "type": "jobs",
          "extractHandler": "LI_JOB",
          "primaryField": "job_url",
          "importField": "referenceParameters.url",
          "resultCategoryId": 63
        }
      ],
      "default": [
        0
      ]
    },
    "nest_orgs": {
      "type": "boolean",
      "title": "Search by organisations",
      "nestedSearch": true,
      "referenceCategoryId": 29,
      "placeholder": "From task",
      "optional": false
    },
    "topic": {
      "type": "long_string",
      "title": "Topics to filter by",
      "placeholder": "From task",
      "optional": true
    },
    "exact": {
      "type": "boolean",
      "title": "Ensure an exact match to keyword / phrase",
      "default": true
    },
    "phrase": {
      "type": "boolean",
      "title": "Search for phrase",
      "default": true
    },
    "count": {
      "type": "number",
      "title": "Number",
      "description": "Target number of posts per search",
      "default": 100
    }
  },
  "actions": [],
  "primitiveType": "search"
},
{
  "_id": {
    "$oid": "655243012e21adf01a4b7252"
  },
  "id": 68,
  "title": "Article search",
  "description": "Search for social media posts",
  "placeholder": "Search keywords (comma sperated)",
  "icon": "ShareIcon",
  "parameters": {
    "sources": {
      "type": "options",
      "title": "Source",
      "description": "Article source to search",
      "options": [
        {
          "id": 0,
          "platform": "gdelt",
          "title": "GDELT Project",
          "type": "article",
          "primaryField": "url",
          "importField": "referenceParameters.url",
          "additionalDuplicateCheck": [
            [
              "title",
              "title"
            ]
          ],
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "resultCategoryId": 34
        },
        {
          "id": 1,
          "platform": "google_news",
          "title": "Google news",
          "type": "article",
          "primaryField": "url",
          "importField": "referenceParameters.url",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "filterMid": "topic_similarity",
          "resultCategoryId": 34
        },
        {
          "id": 2,
          "platform": "google",
          "title": "Google",
          "type": "article",
          "primaryField": "url",
          "importField": "referenceParameters.url",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "filterMid": "topic_similarity",
          "resultCategoryId": 34
        }
      ],
      "default": [
        0,
        1
      ]
    },
    "topic": {
      "type": "long_string",
      "title": "Topics to filter by",
      "placeholder": "From task",
      "optional": true
    },
    "site": {
      "type": "string",
      "title": "Limit to site",
      "optional": true
    },
    "exact": {
      "type": "boolean",
      "title": "Ensure an exact match to keyword / phrase",
      "default": true
    },
    "phrase": {
      "type": "boolean",
      "title": "Search for phrase",
      "default": true
    },
    "timeFrame": {
      "type": "option_list",
      "title": "Timefame",
      "options": [
        "last_week",
        "last_month",
        "last_year",
        ""
      ],
      "default": "last_year"
    },
    "count": {
      "type": "number",
      "title": "Number",
      "description": "Target number of posts per search",
      "default": 100
    }
  },
  "actions": [],
  "primitiveType": "search"
},
{
  "_id": {
    "$oid": "655385932e21adf01a4b7253"
  },
  "id": 69,
  "title": "Organization search",
  "description": "Search for organizations",
  "placeholder": "Search keywords (comma sperated)",
  "blankTitle": true,
  "icon": "ShareIcon",
  "parameters": {
    "sources": {
      "type": "options",
      "title": "Source",
      "description": "Article source to search",
      "options": [
        {
          "id": 0,
          "platform": "crunchbase",
          "title": "Crunchbase",
          "type": "organization",
          "primaryField": "domain",
          "importField": "referenceParameters.domain",
          "additionalDuplicateCheck": [
            [
              "referenceParameters.url",
              "website_url"
            ]
          ],
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "resultCategoryId": 29
        }
      ],
      "default": [
        0
      ]
    },
    "topic": {
      "type": "long_string",
      "title": "Topics to filter by",
      "placeholder": "From task",
      "optional": true
    },
    "exact": {
      "type": "boolean",
      "title": "Ensure an exact match to keyword / phrase",
      "default": true
    },
    "phrase": {
      "type": "boolean",
      "title": "Search for phrase",
      "default": true
    },
    "count": {
      "type": "number",
      "title": "Number",
      "description": "Target number of posts per search",
      "default": 100
    },
    "ipo": {
      "type": "boolean",
      "title": "IPO'd",
      "allowNull": true
    },
    "headquaters": {
      "type": "string",
      "title": "Headquaters",
      "allowNull": true
    },
    "exit_year": {
      "type": "number",
      "title": "IPO Year",
      "allowNull": true
    }
  },
  "actions": [],
  "primitiveType": "search"
},
{
  "_id": {
    "$oid": "656058922e21adf01a4b7255"
  },
  "id": 71,
  "title": "Offering",
  "description": "Product or service offered by an organization",
  "icon": "ShareIcon",
  "parameters": {
    "problems": {
      "title": "Problems addressed",
      "type": "string",
      "description": "Problems is the organization tackling"
    },
    "value_prop": {
      "title": "Value propositon",
      "type": "string",
      "description": "Value proposition being offered to customers"
    },
    "benefits": {
      "title": "Benefits",
      "type": "string",
      "description": "Benefits the organziation proclaims"
    },
    "results": {
      "title": "Results",
      "type": "string",
      "description": "Results described by the organizaton?"
    },
    "approach": {
      "title": "Approach",
      "type": "string",
      "description": "Approaches in use by the organization"
    },
    "capabilities": {
      "title": "Capabilities",
      "type": "string",
      "description": "Capabilities the organization has"
    },
    "customers": {
      "title": "Customers",
      "type": "string",
      "description": "Customers served"
    },
    "industries": {
      "title": "Industries",
      "type": "string",
      "description": "Industries served"
    }
  },
  "ai": {
    "prompt": "Information about product or services offerings",
    "extraction": {
      "opener": "Using only information which is explicitly included in the text, identify any occurrences of an ",
      "primary": {
        "type": "offering",
        "description": "value propostion the organization offers",
        "fields": [
          "'offerings' containing an array containing each offering as an object with a field called 'title' containing the description"
        ]
      },
      "extracts": [
        {
          "type": "Problems",
          "description": "problems is the organization tackling?",
          "fields": [
            "'problems' containing an array where each entry is a single problem as a string"
          ]
        },
        {
          "type": "Value proposition",
          "description": "value proposition the organization is offering?",
          "fields": [
            "'value_prop' containing an array where each entry is a single value proposition as a string"
          ]
        },
        {
          "type": "Capabilities",
          "description": "What internal capabilities such as technology, methodologies, specialist resource, and unique data does the organization have?",
          "fields": [
            "'capabilities' containing an array where each entry is a single capability as a string"
          ]
        },
        {
          "type": "Customers",
          "description": "Which customers does the organization describe helping?",
          "fields": [
            "'customers' containing an array where each entry is a single customer as a string"
          ]
        },
        {
          "type": "Industries",
          "description": "Which industries does the organization describe helping?",
          "fields": [
            "'industries' containing an array where each entry is a single industry as a string"
          ]
        }
      ],
      "_extracts": [
        {
          "type": "Problems",
          "description": "problems is the organization tackling?",
          "fields": [
            "'problems' containing an array where each entry is a single problem as a string"
          ]
        },
        {
          "type": "Benefits",
          "description": "What unique benefits is the organziation proclaiming",
          "fields": [
            "'benefits' containing an array where each entry is a single benefit as a string"
          ]
        },
        {
          "type": "Results",
          "description": "What results are described by the organizaton?",
          "fields": [
            "'results' containing an array where each entry is a single result as a string"
          ]
        },
        {
          "type": "Approach",
          "description": "What approach does the organization use?",
          "fields": [
            "'approaches' containing an array where each entry is a single approach as a string"
          ]
        },
        {
          "type": "Capabilities",
          "description": "What internal capabilities such as technology, methodologies, specialist resource, and unique data does the organization have?",
          "fields": [
            "'capabilities' containing an array where each entry is a single capability as a string"
          ]
        },
        {
          "type": "Customers",
          "description": "Which customers does the organization describe helping?",
          "fields": [
            "'customers' containing an array where each entry is a single customer as a string"
          ]
        },
        {
          "type": "Industries",
          "description": "Which industries does the organization describe helping?",
          "fields": [
            "'industries' containing an array where each entry is a single industry as a string"
          ]
        }
      ],
      "_nestedExtracts": [
        76
      ],
      "closer": "Ignore any offers related to shopping, gifting, discounts, perks, rewards, shipping, returns, or e-commerce shopping more broadly. Return your results as a JSON object with the following fields:",
      "field": "offerings"
    }
  },
  "actions": [],
  "primitiveType": "detail"
},
{
  "_id": {
    "$oid": "6561dd352e21adf01a4b7257"
  },
  "id": 70,
  "title": "Organization related article search",
  "description": "Search for articles about an organization",
  "placeholder": "Search keywords (comma sperated)",
  "blankTitle": true,
  "icon": "ShareIcon",
  "parameters": {
    "sources": {
      "type": "options",
      "title": "Source",
      "description": "Article source to search",
      "options": [
        {
          "id": 0,
          "platform": "crunchbase",
          "title": "Crunchbase",
          "type": "article",
          "primaryField": "url",
          "importField": "referenceParameters.url",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "filterPre": "keyword",
          "resultCategoryId": 34
        },
        {
          "id": 1,
          "platform": "google_news",
          "title": "Google news",
          "type": "article",
          "primaryField": "url",
          "prefix": "\"{ot}\" company",
          "importField": "referenceParameters.url",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "filterMid": "topic_similarity",
          "resultCategoryId": 34
        },
        {
          "id": 2,
          "platform": "google",
          "title": "Google",
          "type": "article",
          "primaryField": "url",
          "prefix": "\"{ot}\" company",
          "importField": "referenceParameters.url",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "filterMid": "topic_similarity",
          "resultCategoryId": 34
        }
      ],
      "default": [
        0,
        1,
        2
      ]
    },
    "exact": {
      "type": "boolean",
      "title": "Ensure an exact match to keyword / phrase",
      "default": true
    },
    "phrase": {
      "type": "boolean",
      "title": "Search for phrase",
      "default": true
    },
    "topic": {
      "type": "long_string",
      "title": "Topics to filter by",
      "placeholder": "From task",
      "optional": true
    },
    "site": {
      "type": "string",
      "title": "Limit to site",
      "optional": true
    },
    "timeFrame": {
      "type": "option_list",
      "title": "Timefame",
      "options": [
        "last_week",
        "last_month",
        "last_year",
        ""
      ],
      "default": "last_year"
    },
    "count": {
      "type": "number",
      "title": "Number",
      "description": "Target number of articles per search",
      "default": 15
    }
  },
  "actions": [],
  "primitiveType": "search"
},
{
  "_id": {
    "$oid": "6561defc2e21adf01a4b7258"
  },
  "id": 72,
  "title": "Target customer of an organization",
  "description": "Target customer, industy or segment of the organization",
  "icon": "ShareIcon",
  "parameters": {
    "problems": {
      "title": "Problems addressed",
      "type": "string",
      "description": "Problems is the capabililty addresses"
    },
    "benefits": {
      "title": "Benefits",
      "type": "string",
      "description": "Benfits to customers"
    },
    "results": {
      "title": "Results",
      "type": "string",
      "description": "Results delviered by the capability"
    },
    "approach": {
      "title": "Approach",
      "type": "string",
      "description": "How the capabililty works"
    },
    "features": {
      "title": "Capabilities",
      "type": "string",
      "description": "Capabilities offered"
    }
  },
  "ai": {
    "prompt": "Information about industries or customers served by the company",
    "extraction": {
      "opener": "Using only information which is explicitly included in the text, identify any occurrences of an ",
      "primary": {
        "type": "customer",
        "description": "target customer or indusry the organization services",
        "fields": [
          "'industries' containing an array containing each offering as an object with a field called 'title' containing the description"
        ]
      },
      "extracts": [
        {
          "type": "Problems",
          "description": "problems is the organization tackling?",
          "fields": [
            "'problems' containing an array where each entry is a single problem as a string"
          ]
        },
        {
          "type": "Capabilities",
          "description": "What internal capabilities such as technology, methodologies, specialist resource, and unique data does the organization have?",
          "fields": [
            "'capabilities' containing an array where each entry is a single capability as a string"
          ]
        }
      ],
      "_extracts": [
        {
          "type": "Problems",
          "description": "problems is the organization tackling?",
          "fields": [
            "'problems' containing an array where each entry is a single problem as a string"
          ]
        },
        {
          "type": "Benefits",
          "description": "What unique benefits is the organziation proclaiming",
          "fields": [
            "'benefits' containing an array where each entry is a single benefit as a string"
          ]
        },
        {
          "type": "Results",
          "description": "What results are described by the organizaton?",
          "fields": [
            "'results' containing an array where each entry is a single result as a string"
          ]
        },
        {
          "type": "Approach",
          "description": "What approach does the organization use?",
          "fields": [
            "'approaches' containing an array where each entry is a single approach as a string"
          ]
        },
        {
          "type": "Capabilities",
          "description": "What internal capabilities such as technology, methodologies, specialist resource, and unique data does the organization have?",
          "fields": [
            "'capabilities' containing an array where each entry is a single capability as a string"
          ]
        }
      ],
      "_nestedExtracts": [
        76
      ],
      "closer": "Return your results as a JSON object with the following fields:",
      "field": "industries"
    }
  },
  "actions": [],
  "primitiveType": "detail"
},
{
  "_id": {
    "$oid": "6561df222e21adf01a4b7259"
  },
  "id": 73,
  "title": "Capabilities",
  "description": "Capabilities or technolgoies employed an organization",
  "icon": "ShareIcon",
  "parameters": {
    "problems": {
      "title": "Problems addressed",
      "type": "string",
      "description": "Problems is the capabililty addresses"
    },
    "advantages": {
      "title": "Advantages",
      "type": "string",
      "description": "Advantages over alternatives"
    },
    "results": {
      "title": "Results",
      "type": "string",
      "description": "Results delviered by the capability"
    },
    "approach": {
      "title": "Approach",
      "type": "string",
      "description": "How the capabililty works"
    },
    "features": {
      "title": "Features",
      "type": "string",
      "description": "Features of the capability"
    }
  },
  "ai": {
    "prompt": "Information about technology, ways of working or capabilties",
    "extraction": {
      "opener": "Using only information which is explicitly included in the text, identify any occurrences of ",
      "primary": {
        "type": "capability",
        "description": "differentiating technology, IP or service related capability",
        "fields": [
          "'capabilities' containing an array containing each capablity as an object with a field called 'title' containing the description"
        ]
      },
      "extracts": [
        {
          "type": "Problems",
          "description": "problems the capability addresses?",
          "fields": [
            "'problems' containing an array where each entry is a single problem as a string"
          ]
        },
        {
          "type": "Features",
          "description": "What features the capability includes?",
          "fields": [
            "'features' containing an array where each entry is a single feature as a string"
          ]
        }
      ],
      "_extracts": [
        {
          "type": "Problems",
          "description": "problems the capability addresses?",
          "fields": [
            "'problems' containing an array where each entry is a single problem as a string"
          ]
        },
        {
          "type": "Advantages",
          "description": "What advantages the capability has over alternatives and the competition",
          "fields": [
            "'advantages' containing an array where each entry is a single benefit as a string"
          ]
        },
        {
          "type": "Results",
          "description": "What results are described by the organizaton?",
          "fields": [
            "'results' containing an array where each entry is a single result as a string"
          ]
        },
        {
          "type": "Approach",
          "description": "What steps are involved in delivering the capability?",
          "fields": [
            "'approaches' containing an array where each entry is a single approach as a string"
          ]
        },
        {
          "type": "Features",
          "description": "What features the capability includes?",
          "fields": [
            "'features' containing an array where each entry is a single feature as a string"
          ]
        }
      ],
      "_nestedExtracts": [
        76
      ],
      "closer": "Ignore any capabilities related to shopping, gifting, discounts, perks, rewards, shipping, returns, or e-commerce shopping more broadly. Return your results as a JSON object with the following fields:",
      "field": "capabilities"
    }
  },
  "actions": [],
  "primitiveType": "detail"
},
{
  "_id": {
    "$oid": "6561df8e2e21adf01a4b725a"
  },
  "id": 74,
  "title": "Corporate",
  "description": "Details about an organization's focus and background",
  "icon": "ShareIcon",
  "parameters": {
    "description": {
      "description": "long_string"
    }
  },
  "ai": {
    "prompt": "Information about the background, history or focus of the company"
  },
  "actions": [],
  "primitiveType": "detail"
},
{
  "_id": {
    "$oid": "6561dfbd2e21adf01a4b725b"
  },
  "id": 75,
  "title": "Financial",
  "description": "Details about an organization's financial performance",
  "icon": "ShareIcon",
  "parameters": {
    "description": {
      "description": "long_string"
    }
  },
  "ai": {
    "prompt": "Information about the financial performance of the business including filings"
  },
  "actions": [],
  "primitiveType": "detail"
},
{
  "_id": {
    "$oid": "6561dfe82e21adf01a4b725c"
  },
  "id": 76,
  "title": "Case studies",
  "description": "Case studies or examples of how the organization has helped customers",
  "icon": "ShareIcon",
  "parameters": {
    "problems": {
      "type": "long_string",
      "title": "Problems"
    },
    "results": {
      "type": "long_string",
      "title": "Results"
    },
    "capabilities": {
      "type": "long_string",
      "title": "Capabilities"
    },
    "customers": {
      "type": "long_string",
      "title": "Customers"
    }
  },
  "ai": {
    "prompt": "Case studies about how the company helps its customers",
    "extraction": {
      "opener": "Using only information which is explicitly included in the text, identify any occurrences of a ",
      "primary": {
        "type": "case study",
        "param": "casestudy",
        "description": "case study or example of how the organization has helped customers",
        "fields": [
          "'examples' containing an array containing each case study or example as an object with a field called 'description' containing the description"
        ]
      },
      "extracts": [
        {
          "type": "Summary",
          "description": "a short summary of the case study or example?",
          "fields": [
            "'title' a 15-20 word summary of the case study"
          ]
        },
        {
          "type": "Problems",
          "description": "what problems existing in the case study or example?",
          "fields": [
            "'problems' containing an array where each entry is a single problem as a string"
          ]
        },
        {
          "type": "Results",
          "description": "What was the results of the case study or example?",
          "fields": [
            "'results' containing an array where each entry is a single result as a string"
          ]
        },
        {
          "type": "Capabilities",
          "description": "What internal capabilities such as technology, methodologies, specialist resource, and unique data used in the case study or example",
          "fields": [
            "'capabilities' containing an array where each entry is a single capability as a string"
          ]
        },
        {
          "type": "Customers",
          "description": "Which customers does the organization describe helping?",
          "fields": [
            "'customers' containing an array where each entry is a single customer as a string"
          ]
        }
      ],
      "closer": "Return your results as a JSON object with the following fields:",
      "field": "examples"
    }
  },
  "actions": [],
  "primitiveType": "detail"
},
{
  "_id": {
    "$oid": "6561e02a2e21adf01a4b725d"
  },
  "id": 77,
  "title": "Whitepapers",
  "description": "Whitepapers, perspectives or analysis from the organization",
  "icon": "ShareIcon",
  "parameters": {
    "description": {
      "description": "long_string"
    }
  },
  "ai": {
    "prompt": "Whitepapers, persepctives or analysis authored by the company",
    "extraction": {
      "opener": "Using only information which is explicitly included in the text, identify any occurrences of the following:",
      "extracts": [
        {
          "type": "Case studies",
          "description": "What examples does of delivering benefits to customers does the organization provide?",
          "fields": [
            "'case_studies' containing an array where each entry is an object with a 'customer' field detailing the customer mentioned in the case study, a 'what' field detailing how the organization helped the customer, an 'outcome' field detailing the outcome of the case study, and a 'benefits' detailing how the benefits to the customer."
          ]
        }
      ]
    }
  },
  "actions": [],
  "primitiveType": "detail"
},
{
  "_id": {
    "$oid": "656703e3d0b42688bce172c4"
  },
  "id": 78,
  "title": "Web Resource",
  "description": "Resource about an organization",
  "icon": "ShareIcon",
  "parameters": {
    "summary": {
      "type": "long_string",
      "title": "summary"
    },
    "url": {
      "type": "url",
      "title": "Link"
    }
  },
  "_detailCategoryIds": [
    71
  ],
  "detailCategoryIds": [
    71,
    72,
    73,
    74,
    75,
    76,
    77
  ],
  "actions": [
    {
      "key": "process_resource_as_detail",
      "title": "Extract details from resource",
      "actionFields": {
        "referenceId": {
          "title": "Extract",
          "type": "categoryId",
          "referenceIds": [
            71,
            72,
            73,
            74,
            75,
            76,
            77
          ],
          "default": 71
        }
      },
      "menu": true,
      "icon": "QuestionIcon"
    },
    {
      "key": "embed_content",
      "title": "Embed Content",
      "actionFields": {
        "force": {
          "title": "Update existing information",
          "type": "boolean",
          "default": false
        }
      },
      "menu": true,
      "icon": "QuestionIcon"
    }
  ],
  "resultCategories": [
    {
      "id": 0,
      "title": "Detail",
      "plurals": "Details",
      "type": "detail",
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Name",
                "width": 0.3
              },
              {
                "field": "type",
                "title": "Type",
                "width": 0.3
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        }
      }
    }
  ],
  "primitiveType": "result"
},
{
  "_id": {
    "$oid": "657977293bc6c311cff6e996"
  },
  "id": 79,
  "title": "Survey results",
  "description": "Survey results (from CSV)",
  "isCSV": true,
  "icon": "FileIcon",
  "parameters": {
    "summary": {
      "type": "long_string",
      "title": "summary"
    },
    "notes": {
      "type": "link",
      "title": "CSV"
    }
  },
  "discoverChildParameters": true,
  "actions": [],
  "resultCategories": [
    {
      "id": 0,
      "title": "Detail",
      "plurals": "Details",
      "resultCategoryId": 80,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Name",
                "width": 0.3
              },
              {
                "field": "type",
                "title": "Type",
                "width": 0.3
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        }
      }
    }
  ],
  "primitiveType": "result",
  "do_discovery": true
},
{
  "_id": {
    "$oid": "657977cd3bc6c311cff6e997"
  },
  "id": 80,
  "title": "Survey record",
  "description": "Survey record",
  "icon": "IdentificationIcon",
  "parameters": {
    "summary": {
      "type": "long_string",
      "title": "summary"
    },
    "url": {
      "type": "url",
      "title": "Link"
    }
  },
  "actions": [],
  "resultCategories": [
    {
      "id": 0,
      "title": "Insight",
      "plurals": "Insights",
      "resultCategoryId": 10,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "question",
                "title": "Question",
                "width": 0.3
              },
              {
                "field": "title",
                "title": "Response",
                "width": 0.3
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        }
      }
    }
  ],
  "primitiveType": "detail"
},
{
  "_id": {
    "$oid": "659be5d1dbfb1f932814ff5d"
  },
  "id": 81,
  "title": "Data query",
  "description": "Data query",
  "icon": "IdentificationIcon",
  "parameters": {
    "query": {
      "type": "long_string",
      "title": "Query"
    },
    "referenceCategoryFilter": {
      "type": "categoryId",
      "title": "Category filter"
    },
    "lookupCount": {
      "type": "number",
      "title": "Lookup count"
    },
    "scanRatio": {
      "type": "range",
      "title": "Data fit",
      "minValue": 15,
      "maxValue": 85,
      "stepValue": 5,
      "asPercent": true,
      "invert": true
    },
    "words": {
      "type": "string",
      "title": "Format / length"
    },
    "extract": {
      "type": "categoryId",
      "title": "Extract as"
    },
    "sections": {
      "title": "Sections",
      "type": "list"
    },
    "group": {
      "title": "Run over item",
      "type": "boolean",
      "default": false
    }
  },
  "actions": [
    {
      "key": "custom_query",
      "title": "Run query",
      "resultCategoryId": 82,
      "actionFields": {
        "scope": {
          "type": "primitive",
          "referenceId": 38,
          "title": "Scope"
        },
        "referenceCategoryFilter": {
          "type": "number",
          "title": "Category filter"
        },
        "compact": {
          "title": "Merge mutli-pass answers",
          "type": "boolean",
          "default": true
        },
        "consolidate": {
          "title": "Consolidate responses",
          "type": "boolean",
          "default": true
        },
        "remove_first": {
          "title": "Remove existing responses",
          "type": "boolean",
          "default": false
        }
      },
      "menu": true
    },
    {
      "key": "summarize_results",
      "title": "Summarize results",
      "menu": true
    },
    {
      "key": "cascade",
      "referenceId": 82,
      "cascadeKey": [
        "extract_evidence"
      ],
      "title": "Extract solutions from responses",
      "actionFields": {
        "forceCascade": {
          "title": "Re-run on documents already processed",
          "type": "boolean",
          "default": false
        },
        "remove_first": {
          "title": "Remove existing answers",
          "type": "boolean",
          "default": true
        }
      },
      "menu": true
    },
    {
      "command": "cascade",
      "key": "cascade_problems",
      "referenceId": 82,
      "cascadeKey": [
        "extract_problems"
      ],
      "title": "Extract problems from responses",
      "actionFields": {
        "forceCascade": {
          "title": "Re-run on documents already processed",
          "type": "boolean",
          "default": false
        },
        "remove_first": {
          "title": "Remove existing answers",
          "type": "boolean",
          "default": true
        }
      },
      "menu": true
    },
    {
      "command": "cascade",
      "key": "cascade_value_prop",
      "referenceId": 82,
      "cascadeKey": [
        "extract_value_prop"
      ],
      "title": "Extract value propositons from responses",
      "actionFields": {
        "forceCascade": {
          "title": "Re-run on documents already processed",
          "type": "boolean",
          "default": false
        },
        "remove_first": {
          "title": "Remove existing answers",
          "type": "boolean",
          "default": true
        }
      },
      "menu": true
    },
    {
      "command": "cascade",
      "key": "cascade_persona",
      "referenceId": 82,
      "cascadeKey": [
        "extract_persona"
      ],
      "title": "Extract personas from responses",
      "actionFields": {
        "forceCascade": {
          "title": "Re-run on documents already processed",
          "type": "boolean",
          "default": false
        },
        "remove_first": {
          "title": "Remove existing answers",
          "type": "boolean",
          "default": true
        }
      },
      "menu": true
    },
    {
      "command": "cascade",
      "key": "cascade_partnerships",
      "referenceId": 82,
      "cascadeKey": [
        "extract_partnerships"
      ],
      "title": "Extract partnerships from responses",
      "actionFields": {
        "forceCascade": {
          "title": "Re-run on documents already processed",
          "type": "boolean",
          "default": false
        },
        "remove_first": {
          "title": "Remove existing answers",
          "type": "boolean",
          "default": true
        }
      },
      "menu": true
    }
  ],
  "resultCategories": [
    {
      "id": 0,
      "title": "Response",
      "plurals": "Responses",
      "resultCategoryId": 82,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Response",
                "width": 0.3
              },
              {
                "field": "problem",
                "title": "Problems addressed",
                "width": 0.5
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        }
      }
    },
    {
      "id": 1,
      "title": "Extract",
      "plurals": "Extracts",
      "type": "evidence",
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Response",
                "width": 0.3
              },
              {
                "field": "problem",
                "title": "Problems addressed",
                "width": 0.5
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        }
      }
    }
  ],
  "primitiveType": "query"
},
{
  "_id": {
    "$oid": "659be9e4dbfb1f932814ff5e"
  },
  "id": 82,
  "title": "Data query result",
  "description": "Result from data query",
  "icon": "BoltIcon",
  "parameters": {
    "description": {
      "title": "Response",
      "type": "long_string"
    },
    "organizations": {
      "title": "Organizations",
      "optional": true,
      "type": "list"
    },
    "solutions": {
      "title": "Solutions",
      "optional": true,
      "type": "list"
    },
    "individuals": {
      "title": "Individuals",
      "optional": true,
      "type": "list"
    },
    "roles": {
      "title": "Roles",
      "optional": true,
      "type": "list"
    },
    "problems": {
      "title": "Problems",
      "optional": true,
      "type": "list"
    },
    "jtbd": {
      "title": "Jobs to be done",
      "optional": true,
      "type": "list"
    },
    "needs": {
      "title": "Needs",
      "optional": true,
      "type": "list"
    }
  },
  "autoParam": true,
  "sidebar": {
    "showRefs": true
  },
  "actions": [
    {
      "key": "extract_evidence",
      "title": "Extract evidence",
      "entityCategoryId": 29,
      "evidenceCategoryMapping": [
        {
          "field": "solutions",
          "resultCategoryId": 27
        }
      ],
      "menu": true
    },
    {
      "key": "extract_problems",
      "command": "extract_evidence_new",
      "title": "Extract problems",
      "entityCategoryId": 29,
      "evidenceCategoryMapping": [
        {
          "field": "problems",
          "major": true,
          "resultCategoryId": 10,
          "base": [
            {
              "field": "roles",
              "target": "target"
            }
          ]
        }
      ],
      "menu": true
    },
    {
      "key": "extract_value_prop",
      "command": "extract_evidence_new",
      "title": "Extract value propositions",
      "entityCategoryId": 29,
      "evidenceCategoryMapping": [
        {
          "field": "value_proposition",
          "major": true,
          "resultCategoryId": 91,
          "base": [
            {
              "field": "roles",
              "target": "target"
            },
            {
              "field": "problems",
              "target": "problems"
            },
            {
              "field": "needs",
              "target": "needs"
            },
            {
              "field": "solutions",
              "target": "solutions"
            },
            {
              "field": "description",
              "target": "summary"
            }
          ]
        }
      ],
      "menu": true
    },
    {
      "key": "extract_persona",
      "command": "extract_evidence_new",
      "title": "Extract personas",
      "entityCategoryId": 29,
      "evidenceCategoryMapping": [
        {
          "field": "main_title",
          "major": true,
          "resultCategoryId": 93,
          "base": [
            {
              "field": "roles",
              "target": "roles"
            },
            {
              "field": "problems",
              "target": "problems"
            },
            {
              "field": "needs",
              "target": "needs"
            },
            {
              "field": "description",
              "target": "summary"
            },
            {
              "field": "organization_type",
              "target": "organization_type"
            },
            {
              "field": "responsibilities",
              "target": "responsibilities"
            },
            {
              "field": "experience_level",
              "target": "experience_level"
            }
          ]
        }
      ],
      "menu": true
    },
    {
      "key": "extract_partnerships",
      "command": "extract_evidence_new",
      "title": "Extract partnerships",
      "evidenceCategoryMapping": [
        {
          "field": "partnerships",
          "resultCategoryId": 84,
          "base": [
            {
              "title": "Summary",
              "field": "summary",
              "type": "string"
            }
          ],
          "nested": [
            {
              "title": "Partner A",
              "field": "organizations",
              "idx": 0,
              "relationship": "partnership_a",
              "type": "entity",
              "resultCategoryId": 29
            },
            {
              "title": "Partner B",
              "field": "organizations",
              "idx": 1,
              "type": "entity",
              "relationship": "partnership_b",
              "resultCategoryId": 29
            },
            {
              "title": "Problem",
              "field": "problem",
              "type": "string"
            },
            {
              "title": "Solution",
              "field": "solution",
              "type": "string"
            }
          ]
        }
      ],
      "menu": true
    }
  ],
  "primitiveType": "evidence",
  "resultCategories": [
    {
      "id": 0,
      "title": "Source",
      "plurals": "Sources",
      "type": "result",
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Response",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        }
      }
    }
  ],
  "renderConfig": {
    "explore": {
      "exportFields": [
        "title"
      ]
    }
  }
},
{
  "_id": {
    "$oid": "659c2ecbdbfb1f932814ff5f"
  },
  "id": 83,
  "title": "Solution segment",
  "description": "Segementation of solutions",
  "type": "qualitative",
  "icon": "ChevronRightIcon",
  "parameters": {
    "overview": {
      "type": "long_string",
      "title": "Overview of segment",
      "inSummary": {
        "main": true
      }
    },
    "top_solutions": {
      "type": "list",
      "title": "Top 5 recurring solutions in segment",
      "inSummary": true
    }
  },
  "actions": [
    {
      "key": "summarize",
      "title": "Summarize solutions in this segment",
      "deriveTitle": true,
      "target": "children",
      "field": "title",
      "targetParameter": "overview",
      "dataTypes": "solutions",
      "prompt": "Produce a 100-150 word summary of the solutions described in this segment. Do not create a long list of problems - create a readable paragrpah or 2 - and use the form \"Solutions which provide...\"",
      "type": "evidence",
      "engine": "gpt4p",
      "menu": true
    },
    {
      "key": "summarize_top",
      "command": "summarize",
      "title": "List top 5 solutions",
      "targetIsList": true,
      "target": "children",
      "field": "title",
      "targetParameter": "top_solutions",
      "dataTypes": "solutions",
      "prompt": "Generate a numbered list of the top 5 most prevalent and distict solutions by aggregating solutions together. Avoid generalizations and ensure that a concrete and meaningful solutions is specified. Provide the answer in the form \"n) Solutions which ...\"",
      "engine": "gpt4p",
      "type": "evidence",
      "menu": true
    },
    {
      "key": "define_axis",
      "title": "Extract axis from segments",
      "target": "results.0",
      "field": "param.description",
      "resultCategory": 32,
      "menu": true
    },
    {
      "key": "roll_up",
      "target": "ref",
      "title": "Split segment into subsegments",
      "field": "title",
      "menu": "true",
      "resultCategory": 36
    },
    {
      "key": "dedupe",
      "target": "ref",
      "title": "Aggregate duplicate problems in this segemnt",
      "field": "title",
      "menu": "true",
      "resultCategory": 36
    }
  ],
  "renderConfig": {
    "explore": {
      "configs": [
        {
          "id": 0,
          "title": "Summary",
          "description": "View Problem Statements in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true,
            "searchPane": true
          },
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "columnWidth": 20,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        },
        {
          "id": 1,
          "title": "Overview",
          "description": "View Problem Statements in each segment",
          "props": {
            "hideDetails": false,
            "cardView": false,
            "showGrid": false,
            "overlay": false
          }
        },
        {
          "id": 2,
          "title": "Article overview",
          "description": "Latest article in segment",
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "hideMore": false,
            "showGrid": true,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "overlay": false,
            "details": {
              "pivot": "origin"
            }
          }
        },
        {
          "id": 3,
          "title": "Article timeline",
          "description": "Plot of funding amounts and stage",
          "parameters": {
            "fixedSpan": "col-span-4"
          },
          "props": {
            "hideDetails": true,
            "showGrid": false,
            "overlay": false,
            "graph": true,
            "details": {
              "sync": [
                "xmin"
              ],
              "pivot": "origin",
              "mode": "timeline",
              "y-axis": {
                "action": "count",
                "sort": "posted",
                "sort_formatter": "datetime"
              },
              "x-axis": {
                "parameter": "posted",
                "formatter": "datetime"
              }
            }
          }
        },
        {
          "id": 4,
          "title": "Problem statements",
          "description": "View Problem Statements in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true
          },
          "props": {
            "hideDetails": true,
            "cardView": true,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 12,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        }
      ]
    }
  },
  "sidebar": {
    "addToCategories": [
      42
    ]
  },
  "primitiveType": "segment",
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 36,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "explore": {
            "show": true,
            "configs": [
              {
                "id": 0,
                "title": "Summary",
                "description": "View Problem Statements in each segment",
                "parameters": {
                  "span": {
                    "sqrt": true
                  }
                },
                "config": {
                  "dropOnPrimitive": true
                },
                "props": {
                  "hideDetails": false,
                  "cardView": true,
                  "itemLimit": [
                    "flagged",
                    "recent_10"
                  ],
                  "hideMore": true,
                  "showGrid": true,
                  "overlay": false
                }
              },
              {
                "id": 1,
                "title": "Overview",
                "description": "View Problem Statements in each segment",
                "props": {
                  "hideDetails": false,
                  "cardView": false,
                  "showGrid": false,
                  "overlay": false
                }
              },
              {
                "id": 2,
                "title": "Article overview",
                "description": "Latest article in segment",
                "props": {
                  "hideDetails": false,
                  "cardView": true,
                  "itemLimit": [
                    "flagged",
                    "recent_10"
                  ],
                  "hideMore": false,
                  "showGrid": true,
                  "overlay": false,
                  "details": {
                    "pivot": "origin"
                  }
                }
              },
              {
                "id": 3,
                "title": "Article timeline",
                "description": "Plot of funding amounts and stage",
                "parameters": {
                  "fixedSpan": "col-span-4"
                },
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "sync": [
                      "xmin"
                    ],
                    "pivot": "origin",
                    "mode": "timeline",
                    "y-axis": {
                      "action": "count",
                      "sort": "posted",
                      "sort_formatter": "datetime"
                    },
                    "x-axis": {
                      "parameter": "posted",
                      "formatter": "datetime"
                    }
                  }
                }
              },
              {
                "id": 4,
                "title": "Problem statements",
                "description": "View Problem Statements in each segment",
                "parameters": {
                  "span": {
                    "sqrt": true
                  }
                },
                "config": {
                  "dropOnPrimitive": true
                },
                "props": {
                  "hideDetails": true,
                  "cardView": true,
                  "showGrid": true,
                  "overlay": false
                }
              }
            ]
          },
          "cluster": {
            "show": true
          },
          "default": "cards",
          "fullPageExplorer": true
        }
      }
    }
  ],
  "holds": [
    27
  ]
},
{
  "_id": {
    "$oid": "65a7b121dbfb1f932814ff67"
  },
  "id": 84,
  "title": "Partnership",
  "description": "Partnership between organizations",
  "icon": "BuildingOffice2Icon",
  "parameters": {
    "problem": {
      "title": "Problem addressed",
      "type": "string"
    },
    "solution": {
      "title": "Solution",
      "type": "string"
    },
    "summary": {
      "title": "Summary",
      "type": "string"
    },
    "partnership_a": {
      "title": "Organization 1",
      "type": "primitive_parent"
    },
    "partnership_b": {
      "title": "Organization 2",
      "type": "primitive_parent"
    }
  },
  "primitiveType": "evidence",
  "renderConfig": {
    "explore": {
      "exportFields": [
        "title"
      ]
    }
  }
},
{
  "_id": {
    "$oid": "65a84d52dbfb1f932814ff68"
  },
  "id": 85,
  "title": "Report",
  "description": "Report",
  "icon": "DocumentTextIcon",
  "parameters": {
    "source": {
      "title": "Source",
      "type": "primitive",
      "referenceId": 97,
      "scope": "workspace"
    },
    "referenceId": {
      "title": "Items",
      "description": "Type of items",
      "type": "categoryId",
      "default": 54
    }
  },
  "primitiveType": "report"
},
{
  "_id": {
    "$oid": "65aa88f9dbfb1f932814ff6c"
  },
  "id": 86,
  "title": "Partnership segment",
  "description": "Segementation of Partnership",
  "icon": "ChevronRightIcon",
  "parameters": {
    "overview": {
      "type": "long_string",
      "title": "Overview of segment",
      "inSummary": {
        "main": true
      }
    },
    "top_solutions": {
      "type": "list",
      "title": "Top 5 recurring solutions in segment",
      "inSummary": true
    }
  },
  "actions": [
    {
      "key": "summarize",
      "title": "Summarize partnerships in this segment",
      "deriveTitle": true,
      "target": "children",
      "field": "title",
      "targetParameter": "overview",
      "dataTypes": "solutions",
      "prompt": "Produce a 150-200 word summary of the partnerships provided in the list. Do not refer to the list, do not list the partnerships and do not mention any specific offerings, or companies - instead focus on underlying and common needs and types of offerings the parterships provide",
      "type": "evidence",
      "engine": "gpt4p",
      "menu": true
    }
  ],
  "renderConfig": {
    "explore": {
      "configs": [
        {
          "id": 0,
          "title": "Summary",
          "description": "View Problem Statements in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true,
            "searchPane": true
          },
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "columnWidth": 20,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        },
        {
          "id": 1,
          "title": "Overview",
          "description": "View Problem Statements in each segment",
          "props": {
            "hideDetails": false,
            "cardView": false,
            "showGrid": false,
            "overlay": false
          }
        },
        {
          "id": 2,
          "title": "Article overview",
          "description": "Latest article in segment",
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "hideMore": false,
            "showGrid": true,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "overlay": false,
            "details": {
              "pivot": "origin"
            }
          }
        },
        {
          "id": 3,
          "title": "Article timeline",
          "description": "Plot of funding amounts and stage",
          "parameters": {
            "fixedSpan": "col-span-4"
          },
          "props": {
            "hideDetails": true,
            "showGrid": false,
            "overlay": false,
            "graph": true,
            "details": {
              "sync": [
                "xmin"
              ],
              "pivot": "origin",
              "mode": "timeline",
              "y-axis": {
                "action": "count",
                "sort": "posted",
                "sort_formatter": "datetime"
              },
              "x-axis": {
                "parameter": "posted",
                "formatter": "datetime"
              }
            }
          }
        },
        {
          "id": 4,
          "title": "Problem statements",
          "description": "View Problem Statements in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true
          },
          "props": {
            "hideDetails": true,
            "cardView": true,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 12,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        }
      ]
    }
  },
  "sidebar": {
    "addToCategories": [
      42
    ]
  },
  "primitiveType": "segment",
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 36,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "explore": {
            "show": true,
            "configs": [
              {
                "id": 0,
                "title": "Summary",
                "description": "View Problem Statements in each segment",
                "parameters": {
                  "span": {
                    "sqrt": true
                  }
                },
                "config": {
                  "dropOnPrimitive": true
                },
                "props": {
                  "hideDetails": false,
                  "cardView": true,
                  "itemLimit": [
                    "flagged",
                    "recent_10"
                  ],
                  "hideMore": true,
                  "showGrid": true,
                  "overlay": false
                }
              },
              {
                "id": 1,
                "title": "Overview",
                "description": "View Problem Statements in each segment",
                "props": {
                  "hideDetails": false,
                  "cardView": false,
                  "showGrid": false,
                  "overlay": false
                }
              },
              {
                "id": 2,
                "title": "Article overview",
                "description": "Latest article in segment",
                "props": {
                  "hideDetails": false,
                  "cardView": true,
                  "itemLimit": [
                    "flagged",
                    "recent_10"
                  ],
                  "hideMore": false,
                  "showGrid": true,
                  "overlay": false,
                  "details": {
                    "pivot": "origin"
                  }
                }
              },
              {
                "id": 3,
                "title": "Article timeline",
                "description": "Plot of funding amounts and stage",
                "parameters": {
                  "fixedSpan": "col-span-4"
                },
                "props": {
                  "hideDetails": true,
                  "showGrid": false,
                  "overlay": false,
                  "graph": true,
                  "details": {
                    "sync": [
                      "xmin"
                    ],
                    "pivot": "origin",
                    "mode": "timeline",
                    "y-axis": {
                      "action": "count",
                      "sort": "posted",
                      "sort_formatter": "datetime"
                    },
                    "x-axis": {
                      "parameter": "posted",
                      "formatter": "datetime"
                    }
                  }
                }
              },
              {
                "id": 4,
                "title": "Problem statements",
                "description": "View Problem Statements in each segment",
                "parameters": {
                  "span": {
                    "sqrt": true
                  }
                },
                "config": {
                  "dropOnPrimitive": true
                },
                "props": {
                  "hideDetails": true,
                  "cardView": true,
                  "showGrid": true,
                  "overlay": false
                }
              }
            ]
          },
          "cluster": {
            "show": true
          },
          "default": "cards",
          "fullPageExplorer": true
        }
      }
    }
  ],
  "holds": [
    84
  ]
},
{
  "_id": {
    "$oid": "65d08a38b21c69aef66c2b19"
  },
  "id": 87,
  "title": "Profile segment",
  "description": "Segementation of person profiles",
  "type": "qualitative",
  "icon": "ChevronRightIcon",
  "parameters": {
    "overview": {
      "type": "long_string",
      "title": "Overview of profiles",
      "inSummary": {
        "main": true
      }
    }
  },
  "actions": [
    {
      "key": "summarize",
      "title": "Summarize profiles in this segment",
      "deriveTitle": true,
      "target": "children",
      "field": "title",
      "targetParameter": "overview",
      "dataTypes": "user profiles",
      "prompt": "Produce a summary a 100-150 word summary of the profiles in this segment. Do not create a long list of profiles - create a readable paragrpah or 2 - and use the form \"Profiles related to...\"",
      "type": "evidence",
      "engine": "gpt4p",
      "menu": true
    }
  ],
  "renderConfig": {
    "explore": {
      "configs": [
        {
          "id": 0,
          "title": "Summary",
          "description": "View Problem Statements in each segment",
          "parameters": {
            "span": {
              "sqrt": true
            }
          },
          "config": {
            "dropOnPrimitive": true,
            "searchPane": true
          },
          "props": {
            "hideDetails": false,
            "cardView": true,
            "itemLimit": [
              "flagged",
              "recent_10"
            ],
            "columnWidth": 20,
            "columns": {
              "15": 3,
              "25": 5,
              "50": 8,
              "100": 15,
              "default": 3
            },
            "rows": {
              "default": 5
            },
            "showList": true,
            "overlay": false
          }
        },
        {
          "id": 1,
          "title": "Overview",
          "description": "View Problem Statements in each segment",
          "props": {
            "hideDetails": false,
            "cardView": false,
            "showGrid": false,
            "overlay": false
          }
        }
      ]
    }
  },
  "sidebar": {
    "addToCategories": []
  },
  "primitiveType": "segment",
  "holds": [
    58
  ],
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 87,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "fullPageExplorer": true
        }
      }
    }
  ]
},
{
  "_id": {
    "$oid": "65d08b97b21c69aef66c2b1a"
  },
  "id": 88,
  "title": "Profile Map",
  "description": "Profile Map",
  "parameters": {
    "target": {
      "title": "Cluster",
      "description": "Items to cluster",
      "type": "category_source",
      "locked": true
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field",
      "locked": true
    }
  },
  "actions": [
    {
      "key": "categorize",
      "title": "Categorize items in map",
      "menu": "false",
      "aiConfig": {
        "param.offerings": {
          "types": "organization descriptions",
          "combinePrompt": "Generate a summary of the offerings in the form 'Offerings related to...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific offerings in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the offerings in the form 'Offerings providing...' which describes the common theme or focus of all offerings.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        },
        "param.customers": {
          "types": "target customers of companies",
          "combinePrompt": "Generate a summary of the target customers in the form 'Customer segements which...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific customers in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the target customers in the form 'Customer segements which...' which describes the common theme or focus of all target customers.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        }
      },
      "engine": "gpt4p"
    },
    {
      "key": "mark_categories",
      "title": "Categorize items in map",
      "menu": "false",
      "engine": "gpt4p"
    }
  ],
  "icon": "SignalIcon",
  "resultCategories": [
    {
      "id": 0,
      "title": "Segment",
      "plurals": "Segments",
      "resultCategoryId": 57,
      "descend": true,
      "viewsFromtarget": true
    },
    {
      "id": 1,
      "title": "Profile",
      "plurals": "Profiles",
      "resultCategoryId": 58,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Name",
                "width": 250
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "defaultWide": "table",
          "fullPageExplorer": true,
          "descend": true
        }
      }
    }
  ],
  "primitiveType": "view"
},
{
  "_id": {
    "$oid": "65d48ba3b21c69aef66c2b21"
  },
  "id": 90,
  "title": "Evaluate",
  "description": "Option",
  "icon": "CheckIcon",
  "parameters": {
    "target": {
      "title": "Categorize",
      "description": "Items to categorize",
      "type": "category_source",
      "scope": [
        "items",
        {
          "scope": "parents",
          "types": [
            "result",
            "entity"
          ]
        }
      ]
    },
    "referenceId": {
      "title": "Items",
      "description": "Type of items",
      "type": "categoryId",
      "hidden": true
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field",
      "includeContext": true
    },
    "conditions": {
      "title": "Test conditions",
      "description": "Conditions to evaluate under",
      "optional": true,
      "type": "string"
    },
    "evaluation": {
      "title": "Evaluation",
      "description": "Test to evaluate",
      "optional": true,
      "type": "string"
    }
  },
  "mapMode": "evaluate",
  "primitiveType": "category"
},
{
  "_id": {
    "$oid": "65dc9c62f85a341fad861fb0"
  },
  "id": 89,
  "title": "Report element",
  "description": "Report element",
  "parameters": {
    "fontSize": {
      "type": "integer",
      "title": "Font size"
    },
    "fontStyle": {
      "type": "option_list",
      "options": [
        "normal",
        "bold",
        "italic"
      ],
      "title": "Font style"
    },
    "asList": {
      "type": "boolean",
      "title": "Format as list"
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field",
      "includeContext": true
    },
    "target": {
      "type": "option_list",
      "options": [
        "items",
        "children",
        "ref",
        "link",
        "descend",
        "all_descend",
        "self",
        "hierarchy",
        "instance_peer"
      ],
      "title": "Source"
    },
    "referenceId": {
      "title": "Items",
      "description": "Type of items #",
      "type": "categoryId"
    },
    "lookup": {
      "type": "option_list",
      "options": [
        "organization"
      ],
      "title": "Extract type (if using)"
    },
    "content": {
      "hidden": true
    },
    "content.config": {
      "type": "string",
      "title": "Render option"
    },
    "content.compute": {
      "type": "option_list",
      "options": [
        "summarize",
        "extract",
        "grid",
        "raw"
      ],
      "title": "Display"
    },
    "content.prompt": {
      "type": "string",
      "title": "Custom prompt"
    },
    "content.summary_type": {
      "type": "option_list",
      "options": [
        "summary",
        "overview",
        "top_5",
        "custom"
      ],
      "title": "Summary type"
    },
    "constrain_parent_chain": {
      "title": "Constrained to",
      "type": "primitive",
      "referenceId": [
        54,
        82,
        38
      ]
    },
    "content.scale": {
      "title": "Scale %",
      "type": "integer"
    }
  },
  "actions": [],
  "icon": "SignalIcon",
  "primitiveType": "element"
},
{
  "_id": {
    "$oid": "65e9a3cdf85a341fad861fbe"
  },
  "id": 91,
  "title": "Value proposition",
  "description": "Concise value proposition",
  "icon": "GiftIcon",
  "parameters": {
    "target": {
      "title": "Target",
      "description": "Roles or individuals the value proposition if for",
      "type": "string"
    },
    "problems": {
      "title": "Problems",
      "type": "string"
    },
    "needs": {
      "title": "Needs",
      "type": "string"
    },
    "solutions": {
      "title": "Solution",
      "type": "string"
    },
    "summary": {
      "title": "Summary",
      "type": "string"
    }
  },
  "primitiveType": "evidence",
  "actions": [
    {
      "key": "link_related_problems",
      "command": "link_related_evidence",
      "title": "Link related problems",
      "referenceId": 10,
      "menu": true,
      "prompt": "I have a database with hundreds of articles about the topic which i can run a semantic query on.  Provide a list of search keywords (multiword is okay) suitable for a semantic query which would find relevant evidence to support or contradict the underlying principles, assumptions and hypotehsis of the value proposition, do not include the name of the idea in the query."
    },
    {
      "menu": true,
      "key": "generate",
      "title": "Generate messaging",
      "inputs": [
        {
          "referenceId": 10,
          "type": "problem",
          "plural": "problems",
          "title": "Problems to address",
          "fields": [
            "title"
          ],
          "consolidate": true
        },
        {
          "referenceId": 93,
          "target": "parents",
          "type": "persona",
          "plural": "personas",
          "title": "Personas to target",
          "useContext": true
        }
      ],
      "multiple": true,
      "resultCategoryId": 94,
      "useContext": true,
      "resultFields": {
        "title": {
          "prompt": "a short summary of the messaging in the form \"[value delivered] for [target]\"",
          "target": "title"
        },
        "headline": {
          "title": "Headline",
          "prompt": "Immediately grab attention with a clear and compelling statement. Include the main benefit or unique value proposition."
        },
        "subheadline": {
          "title": "Subheadline",
          "prompt": "Provide additional context or detail to the headline, elaborating on the value proposition. Include a secondary benefit or how the product solves a specific problem."
        },
        "problem": {
          "title": "Problem Statement",
          "prompt": "Identify and empathize with the audience's pain points. Include common challenges, frustrations, or needs of your target personas."
        },
        "solution": {
          "title": "Solution Overview",
          "prompt": "Introduce the value proposition as the  soution to the identified problems. Briefly describe how it addresses the pain points through its key features and capabilities."
        },
        "benefits": {
          "title": "Key Features and Benefits",
          "prompt": "Highlight what makes Sense unique and valuable. List key features alongside their direct benefits to the user."
        },
        "proof": {
          "title": "Proof Points",
          "prompt": "Build credibility and trust through evidence. Include data points, testimonials, case studies, or expert endorsements that support the effectiveness of Sense. Ensure you are using factutal information about this specific value proposition - leave if you dont have anything relevant"
        }
      },
      "generator": "Here is some information about a value proposition: {context}.\nAnd here is some information about who the value proposition is targetting {information}\n\nUsing the information provided produce a consolidated list of concrete and specific messaging being careful to ensure they are relevant for the {field_list} provided and are not duplicative. Be factual and avoid hyperbole."
    },
    {
      "menu": true,
      "command": "generate",
      "key": "generate_landing_page",
      "title": "Generate landing page",
      "inputs": [
        {
          "referenceId": 92,
          "target": "parents",
          "type": "concept",
          "plural": "Concepts",
          "title": "underlying concept",
          "useContext": true
        },
        {
          "referenceId": 10,
          "type": "problem",
          "plural": "problems",
          "title": "Problems to address",
          "fields": [
            "title"
          ],
          "consolidate": true
        },
        {
          "referenceId": 93,
          "target": "parents",
          "type": "persona",
          "plural": "personas",
          "title": "Personas to target",
          "useContext": true
        }
      ],
      "multiple": true,
      "resultCategoryId": 100,
      "useContext": true,
      "resultFields": {
        "title": {
          "prompt": "A title for the landing page",
          "target": "title"
        },
        "hero_text": {
          "title": "Hero text",
          "prompt": "An attention grabbing hero statement about the value proposition."
        },
        "hero_overview": {
          "title": "Hero overview",
          "prompt": "A 50 word summary about the value the value proposition can deliver, including the target persona it is for."
        },
        "hero_image_prompt": {
          "title": "Hero image prompt",
          "prompt": "A description prompt suitable for use with dall-e to produce a hero image for the page"
        },
        "how_it_works": {
          "title": "How it workds",
          "prompt": "A list of 5 steps describing how the value proposition delivers value to the user. Include what is required from the user, what capabilities are used, and how the outcomes are realized / delivered.  Keep each step to no more than 15 words each."
        },
        "benefits": {
          "title": "Benefits",
          "prompt": "A list of the 3 most impactful benefits the user will recieve"
        },
        "use_cases": {
          "title": "Use cases",
          "prompt": "4 - 6 example use cases of how the value proposition can help a user with each focussing on just one concrete and significant problem. For each use case include a 'benefit' field describing the benefit in no more than 6 words, a 'solution' field describing how the value proposition addresses the probelm in no more than 80 words, and an 'icon' field containing the class name of the most relevant and fitting icon from font-awesome to represent this use case."
        }
      },
      "generator": "Here is some information about a value proposition: {context}.\nAnd here is some further context {information}\n\nUsing the information provided produce content that will be used in landing page for the value proposition - being careful to ensure they are relevant for the {field_list} provided. Be factual and avoid hyperbole."
    },
    {
      "menu": true,
      "command": "generate",
      "key": "generate_pricing_options",
      "title": "Generate pricing options",
      "inputs": [
        {
          "referenceId": 92,
          "target": "parents",
          "type": "concept",
          "plural": "Concepts",
          "title": "underlying concept",
          "useContext": true
        },
        {
          "referenceId": 10,
          "type": "problem",
          "plural": "problems",
          "title": "Problems to address",
          "fields": [
            "title"
          ],
          "consolidate": true
        },
        {
          "referenceId": 93,
          "target": "parents",
          "type": "persona",
          "plural": "personas",
          "title": "Personas to target",
          "useContext": true
        }
      ],
      "multiple": true,
      "resultCategoryId": 101,
      "useContext": true,
      "resultFields": {
        "title": {
          "prompt": "A 1 word title for the pricing tier",
          "target": "title"
        },
        "description": {
          "prompt": "A 3 - 4 word description of where the tier could be most applicable",
          "target": "description"
        },
        "features": {
          "title": "features",
          "_prompt": "A json object with feature names as the keys with the value set to upto 5 words describing the feature including the volumertic constraint or availability in this pricing tier as the value (for example searches:\"Up to 10 searches / mo\"), features with volumetrics must not be unlimited, choose a relevant volume instead. The data will be shown in a narrow table so be brief and use abbreviations like /mo rather than per month and '-' rather than 'Not available'.",
          "prompt": "A json object with feature identifier as the key and the value set to either 1) a concrete and concise description (up to 7 words) of the feature and the volumetric constraint of the feature in this tier in the format \"[verb up to [volume] [feature] / mo\", or 2) for features without volumetric constraints set to the description of the feature or FALSE as approproate."
        }
      },
      "generator": "Here is some information about a value proposition: {context}.\nAnd here is some further context {information}\n\nUsing the information provided identify a set of key 4-6 specific, concrete and relevant key features that the users would value and then design 2-3 pricing tiers for the product from lowest capability to highest in which more advanced tiers have access to premium features or have less constraints on feature volume than lower tiers. No volumetric feature should be unlimited in any tier, always define a suitable volume. Ensure you use the same features across tiers although they can be market as 'Not available' where necessary. "
    }
  ],
  "ai": {
    "summarize": {
      "summary": {
        "dataTypes": "value propositions",
        "prompt": "Produce a summary a 100-150 word summary of the values propositions offered in this segment. Ensure you capture the nuances of all value propositions but do not focus on the nuances of any particular one. Do not create a long list of value propositions - create a readable paragrpah or 2 - and use the form \"Value propositions which...\""
      },
      "overview": {
        "dataTypes": "value propositions",
        "prompt": "Produce a 3 paragaph summary of a 200-300 words total describing the values propositions offered in this segment. Ensure you capture the nuances of all value propositions but do not focus on the nuances of any particular one. Do not create a long list of value propositions - create a readable paragrpah or 2 - and use the form \"Value propositions which...\""
      },
      "top_5": {
        "dataTypes": "value propositions",
        "prompt": "Generate a numbered list of the top 5 most prevalent and valuable value propositions in the original list. Avoid generalizations and ensure that a concrete and meaningful problem is specified. Provide the answer in the form \"n) Value propositions which...\""
      }
    },
    "process": {
      "context": {
        "fields": {
          "summary": "Summary",
          "target": "Target personas",
          "problems": "Key problems addressed",
          "solutions": "Solutions provided"
        }
      }
    }
  },
  "resultCategories": [
    {
      "id": 0,
      "title": "Messaging",
      "plurals": "Messaging",
      "resultCategoryId": 94,
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        },
        "showLink": true
      }
    },
    {
      "id": 1,
      "title": "Landing page",
      "plurals": "Landing pages",
      "resultCategoryId": 100,
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        },
        "showLink": true
      }
    },
    {
      "id": 2,
      "title": "Pricing tier",
      "plurals": "Pricing tiers",
      "resultCategoryId": 101,
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        },
        "showLink": true
      }
    }
  ]
},
{
  "_id": {
    "$oid": "65e9db0af85a341fad861fbf"
  },
  "id": 92,
  "title": "Concept",
  "description": "Concept",
  "icon": "LightBulbIcon",
  "parameters": {
    "overview": {
      "title": "Overview",
      "optional": true,
      "type": "string"
    },
    "image_style": {
      "type": "string",
      "title": "Image style prompt"
    }
  },
  "primitiveType": "concept",
  "actions": [
    {
      "menu": true,
      "key": "generate",
      "title": "Generate value proposition",
      "inputs": [
        {
          "referenceId": 93,
          "type": "persona",
          "plural": "personas",
          "title": "Potential target personas for the concepts",
          "target": "results.0",
          "fields": [
            "summary",
            "needs",
            "experience_level",
            "responsibilities",
            "role"
          ],
          "consolidate": true
        }
      ],
      "multiple": true,
      "resultCategoryId": 91,
      "useContext": true,
      "resultFields": {
        "title": {
          "prompt": "a short summary of the value propostion in the form \"[value delivered] to [target user] who [core need or problem]\"",
          "target": "title"
        },
        "target": {
          "prompt": "a ~10 word role description of the target user or customer",
          "target": "referenceParameters.target"
        },
        "problems": {
          "prompt": "a short description of the problems faced by the target cutsomer or user that are addressed by the value proposition",
          "target": "referenceParameters.problems"
        },
        "needs": {
          "prompt": "a short description of the needs of the target cutsomer or user that are addressed by the value proposition",
          "target": "referenceParameters.needs"
        },
        "solutions": {
          "prompt": "a short description of the solution provided by the value proposition",
          "target": "referenceParameters.solutions"
        },
        "summary": {
          "prompt": "a 30-40 word summary of the value proposition",
          "target": "referenceParameters.summary"
        }
      },
      "generator": "Here is some information about a concept called {title}: {context}.\nAnd here is some information about the target market {information}\n\nUsing the information provided about {title} produce a consolidated list of concrete and specific value propositions being careful to ensure they are relevant for the {field_list} provided and are not duplicative. Be factual and avoid hyperbole."
    },
    {
      "key": "build_generic_view",
      "command": "build_generic_view",
      "title": "Create view",
      "field": "title",
      "menu": false,
      "baseCategory": 97,
      "actionFields": {
        "referenceId": {
          "title": "Items to view",
          "type": "categoryId",
          "activeOnly": true,
          "allowNone": true
        }
      }
    }
  ],
  "ai": {
    "process": {
      "context": {
        "fields": {
          "overview": "",
          "capabilities": {
            "title": "Key capabilities",
            "prefix": "Capability ",
            "referenceId": 99
          }
        }
      }
    }
  },
  "resultCategories": [
    {
      "id": 2,
      "title": "Capability",
      "plurals": "Capabilites",
      "resultCategoryId": 99,
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        },
        "showLink": true
      }
    },
    {
      "id": 0,
      "title": "Persona",
      "plurals": "Personas",
      "resultCategoryId": 93,
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        },
        "showLink": true
      }
    },
    {
      "id": 1,
      "title": "Value proposition",
      "plurals": "Value proposition",
      "resultCategoryId": 91,
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        },
        "showLink": true
      }
    }
  ]
},
{
  "_id": {
    "$oid": "65e9dc8bf85a341fad861fc0"
  },
  "id": 93,
  "title": "Persona",
  "description": "Persona",
  "icon": "UserIcon",
  "parameters": {
    "roles": {
      "title": "Roles",
      "type": "string"
    },
    "problems": {
      "title": "Problems",
      "type": "string"
    },
    "needs": {
      "title": "Needs",
      "type": "string"
    },
    "summary": {
      "title": "Summary",
      "type": "long_string"
    },
    "experience_level": {
      "title": "Experience level",
      "type": "string"
    },
    "responsibilities": {
      "title": "Responsibilities",
      "type": "string"
    },
    "organization_type": {
      "title": "Organization",
      "type": "string"
    }
  },
  "primitiveType": "evidence",
  "resultCategories": [
    {
      "id": 0,
      "title": "Persona",
      "plurals": "Personas",
      "type": "evidence",
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        }
      }
    }
  ],
  "ai": {
    "categorize": {
      "organization_type": {
        "build": {
          "type": "Organizations that people work at",
          "theme": "Types of organization by considering size, target customers, domain or sector"
        },
        "mark": {
          "type": "Organizations types",
          "theme": "Types of organization by considering size, target customers, domain or sector"
        }
      }
    },
    "process": {
      "context": {
        "fields": {
          "summary": "Summary",
          "roles": "Roles",
          "experience_level": "Experience Level",
          "organization_type": "Organization type",
          "responsibilities": "Responsibilities"
        }
      }
    }
  }
},
{
  "_id": {
    "$oid": "65eaf5a6f85a341fad861fc3"
  },
  "id": 94,
  "title": "Proposition Messaging",
  "description": "Messaging for a Proposition",
  "icon": "GiftIcon",
  "parameters": {
    "headline": {
      "title": "Headline",
      "type": "string"
    },
    "subheadline": {
      "title": "Subheadline",
      "type": "string"
    },
    "problem": {
      "title": "Problem statement",
      "type": "string"
    },
    "benefits": {
      "title": "Benefits",
      "type": "string"
    },
    "solution": {
      "title": "Solution",
      "type": "string"
    },
    "proof": {
      "title": "Proof points",
      "type": "string"
    }
  },
  "primitiveType": "evidence",
  "actions": [
    {
      "menu": true,
      "key": "generate",
      "title": "Generate ad copy",
      "inputs": [
        {
          "referenceId": 92,
          "type": "concept",
          "plural": "concepts",
          "title": "Overview of the concept",
          "target": "hierarchy",
          "useContext": true
        },
        {
          "referenceId": 10,
          "type": "problem",
          "plural": "problems",
          "title": "Problems to address",
          "target": "hierarchy",
          "fields": [
            "title"
          ],
          "consolidate": true
        },
        {
          "referenceId": 93,
          "target": "hierarchy",
          "type": "persona",
          "plural": "personas",
          "title": "Personas to target",
          "useContext": true
        }
      ],
      "multiple": true,
      "resultCategoryId": 95,
      "useContext": true,
      "showInCollection": true,
      "resultFields": {
        "emphasis": {
          "prompt": "the emphais of the ad"
        },
        "image_prompt": {
          "prompt": "a prompt of up 40 words that can be used with dall-e to generate an appropriate and relevant image for the ad"
        },
        "tone": {
          "prompt": "the tone of the ad"
        },
        "title": {
          "prompt": "a short summary of the ad copy in the form \"[tone] [key message] for [audience]\"",
          "target": "title"
        },
        "headline": {
          "title": "Headline",
          "prompt": "Immediately grab attention with a clear and compelling statement. Include the main benefit or unique value proposition."
        },
        "subheadline": {
          "title": "Subheadline",
          "prompt": "Provide additional context or detail to the headline, elaborating on the value proposition. Include a secondary benefit or how the product solves a specific problem."
        },
        "audience_roles": {
          "title": "Roles",
          "prompt": "A list of upto 10 job titles or roles that the audience are likely to have and be targetted with - be expansive and offer alternatives but ensure they are relevant (if relevant)"
        },
        "audience_market": {
          "title": "Market",
          "prompt": "A list of upto 10 segments of the market (such as business type, consumer demographic etc) the audience can be targeted with - be expansive and offer alterntives but ensure they are relevant (if relevant)"
        },
        "audience_interests": {
          "title": "Interests",
          "prompt": "A list of upto 6 relevant interests the audience can be targeted with (if relevant)"
        }
      },
      "generator": "Here is the core messaging for a proposition: {context}.\nAnd here is some relevant context about the messaging\n{information}\n\nUsing the information provided produce up to 8 candidate Ad copy variations with each version using a different tone and empahsising a different features, benefits or problem that is addressed. Be careful to ensure that all variations are relevant for the {field_list} provided and are not duplicative. Be factual and avoid hyperbole."
    },
    {
      "menu": true,
      "command": "generate",
      "key": "generate_ad_search",
      "title": "Generate search ads",
      "inputs": [
        {
          "referenceId": 92,
          "type": "concept",
          "plural": "concepts",
          "title": "Overview of the concept",
          "target": "hierarchy",
          "useContext": true
        },
        {
          "referenceId": 10,
          "type": "problem",
          "plural": "problems",
          "title": "Problems to address",
          "target": "hierarchy",
          "fields": [
            "title"
          ],
          "consolidate": true
        },
        {
          "referenceId": 93,
          "target": "hierarchy",
          "type": "persona",
          "plural": "personas",
          "title": "Personas to target",
          "useContext": true
        }
      ],
      "showInCollection": true,
      "multiple": true,
      "resultCategoryId": 96,
      "useContext": true,
      "resultFields": {
        "title": {
          "prompt": "a short summary of the ad in the form \"[tone] [key message] for [audience]\"",
          "target": "title"
        },
        "headline": {
          "title": "Headline",
          "prompt": "A headline of up to 30 characters to immediately grab attention with a clear and compelling statement. Include the main benefit or unique value proposition."
        },
        "description": {
          "title": "Description",
          "prompt": "Upto 90 characters providing additional context or detail to the headline, elaborating on the value proposition. Include a secondary benefit or how the product solves a specific problem."
        },
        "keywords": {
          "title": "Keywords",
          "nest": true,
          "resultCategoryId": 98,
          "prompt": "Upto 10 keywords that would be sutable to use in a google ad ppc search campaign."
        },
        "longtail": {
          "title": "Lontail",
          "nest": true,
          "resultCategoryId": 98,
          "prompt": "Upto 4 longtail search phrases that would be sutable to use in a google ad ppc search campaign."
        },
        "page": {
          "title": "Page",
          "prompt": "a suggestion for the pathname of a landing page this ad should point to (do not include the domain name)"
        }
      },
      "generator": "Here is the core messaging for a proposition: {context}.\nAnd here is some relevant context about the messaging\n{information}\n\nUsing the information provided produce up to 6 candidate search ads variations with each version using a different tone and empahsising a different features, benefits or problem that is addressed. Be careful to ensure that all variations are relevant for the {field_list} provided and are not duplicative. Be factual and avoid hyperbole."
    }
  ],
  "ai": {
    "process": {
      "context": {
        "fields": {
          "headline": "Headline",
          "subheadline": "Subheadline",
          "problem": "Key problems addressed",
          "benefits": "Key benefits delviered",
          "solution": "Solutions provided"
        }
      }
    }
  },
  "resultCategories": [
    {
      "id": 0,
      "title": "Ad copy",
      "plurals": "Ad copy",
      "resultCategoryId": 95,
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        },
        "showLink": true
      }
    },
    {
      "id": 1,
      "title": "Search Ad",
      "plurals": "Search Ads",
      "resultCategoryId": 96,
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        },
        "showLink": true
      }
    }
  ]
},
{
  "_id": {
    "$oid": "65eb3216f85a341fad861fc4"
  },
  "id": 95,
  "title": "Ad copy",
  "description": "Ad copy variant",
  "icon": "GiftIcon",
  "parameters": {
    "emphasis": {
      "title": "Empahsis",
      "type": "string"
    },
    "image_prompt": {
      "title": "Image prompt",
      "type": "string"
    },
    "tone": {
      "title": "Tone",
      "type": "string"
    },
    "headline": {
      "title": "Headline",
      "type": "string"
    },
    "subheadline": {
      "title": "Subheadline",
      "type": "string"
    },
    "audience_roles": {
      "title": "Audience roles",
      "type": "list"
    },
    "audience_market": {
      "title": "Audience market",
      "type": "list"
    },
    "audience_interests": {
      "title": "Audience interests",
      "type": "list"
    }
  },
  "primitiveType": "evidence",
  "actions": [
    {
      "key": "generate_hero",
      "command": "build_image",
      "title": "Generate ad image",
      "field": "referenceParameters.image_prompt",
      "aspect": "wide",
      "image_style": "Generate a high-definition, sharp, abstract infographic style image for an ad used to target sophisticated business leaders. The image should combine vibrant neon green waves with floating digital nodes that represent interconnected data points, on a deep green background. The aesthetic should be sleek and modern but simple and minimalist. Include a placeholder for a company logo in the upper left corner.  The image should represent",
      "menu": true,
      "showInCollection": true
    }
  ],
  "ai": {
    "process": {
      "context": {
        "fields": {
          "headline": "Headline",
          "subheadline": "Subheadline",
          "audience_roles": "Target audience",
          "audience_interests": "Audience interests",
          "audience_market": "Target market"
        }
      }
    }
  }
},
{
  "_id": {
    "$oid": "65eb703b3156139c1c404f06"
  },
  "id": 96,
  "title": "Adwords",
  "description": "Adwords",
  "icon": "GiftIcon",
  "parameters": {
    "headline": {
      "title": "Headline",
      "type": "string"
    },
    "description": {
      "title": "Description",
      "type": "string"
    },
    "page": {
      "title": "Page",
      "type": "string"
    }
  },
  "primitiveType": "evidence",
  "actions": [],
  "resultCategories": [
    {
      "id": 0,
      "title": "Keywords",
      "plurals": "Keywords",
      "resultCategoryId": 98,
      "descend": true,
      "views": {
        "options": {
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "title",
                "title": "Title",
                "width": 0.7
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "table"
        }
      }
    }
  ],
  "ai": {
    "process": {
      "context": {
        "fields": {
          "headline": "Headline",
          "subheadline": "Subheadline",
          "audience_roles": "Target audience",
          "audience_interests": "Audience interests",
          "audience_market": "Target market"
        }
      }
    }
  }
},
{
  "_id": {
    "$oid": "65ec2ba63156139c1c404f07"
  },
  "id": 97,
  "title": "Map",
  "description": "Generic Map",
  "parameters": {
    "target": {
      "title": "Items",
      "description": "Items to map",
      "type": "category_source",
      "locked": true
    },
    "referenceId": {
      "title": "Evidence",
      "description": "Type of evidence",
      "type": "categoryId",
      "hidden": true,
      "locked": true
    },
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "type": "category_field",
      "locked": true
    }
  },
  "actions": [
    {
      "key": "categorize",
      "title": "Categorize items in map",
      "menu": "false",
      "aiConfig": {
        "param.offerings": {
          "types": "organization descriptions",
          "combinePrompt": "Generate a summary of the offerings in the form 'Offerings related to...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific offerings in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the offerings in the form 'Offerings providing...' which describes the common theme or focus of all offerings.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        },
        "param.customers": {
          "types": "target customers of companies",
          "combinePrompt": "Generate a summary of the target customers in the form 'Customer segements which...' in no more than 30 words.  Include only details of the common elements without mentioning any nuances of specific customers in the list. Be specific and highlight distinguishing elements",
          "prompt": "Generate a summary of the target customers in the form 'Customer segements which...' which describes the common theme or focus of all target customers.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
        }
      },
      "engine": "gpt4p"
    },
    {
      "key": "mark_categories",
      "title": "Categorize items in map",
      "menu": "false",
      "engine": "gpt4p"
    }
  ],
  "icon": "SignalIcon",
  "primitiveType": "view"
},
{
  "_id": {
    "$oid": "65ec543af85a341fad861fc5"
  },
  "id": 98,
  "title": "Search Keywords",
  "description": "Search Keywords",
  "icon": "GiftIcon",
  "parameters": {
    "avg_monthly": {
      "title": "Monthly avg",
      "type": "number"
    },
    "last_12_mo": {
      "title": "Last 12mo",
      "type": "list"
    },
    "competition": {
      "title": "Competition",
      "type": "string"
    },
    "yoy_change": {
      "title": "YoY change",
      "type": "string"
    },
    "bid_high": {
      "title": "Bid high",
      "type": "currency"
    },
    "bid_low": {
      "title": "Bid low",
      "type": "currency"
    }
  },
  "primitiveType": "evidence",
  "actions": [
    {
      "menu": true,
      "showInCollection": true,
      "title": "Get keyword metrics",
      "key": "keyword_metrics"
    }
  ],
  "ai": {}
},
{
  "_id": {
    "$oid": "65ef383a3156139c1c404f08"
  },
  "id": 99,
  "title": "Capabilities",
  "description": "Capabilities",
  "icon": "GiftIcon",
  "parameters": {},
  "primitiveType": "evidence",
  "actions": [],
  "ai": {}
},
{
  "_id": {
    "$oid": "65f00d8d3156139c1c404f09"
  },
  "id": 100,
  "title": "Landing page",
  "description": "Landing page",
  "icon": "DocumentIcon",
  "parameters": {
    "title": {
      "title": "Title",
      "type": "string"
    },
    "hero_text": {
      "title": "Hero text",
      "type": "string"
    },
    "hero_overview": {
      "title": "Overview",
      "type": "string"
    },
    "hero_image_prompt": {
      "title": "Hero image prompt",
      "type": "string"
    },
    "how_it_works": {
      "title": "How it works",
      "type": "string"
    },
    "benefits": {
      "title": "Benfits",
      "type": "string"
    },
    "use_cases": {
      "title": "Use cases",
      "type": "string"
    }
  },
  "primitiveType": "evidence",
  "actions": [
    {
      "key": "generate_hero",
      "command": "build_image",
      "title": "Generate hero image",
      "field": "referenceParameters.hero_image_prompt",
      "image_style": "Create a high-contrast abstract image with a fluid, dynamic pattern from a single geomteric shapes in various shades of high contrast green and #00d967 as the accent color on a dark background, intended for use as a website hero image. The design should be modern and elegant, not too busy, suitable for a professional service website, evoking a sense of expert knowledge and precision. The image should be clean and not too busy",
      "menu": true
    },
    {
      "key": "generate_hit_it_works",
      "command": "build_image",
      "title": "Generate how it works image",
      "image_tag": "hiw",
      "field": "referenceParameters.how_it_works",
      "asList": true,
      "_image_style": "Create an image featuring simple crisp icons and sharp lines to representation of the process i am about to give you ensuring you include something for each step and show the progression and flow of the process. The overall look should be airy and clean, suitable for a tech-savvy professional environment. The color palette should be a white background, white greys and high contrast green such as Malachite (#00d967) used as an accent color.\nHere is the process to represent:\n",
      "image_style": "Generate an image representing the process i am about to give you with by using a variety of abstract geometric shapes or icons connected by lines, indicating a progression or flow of information. Each shape should be distinct and colorful, with simple sharp abstract designs that suggests a functions relevant to the corresponding step in the process. The overall aesthetic should be sharp, clean, modern, and suitable for illustrating concepts like team collaboration, project management, or service integration in a corporate environment. It must have a black background and use only high contrast greens for lines and fills. Here is the process to represent:\n",
      "menu": true
    },
    {
      "key": "generate_use_case",
      "command": "build_image",
      "title": "Generate use case images",
      "image_tag": "uc",
      "field": "referenceParameters.use_cases",
      "icon": true,
      "_image_style": "Generate an simple and uncluttered line art icon on a black background to represent ",
      "menu": true
    },
    {
      "key": "screenshot",
      "title": "Screenshot published page",
      "menu": true
    }
  ],
  "ai": {}
},
{
  "_id": {
    "$oid": "65f15c4c3156139c1c404f0b"
  },
  "id": 101,
  "title": "Pricing tier",
  "description": "Pricing tier",
  "icon": "CurrencyDollarIcon",
  "parameters": {
    "description": {
      "title": "Description",
      "type": "string"
    },
    "price_month": {
      "title": "Monthly price",
      "type": "currency"
    }
  },
  "autoParam": true,
  "primitiveType": "evidence",
  "actions": [],
  "ai": {}
},
{
  "_id": {
    "$oid": "65f31f10e8afa07f05839af8"
  },
  "id": 102,
  "title": "Board",
  "description": "Board",
  "parameters": {
    "description": {
      "title": "Description",
      "type": "string"
    }
  },
  "primitiveType": "board",
  "actions": [],
  "ai": {}
},
{
  "_id": {
    "$oid": "65fd3e874b3b86b5b812f3da"
  },
  "id": 103,
  "title": "Auto view category",
  "description": "View filter",
  "parameters": {
    "target": {
      "title": "Categorize",
      "description": "Items to categorize",
      "type": "category_source",
      "scope": [
        "items",
        {
          "scope": "parents",
          "types": [
            "result",
            "entity"
          ]
        }
      ]
    }
  },
  "primitiveType": "category"
},
{
  "_id": {
    "$oid": "662e4ab32b966de21cc1ce1f"
  },
  "id": 104,
  "title": "Market research baseline",
  "description": "Market research",
  "parameters": {
    "topics": {
      "type": "string",
      "title": "Research area",
      "asAxis": false
    },
    "focus": {
      "type": "string",
      "title": "Focus",
      "asAxis": false
    },
    "summary": {
      "type": "string",
      "title": "Summary",
      "asAxis": false
    }
  },
  "actions": [
    {
      "menu": true,
      "key": "scaffold",
      "command": "generate",
      "title": "Map out workflow",
      "inputs": [],
      "multiple": true,
      "resultCategoryId": 105,
      "context_fields": [
        "topics"
      ],
      "resultFields": {
        "title": {
          "prompt": "containing a title for the stage",
          "target": "title"
        },
        "step": {
          "prompt": "The number of the step in the value chain or process - starting from 1 ",
          "target": "step"
        },
        "description": {
          "prompt": "containing a short description of the stage",
          "target": "description"
        }
      },
      "resultPrefix": "with an entry for each and every stage from the list i have provided",
      "generator": "You are a market research specialist preparing a detailed brief on '{context}'. First identify the key stages in the value chain or process of the research area.",
      "test": false
    },
    {
      "menu": true,
      "key": "scaffold_stages",
      "command": "cascade",
      "title": "Scaffold stages",
      "cascadeKey": [
        "scaffold_stage"
      ]
    },
    {
      "key": "build_generic_view",
      "command": "build_generic_view",
      "title": "Create view",
      "field": "title",
      "menu": false,
      "baseCategory": 97,
      "actionFields": {
        "referenceId": {
          "title": "Items to cluster",
          "referenceids": [
            10,
            29
          ],
          "_primitiveTypes": [
            "evidence"
          ],
          "type": "category_source",
          "allowNone": true
        },
        "descend": {
          "title": "Include nested items",
          "type": "boolean"
        }
      }
    }
  ],
  "sections": {
    "categories": true,
    "questions": true
  },
  "icon": "SignalIcon",
  "resultCategories": [
    {
      "id": 0,
      "title": "Stage",
      "plurals": "Stages",
      "resultCategoryId": 105,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "defaultWide": "table"
        }
      }
    },
    {
      "id": 1,
      "title": "Organization",
      "plurals": "Organizations",
      "resultCategoryId": 29,
      "searchCategoryIds": [
        69
      ],
      "views": {
        "options": {
          "_explore": {
            "show": true
          },
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "logo_title",
                "title": "Name",
                "width": 250
              },
              {
                "field": "description",
                "title": "Description",
                "width": 0.4
              },
              {
                "field": "offerings",
                "title": "Offerings",
                "width": 0.1
              },
              {
                "field": "customers",
                "title": "Target customers",
                "width": 0.1
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "_cluster": {
            "show": true
          },
          "_proximity": {
            "show": true
          },
          "default": "cards",
          "defaultWide": "table",
          "fullPageExplorer": true,
          "createFromPaste": [
            {
              "title": "LinkedIn Profile URL",
              "field": "linkedIn"
            },
            {
              "title": "Website URL",
              "field": "url"
            }
          ]
        }
      }
    },
    {
      "id": 2,
      "title": "Article",
      "plurals": "Articles",
      "resultCategoryId": 34,
      "searchCategoryIds": [
        68
      ],
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "sourceType",
                "name": "Type"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "default": "cards",
          "descend": true
        }
      }
    },
    {
      "id": 3,
      "title": "Social activity",
      "plurals": "Social activities",
      "searchCategoryIds": [
        67
      ],
      "resultCategoryId": 63,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 4,
      "title": "Person",
      "plurals": "People",
      "searchCategoryIds": [],
      "resultCategoryId": 58,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 5,
      "title": "Data query",
      "plurals": "Data queries",
      "resultCategoryId": 81,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 6,
      "title": "Report",
      "plurals": "Reports",
      "resultCategoryId": 85,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "defaultWide": "table"
        }
      }
    }
  ],
  "evidenceCategories": [],
  "primitiveType": "activity",
  "ai": {
    "process": {
      "context": {
        "fields": {
          "topics": "Research area",
          "focus": "Specific focus"
        }
      }
    }
  }
},
{
  "_id": {
    "$oid": "662e789f2b966de21cc1ce21"
  },
  "id": 105,
  "title": "Stage (value chain)",
  "parameters": {
    "step": {
      "title": "Step",
      "type": "number"
    },
    "description": {
      "type": "long_string",
      "title": "Overview",
      "asAxis": false
    },
    "focus_overview": {
      "type": "long_string",
      "title": "Overview",
      "asAxis": false
    },
    "problems": {
      "type": "list",
      "title": "Example problems",
      "asAxis": false
    },
    "problem_keywords": {
      "type": "list",
      "title": "Problem keywords",
      "asAxis": false
    },
    "solutions": {
      "type": "list",
      "title": "Example solutions",
      "asAxis": false
    },
    "actors": {
      "type": "list",
      "title": "Example actors",
      "asAxis": false
    }
  },
  "description": "A key stage of a value chain",
  "actions": [
    {
      "menu": true,
      "key": "scaffold_stage",
      "command": "generate",
      "title": "Scaffold stage",
      "inputs": [
        {
          "referenceId": 104,
          "target": "parents",
          "type": "research area",
          "plural": "research_areas",
          "title": "",
          "useContext": true
        }
      ],
      "multiple": true,
      "resultFields": {
        "title": {
          "prompt": "the title of the stage",
          "target": "title"
        },
        "description": {
          "prompt": "an detailed description of the stage without reference to its relative position in the chain in 50-70 words and in the form '[name of stage]....'",
          "target": "description"
        },
        "focus_overview": {
          "prompt": "an detailed description of the relevance of the focus area for the specific stage in 200-300 words",
          "target": "focus_overview"
        },
        "problems": {
          "prompt": "a list of up to 10 concrete and specific problems which are in the intersection of the research area, the specific focus, and the specific stage, in the format 'It sucks that...'",
          "target": "problems"
        },
        "problem_keywords": {
          "prompt": "a list of 10-20 search terms which can be used for a subsequent web search to find examples of problems which relate specifically to the intersection of the research area, the specific focus, and the specific stage (do not be generic - instead include discriminating terms relevant to the research area)",
          "target": "problem_keywords"
        },
        "solutions": {
          "prompt": "a list of up to 20 critical technolgies or capabilities which are relevant to the focus AND the stage (do not mention specific vendors but be specific to the research areas and include discriminating terms)",
          "target": "solutions"
        },
        "actors": {
          "prompt": "a list of up to 20 key personas which consume, provide, enable, oversee or regulate actvitiy within with the focus area AND the stage (these must include discriminating terms related to the research and focus areas and must not be generic job titles or names)",
          "target": "actors"
        }
      },
      "preDescription": "",
      "useContext": true,
      "resultPrefix": "with an entry for each and every stage from the list i have provided",
      "generator": "You are a market research specialist preparing a detailed brief on '{information}' within the {title} stage of the research area.",
      "updateSelf": true,
      "test": false
    },
    {
      "key": "extract_problems",
      "command": "evidence_from_query",
      "promptField": "problem_keywords",
      "title": "Find problems in content",
      "topic": "the research space",
      "resultCategoryId": 10,
      "menu": true,
      "actionFields": {
        "limit": {
          "title": "Limit to items from here",
          "type": "boolean",
          "default": true
        }
      }
    }
  ],
  "icon": "ExclamationTriangleIcon",
  "primitiveType": "marketsegment",
  "resultCategories": [
    {
      "id": 0,
      "title": "Organization",
      "plurals": "Organizations",
      "resultCategoryId": 29,
      "searchCategoryIds": [
        69
      ],
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "logo_title",
                "title": "Name",
                "width": 250
              },
              {
                "field": "description",
                "title": "Description",
                "width": 0.4
              },
              {
                "field": "offerings",
                "title": "Offerings",
                "width": 0.1
              },
              {
                "field": "customers",
                "title": "Target customers",
                "width": 0.1
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "defaultWide": "table",
          "fullPageExplorer": true,
          "createFromPaste": [
            {
              "title": "LinkedIn Profile URL",
              "field": "linkedIn"
            },
            {
              "title": "Website URL",
              "field": "url"
            }
          ]
        }
      }
    },
    {
      "id": 1,
      "title": "Article",
      "plurals": "Articles",
      "resultCategoryId": 34,
      "searchCategoryIds": [
        68
      ],
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "name": "Id"
              },
              {
                "field": "sourceType",
                "name": "Type"
              },
              {
                "field": "title",
                "name": "Title"
              }
            ],
            "sort": "id"
          },
          "default": "cards",
          "descend": true
        }
      }
    },
    {
      "id": 2,
      "title": "Social activity",
      "plurals": "Social activities",
      "searchCategoryIds": [
        67
      ],
      "resultCategoryId": 63,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    },
    {
      "id": 7,
      "title": "Data query",
      "plurals": "Data queries",
      "resultCategoryId": 81,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards"
        }
      }
    }
  ],
  "ai": {
    "process": {
      "context": {
        "fields": {
          "area": {
            "target": "hierarchy",
            "referenceId": 104,
            "field": "context"
          },
          "title": "Stage",
          "description": "Overview"
        }
      }
    }
  }
},
{
  "_id": {
    "$oid": "66422b22df3dea0f8e44bb70"
  },
  "id": 106,
  "title": "Analysis",
  "parameters": {
    "description": {
      "type": "long_string",
      "title": "Description",
      "asAxis": false
    },
    "scope": {
      "type": "primitive",
      "referenceId": 38,
      "title": "Scope"
    },
    "referenceCategoryFilter": {
      "type": "categoryId",
      "title": "Category filter"
    }
  },
  "description": "A set of related queries",
  "icon": "ExclamationTriangleIcon",
  "actions": [
    {
      "key": "build_generic_view",
      "command": "build_generic_view",
      "title": "Create view",
      "field": "title",
      "menu": false,
      "baseCategory": 97,
      "actionFields": {
        "referenceId": {
          "title": "Items to cluster",
          "referenceIds": [
            10,
            29,
            63,
            78,
            82,
            107
          ],
          "type": "categoryId",
          "allowNone": true
        },
        "descend": {
          "title": "Include nested items",
          "type": "boolean"
        }
      }
    }
  ],
  "primitiveType": "working",
  "resultCategories": [
    {
      "id": 0,
      "title": "Query",
      "plurals": "Queries",
      "resultCategoryId": 81,
      "views": {
        "options": {
          "cards": {
            "fields": [
              "title"
            ],
            "wide": true,
            "sort": "title"
          },
          "table": {
            "fields": [
              {
                "field": "id",
                "title": "Id"
              },
              {
                "field": "logo_title",
                "title": "Name",
                "width": 250
              },
              {
                "field": "description",
                "title": "Description",
                "width": 0.4
              },
              {
                "field": "offerings",
                "title": "Offerings",
                "width": 0.1
              },
              {
                "field": "customers",
                "title": "Target customers",
                "width": 0.1
              }
            ],
            "wide": true,
            "sort": "title"
          },
          "default": "cards",
          "defaultWide": "table",
          "fullPageExplorer": true,
          "createFromPaste": [
            {
              "title": "LinkedIn Profile URL",
              "field": "linkedIn"
            },
            {
              "title": "Website URL",
              "field": "url"
            }
          ]
        }
      }
    }
  ],
  "ai": {
    "process": {
      "context": {
        "fields": {
          "area": {
            "target": "hierarchy",
            "referenceId": 104,
            "field": "context"
          },
          "title": "Stage",
          "description": "Overview"
        }
      }
    }
  }
},
{
  "_id": {
    "$oid": "66436e06df3dea0f8e44bb71"
  },
  "id": 107,
  "title": "Messaging",
  "description": "Market Messaging",
  "icon": "GiftIcon",
  "parameters": {
    "description": {
      "title": "Overview",
      "type": "string"
    },
    "emphasis": {
      "title": "Emphasis",
      "type": "string"
    },
    "tone": {
      "title": "Tone of voice",
      "type": "string"
    },
    "emotion": {
      "title": "Emotion",
      "type": "string"
    },
    "complexity": {
      "title": "Complexity",
      "type": "string"
    },
    "cta": {
      "title": "Call to action",
      "type": "string"
    }
  },
  "primitiveType": "evidence",
  "ai": {
    "process": {
      "context": {
        "fields": {
          "emphasis": "Emphasis",
          "tone": "Tone",
          "emotion": "Emotion",
          "complexity": "Complexity",
          "cta": "Call to action"
        }
      }
    },
    "extract": {
      "prompt": "Analyze the text to identify and extract examples of messaging to a target audience",
      "responseFields": {
        "tone": {
          "prompt": "the tone of voice of the messaging"
        },
        "emphasis": {
          "prompt": "what issue or opportunity the message is emphasising"
        },
        "cta": {
          "prompt": "the call to action"
        },
        "style": {
          "prompt": "the language style of the messaging"
        },
        "emotion": {
          "prompt": "the emotional content of the message"
        },
        "complexity": {
          "prompt": "how complex the messaging is"
        }
      }
    }
  }
},
{
  "_id": {
    "$oid": "664383cfdf3dea0f8e44bb74"
  },
  "id": 108,
  "title": "Organization social media search",
  "description": "Search for social media posts",
  "placeholder": "Search keywords (comma sperated)",
  "icon": "ShareIcon",
  "blankTitle": true,
  "nestedSearch": {
    "referenceCategoryId": 29
  },
  "parameters": {
    "sources": {
      "type": "options",
      "title": "Source",
      "description": "Social platforms to search",
      "options": [
        {
          "id": 0,
          "title": "LinkedIn Profile",
          "platform": "linkedin_ddg",
          "type": "posts",
          "primaryField": "url",
          "importField": "referenceParameters.url",
          "filterPre": "keyword",
          "filterMid": "topic_similarity",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "resultCategoryId": 63
        }
      ],
      "default": [
        0
      ]
    },
    "topic": {
      "type": "long_string",
      "title": "Topics to filter by",
      "placeholder": "From task",
      "optional": true
    },
    "exact": {
      "type": "boolean",
      "title": "Ensure an exact match to keyword / phrase",
      "default": true
    },
    "phrase": {
      "type": "boolean",
      "title": "Search for phrase",
      "default": true
    },
    "count": {
      "type": "number",
      "title": "Number",
      "description": "Target number of posts per search",
      "default": 100
    }
  },
  "actions": [],
  "primitiveType": "search"
},
{
  "_id": {
    "$oid": "66450ffbdf3dea0f8e44bb79"
  },
  "id": 109,
  "title": "Summary",
  "description": "Summary",
  "placeholder": "Genric summary",
  "icon": "ShareIcon",
  "blankTitle": true,
  "parameters": {
    "field": {
      "title": "Field",
      "description": "Field of item to use",
      "itemMeta": true,
      "type": "category_field",
      "includeContext": true,
      "includeContent": true
    },
    "summary_type": {
      "type": "option_list",
      "options": [
        "summary",
        "overview",
        "top_5",
        "custom"
      ],
      "title": "Summary type"
    },
    "prompt": {
      "type": "string",
      "title": "Custom prompt"
    }
  },
  "actions": [
    {
      "title": "Rebuild",
      "key": "rebuild_summary",
      "menu": false
    }
  ],
  "primitiveType": "summary"
},
{
  "_id": {
    "$oid": "6666b47b493c88237a047154"
  },
  "id": 110,
  "title": "Ad",
  "description": "Online Ad",
  "icon": "ShareIcon",
  "openai": {
    "opener": "here is the text of an online ad",
    "descriptor": "Answer the following questions using information from the post:",
    "summarize": {
      "source": {
        "field": "param.text"
      },
      "execute": {
        "types": "online ads",
        "prompt": "Generate a summary of the ads in the form 'Posts related to...' in 20-30 words which describes the common theme or focus of all posts.  Do not include any specific nuance of an individual item and do not include a list of items or phrases like 'variety of..' or 'including...', or generic terms like 'innovative' in your response ."
      }
    },
    "responseInstructions": "Your response must be in json format and should include each question or task with the key set to the question or task number and with an array of results. For question, each entry in the array must have a \"quote\" field containing the original text, a \"answer\" field containing your answer. If there is no result for a specific question set the \"quote\" field to \"none\" and exclude the \"answer\" field. For each task just provide an entry with an \"answer\" field set to your response."
  },
  "parameters": {
    "sponsorName": {
      "type": "string",
      "title": "Sponsor",
      "description": "Sponsor of ad"
    },
    "sponsorUrl": {
      "type": "url",
      "title": "Sponsor url",
      "description": "URL of Ad sponsor"
    },
    "description": {
      "type": "string",
      "title": "Ad Text",
      "description": "Text in Ad"
    },
    "platforms": {
      "type": "list",
      "title": "Platform",
      "description": "Platform Ads ran on"
    },
    "cta": {
      "type": "string",
      "title": "CTA",
      "description": "Call to Action in Ad"
    },
    "source": {
      "type": "string",
      "title": "Source"
    },
    "imageUrl": {
      "type": "url",
      "title": "Image URL",
      "description": "Main image"
    },
    "imageUrls": {
      "type": "list",
      "title": "Image variants"
    },
    "videos": {
      "type": "list",
      "title": "Videos"
    }
  },
  "actions": [
    {
      "key": "embed_content",
      "title": "Embed Content",
      "menu": true,
      "icon": "QuestionIcon"
    }
  ],
  "promptCategories": [
    45,
    43,
    46,
    49,
    21,
    61,
    62
  ],
  "primitiveType": "result",
  "do_discovery": true
},
{
  "_id": {
    "$oid": "6666b61c493c88237a047155"
  },
  "id": 111,
  "title": "Organization Ad search",
  "description": "Search for Ads",
  "placeholder": "Search keywords (comma sperated)",
  "icon": "ShareIcon",
  "blankTitle": true,
  "nestedSearch": {
    "referenceCategoryId": 29
  },
  "parameters": {
    "sources": {
      "type": "options",
      "title": "Source",
      "description": "Ad platforms to search",
      "options": [
        {
          "id": 0,
          "title": "Meta platforms",
          "platform": "meta_ads",
          "type": "ads",
          "primaryField": "id",
          "importField": "referenceParameters.id",
          "filterPre": "keyword",
          "filterMid": "topic_similarity",
          "filterPost": {
            "type": "topic",
            "threshold": 3
          },
          "resultCategoryId": 110
        }
      ],
      "default": [
        0
      ]
    },
    "topic": {
      "type": "long_string",
      "title": "Topics to filter by",
      "placeholder": "From task",
      "optional": true
    },
    "exact": {
      "type": "boolean",
      "title": "Ensure an exact match to keyword / phrase",
      "default": true
    },
    "phrase": {
      "type": "boolean",
      "title": "Search for phrase",
      "default": true
    },
    "count": {
      "type": "number",
      "title": "Number",
      "description": "Target number of posts per search",
      "default": 100
    }
  },
  "actions": [],
  "primitiveType": "search"
}]